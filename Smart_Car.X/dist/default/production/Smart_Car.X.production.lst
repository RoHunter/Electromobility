

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Feb 21 21:12:49 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 2.05
    34                           ; Generated 20/12/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F46K22 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	nvCOMRAM
    69  00005D                     __pnvCOMRAM:
    70                           	opt callstack 0
    71  00005D                     _UQEnd:
    72                           	opt callstack 0
    73  00005D                     	ds	1
    74  00005E                     _UQFront:
    75                           	opt callstack 0
    76  00005E                     	ds	1
    77  0000                     _ANSELAbits	set	3896
    78  0000                     _CCPR3L	set	3934
    79  0000                     _CCP3CON	set	3933
    80  0000                     _CCPTMRS0	set	3913
    81  0000                     _ANSELE	set	3900
    82  0000                     _ANSELD	set	3899
    83  0000                     _ANSELC	set	3898
    84  0000                     _ANSELB	set	3897
    85  0000                     _ANSELA	set	3896
    86  0000                     _TMR3	set	4018
    87  0000                     _TMR1	set	4046
    88  0000                     _TXREG2	set	3955
    89  0000                     _PIR3bits	set	4004
    90  0000                     _RCSTA2bits	set	3953
    91  0000                     _TXSTA2bits	set	3954
    92  0000                     _SPBRG2	set	3957
    93  0000                     _SPBRGH2	set	3958
    94  0000                     _BAUDCON2bits	set	3952
    95  0000                     _RCREG	set	4014
    96  0000                     _PORTBbits	set	3969
    97  0000                     _TXREG	set	4013
    98  0000                     _PIR1bits	set	3998
    99  0000                     _RCSTA1bits	set	4011
   100  0000                     _TXSTA1bits	set	4012
   101  0000                     _SPBRG1	set	4015
   102  0000                     _ADRESH	set	4036
   103  0000                     _ADCON0bits	set	4034
   104  0000                     _PIE1bits	set	3997
   105  0000                     _PIE3bits	set	4003
   106  0000                     _INTCONbits	set	4082
   107  0000                     _ADCON2bits	set	4032
   108  0000                     _ADCON2	set	4032
   109  0000                     _ADCON1	set	4033
   110  0000                     _ADCON0	set	4034
   111  0000                     _TRISAbits	set	3986
   112  0000                     _PR2	set	4027
   113  0000                     _T2CON	set	4026
   114  0000                     _CCP1CON	set	4029
   115  0000                     _CCP2CON	set	3942
   116  0000                     _OSCTUNEbits	set	3995
   117  0000                     _OSCCON	set	4051
   118  0000                     _TRISDbits	set	3989
   119  0000                     _LATE	set	3981
   120  0000                     _LATD	set	3980
   121  0000                     _LATC	set	3979
   122  0000                     _LATB	set	3978
   123  0000                     _LATA	set	3977
   124  0000                     _PORTE	set	3972
   125  0000                     _PORTD	set	3971
   126  0000                     _PORTC	set	3970
   127  0000                     _PORTB	set	3969
   128  0000                     _PORTA	set	3968
   129  0000                     _TRISE	set	3990
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISB	set	3987
   133  0000                     _TRISA	set	3986
   134  0000                     _PORTAbits	set	3968
   135  0000                     _CCPR1L	set	4030
   136  0000                     _CCPR2L	set	3943
   137  0000                     _LATDbits	set	3980
   138  0000                     _RCREG1	set	4014
   139  0000                     _RC1IF	set	31989
   140                           
   141                           	psect	smallconst
   142  001000                     __psmallconst:
   143                           	opt callstack 0
   144  001000  00                 	db	0
   145  001001                     STR_1:
   146  001001  55                 	db	85	;'U'
   147  001002  53                 	db	83	;'S'
   148  001003  41                 	db	65	;'A'
   149  001004  52                 	db	82	;'R'
   150  001005  54                 	db	84	;'T'
   151  001006  20                 	db	32
   152  001007  69                 	db	105	;'i'
   153  001008  6E                 	db	110	;'n'
   154  001009  69                 	db	105	;'i'
   155  00100A  74                 	db	116	;'t'
   156  00100B  69                 	db	105	;'i'
   157  00100C  61                 	db	97	;'a'
   158  00100D  6C                 	db	108	;'l'
   159  00100E  69                 	db	105	;'i'
   160  00100F  7A                 	db	122	;'z'
   161  001010  65                 	db	101	;'e'
   162  001011  64                 	db	100	;'d'
   163  001012  21                 	db	33
   164  001013  00                 	db	0
   165                           
   166                           ; #config settings
   167  001014  00                 	db	0	; dummy byte at the end
   168  0000                     
   169                           	psect	cinit
   170  001960                     __pcinit:
   171                           	opt callstack 0
   172  001960                     start_initialization:
   173                           	opt callstack 0
   174  001960                     __initialization:
   175                           	opt callstack 0
   176                           
   177                           ; Clear objects allocated to BANK0 (90 bytes)
   178  001960  EE00  F060         	lfsr	0,__pbssBANK0
   179  001964  0E5A               	movlw	90
   180  001966                     clear_0:
   181  001966  6AEE               	clrf	postinc0,c
   182  001968  06E8               	decf	wreg,f,c
   183  00196A  E1FD               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to COMRAM (34 bytes)
   186  00196C  EE00  F03B         	lfsr	0,__pbssCOMRAM
   187  001970  0E22               	movlw	34
   188  001972                     clear_1:
   189  001972  6AEE               	clrf	postinc0,c
   190  001974  06E8               	decf	wreg,f,c
   191  001976  E1FD               	bnz	clear_1
   192  001978                     end_of_initialization:
   193                           	opt callstack 0
   194  001978                     __end_of__initialization:
   195                           	opt callstack 0
   196  001978  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   197  00197A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   198  00197C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   199  00197E  6EF8               	movwf	tblptru,c
   200  001980  0100               	movlb	0
   201  001982  EFA3  F00B         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204  00003B                     __pbssCOMRAM:
   205                           	opt callstack 0
   206  00003B                     _timp_us:
   207                           	opt callstack 0
   208  00003B                     	ds	4
   209  00003F                     _tens:
   210                           	opt callstack 0
   211  00003F                     	ds	4
   212  000043                     _Ubat:
   213                           	opt callstack 0
   214  000043                     	ds	4
   215  000047                     _rez_adc_U:
   216                           	opt callstack 0
   217  000047                     	ds	4
   218  00004B                     _Ibat:
   219                           	opt callstack 0
   220  00004B                     	ds	4
   221  00004F                     _tens_A:
   222                           	opt callstack 0
   223  00004F                     	ds	4
   224  000053                     _rez_adc_A:
   225                           	opt callstack 0
   226  000053                     	ds	4
   227  000057                     _distanta:
   228                           	opt callstack 0
   229  000057                     	ds	2
   230  000059                     _TMR:
   231                           	opt callstack 0
   232  000059                     	ds	2
   233  00005B                     _cor:
   234                           	opt callstack 0
   235  00005B                     	ds	2
   236                           
   237                           	psect	bssBANK0
   238  000060                     __pbssBANK0:
   239                           	opt callstack 0
   240  000060                     _URBuff:
   241                           	opt callstack 0
   242  000060                     	ds	64
   243  0000A0                     _str_A:
   244                           	opt callstack 0
   245  0000A0                     	ds	8
   246  0000A8                     _str_V:
   247                           	opt callstack 0
   248  0000A8                     	ds	8
   249  0000B0                     	ds	5
   250  0000B5                     	ds	5
   251                           
   252                           	psect	cstackBANK0
   253  0000BA                     __pcstackBANK0:
   254                           	opt callstack 0
   255  0000BA                     USART2WriteChar@ch:
   256                           	opt callstack 0
   257  0000BA                     USARTInit@baud_rate:
   258                           	opt callstack 0
   259  0000BA                     USART2Init@baud_rate:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0x0
   263  0000BA                     	ds	1
   264  0000BB                     USART2WriteString@str:
   265                           	opt callstack 0
   266                           
   267                           ; 2 bytes @ 0x1
   268  0000BB                     	ds	1
   269  0000BC                     ??_USARTInit:
   270  0000BC                     ??_USART2Init:
   271                           
   272                           ; 1 bytes @ 0x2
   273  0000BC                     	ds	1
   274  0000BD                     
   275                           ; 1 bytes @ 0x3
   276  0000BD                     	ds	1
   277  0000BE                     ??_main:
   278                           
   279                           ; 1 bytes @ 0x4
   280  0000BE                     	ds	2
   281                           
   282                           	psect	cstackCOMRAM
   283  000001                     __pcstackCOMRAM:
   284                           	opt callstack 0
   285  000001                     ?___awdiv:
   286                           	opt callstack 0
   287  000001                     ?___xxtofl:
   288                           	opt callstack 0
   289  000001                     ___awdiv@dividend:
   290                           	opt callstack 0
   291  000001                     ___xxtofl@val:
   292                           	opt callstack 0
   293                           
   294                           ; 4 bytes @ 0x0
   295  000001                     	ds	2
   296  000003                     ___awdiv@divisor:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0x2
   300  000003                     	ds	2
   301  000005                     ??___xxtofl:
   302  000005                     ___awdiv@counter:
   303                           	opt callstack 0
   304                           
   305                           ; 1 bytes @ 0x4
   306  000005                     	ds	1
   307  000006                     ___awdiv@sign:
   308                           	opt callstack 0
   309                           
   310                           ; 1 bytes @ 0x5
   311  000006                     	ds	1
   312  000007                     ___awdiv@quotient:
   313                           	opt callstack 0
   314                           
   315                           ; 2 bytes @ 0x6
   316  000007                     	ds	2
   317  000009                     ___xxtofl@sign:
   318                           	opt callstack 0
   319                           
   320                           ; 1 bytes @ 0x8
   321  000009                     	ds	1
   322  00000A                     ___xxtofl@exp:
   323                           	opt callstack 0
   324                           
   325                           ; 1 bytes @ 0x9
   326  00000A                     	ds	1
   327  00000B                     ___xxtofl@arg:
   328                           	opt callstack 0
   329                           
   330                           ; 4 bytes @ 0xA
   331  00000B                     	ds	4
   332  00000F                     ?___flmul:
   333                           	opt callstack 0
   334  00000F                     ___flmul@b:
   335                           	opt callstack 0
   336                           
   337                           ; 4 bytes @ 0xE
   338  00000F                     	ds	4
   339  000013                     ___flmul@a:
   340                           	opt callstack 0
   341                           
   342                           ; 4 bytes @ 0x12
   343  000013                     	ds	4
   344  000017                     ??___flmul:
   345                           
   346                           ; 1 bytes @ 0x16
   347  000017                     	ds	4
   348  00001B                     ___flmul@sign:
   349                           	opt callstack 0
   350                           
   351                           ; 1 bytes @ 0x1A
   352  00001B                     	ds	1
   353  00001C                     ___flmul@grs:
   354                           	opt callstack 0
   355                           
   356                           ; 4 bytes @ 0x1B
   357  00001C                     	ds	4
   358  000020                     ___flmul@aexp:
   359                           	opt callstack 0
   360                           
   361                           ; 1 bytes @ 0x1F
   362  000020                     	ds	1
   363  000021                     ___flmul@bexp:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x20
   367  000021                     	ds	1
   368  000022                     ___flmul@prod:
   369                           	opt callstack 0
   370                           
   371                           ; 4 bytes @ 0x21
   372  000022                     	ds	4
   373  000026                     ___flmul@temp:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x25
   377  000026                     	ds	2
   378  000028                     ?___fltol:
   379                           	opt callstack 0
   380  000028                     ___fltol@f1:
   381                           	opt callstack 0
   382                           
   383                           ; 4 bytes @ 0x27
   384  000028                     	ds	4
   385  00002C                     ??___fltol:
   386                           
   387                           ; 1 bytes @ 0x2B
   388  00002C                     	ds	4
   389  000030                     ___fltol@sign1:
   390                           	opt callstack 0
   391                           
   392                           ; 1 bytes @ 0x2F
   393  000030                     	ds	1
   394  000031                     ___fltol@exp1:
   395                           	opt callstack 0
   396                           
   397                           ; 1 bytes @ 0x30
   398  000031                     	ds	1
   399  000032                     steering@dty_right:
   400                           	opt callstack 0
   401                           
   402                           ; 1 bytes @ 0x31
   403  000032                     	ds	1
   404  000033                     steering@dty_left:
   405                           	opt callstack 0
   406                           
   407                           ; 1 bytes @ 0x32
   408  000033                     	ds	1
   409  000034                     steering@buffer:
   410                           	opt callstack 0
   411                           
   412                           ; 1 bytes @ 0x33
   413  000034                     	ds	1
   414  000035                     steering_angle@received_angle:
   415                           	opt callstack 0
   416                           
   417                           ; 1 bytes @ 0x34
   418  000035                     	ds	1
   419  000036                     steering_angle@my_angle_b:
   420                           	opt callstack 0
   421                           
   422                           ; 1 bytes @ 0x35
   423  000036                     	ds	1
   424  000037                     steering_angle@my_angle_a:
   425                           	opt callstack 0
   426                           
   427                           ; 1 bytes @ 0x36
   428  000037                     	ds	1
   429  000038                     ??_serial:
   430                           
   431                           ; 1 bytes @ 0x37
   432  000038                     	ds	2
   433  00003A                     serial@angle_from_pi:
   434                           	opt callstack 0
   435                           
   436                           ; 1 bytes @ 0x39
   437  00003A                     	ds	1
   438                           
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 51 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;Total ram usage:        2 bytes
   463 ;; Hardware stack levels required when called:    7
   464 ;; This function calls:
   465 ;;		_adc_config
   466 ;;		_config
   467 ;;		_eusart_config
   468 ;;		_pwm_config
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text0
   475  001746                     __ptext0:
   476                           	opt callstack 0
   477  001746                     _main:
   478                           	opt callstack 24
   479                           
   480                           ;main.c: 53: config();
   481                           
   482                           ;incstack = 0
   483  001746  EC1C  F00C         	call	_config	;wreg free
   484                           
   485                           ;main.c: 54: pwm_config();
   486  00174A  EC66  F00C         	call	_pwm_config	;wreg free
   487                           
   488                           ;main.c: 55: adc_config();
   489  00174E  ECC3  F00C         	call	_adc_config	;wreg free
   490                           
   491                           ;main.c: 56: eusart_config();
   492  001752  EC4A  F00C         	call	_eusart_config	;wreg free
   493                           
   494                           ;main.c: 57: LATDbits.LD0=0;
   495  001756  908C               	bcf	3980,0,c	;volatile
   496                           
   497                           ;main.c: 58: LATDbits.LD1=1;
   498  001758  828C               	bsf	3980,1,c	;volatile
   499                           
   500                           ;main.c: 59: LATDbits.LD2=LATDbits.LD1;
   501  00175A  A28C               	btfss	3980,1,c	;volatile
   502  00175C  D002               	bra	u1405
   503  00175E  848C               	bsf	3980,2,c	;volatile
   504  001760  D001               	bra	u1407
   505  001762                     u1405:
   506  001762  948C               	bcf	3980,2,c	;volatile
   507  001764                     u1407:
   508                           
   509                           ;main.c: 60: CCPR2L=CCPR1L=0;
   510  001764  0E00               	movlw	0
   511  001766  6EBE               	movwf	4030,c	;volatile
   512  001768  CFBE FF67          	movff	4030,3943	;volatile
   513                           
   514                           ;main.c: 61: TMR1=TMR3=0;
   515  00176C  0E00               	movlw	0
   516  00176E  6EB3               	movwf	4019,c	;volatile
   517  001770  0E00               	movlw	0
   518  001772  6EB2               	movwf	4018,c	;volatile
   519  001774  CFB2 FFCE          	movff	4018,4046	;volatile
   520  001778  CFB3 FFCF          	movff	4019,4047	;volatile
   521                           
   522                           ;main.c: 62: _delay((unsigned long)((100)*(64000000/4000.0)));
   523  00177C  0E09               	movlw	9
   524  00177E  0100               	movlb	0	; () banked
   525  001780  6FBF               	movwf	(??_main+1)& (0+255),b
   526  001782  0E1E               	movlw	30
   527  001784  6FBE               	movwf	??_main& (0+255),b
   528  001786  0EE4               	movlw	228
   529  001788                     u1787:
   530  001788  2EE8               	decfsz	wreg,f,c
   531  00178A  D7FE               	bra	u1787
   532  00178C  2FBE               	decfsz	??_main& (0+255),f,b
   533  00178E  D7FC               	bra	u1787
   534  001790  2FBF               	decfsz	(??_main+1)& (0+255),f,b
   535  001792  D7FA               	bra	u1787
   536  001794  F000               	nop	
   537  001796                     l2463:
   538                           
   539                           ;main.c: 65: {;main.c: 67: _delay((unsigned long)((1000)*(64000000/4000.0)));
   540  001796  0E52               	movlw	82
   541  001798  0100               	movlb	0	; () banked
   542  00179A  6FBF               	movwf	(??_main+1)& (0+255),b
   543  00179C  0E2B               	movlw	43
   544  00179E  6FBE               	movwf	??_main& (0+255),b
   545  0017A0  0E00               	movlw	0
   546  0017A2                     u1797:
   547  0017A2  2EE8               	decfsz	wreg,f,c
   548  0017A4  D7FE               	bra	u1797
   549  0017A6  2FBE               	decfsz	??_main& (0+255),f,b
   550  0017A8  D7FC               	bra	u1797
   551  0017AA  2FBF               	decfsz	(??_main+1)& (0+255),f,b
   552  0017AC  D7FA               	bra	u1797
   553  0017AE  F000               	nop	
   554                           
   555                           ;main.c: 68: if(PORTAbits.RA7==1)
   556  0017B0  AE80               	btfss	3968,7,c	;volatile
   557  0017B2  D7F1               	goto	l2463
   558                           
   559                           ;main.c: 71: CCPR2L=CCPR1L=0;
   560                           
   561                           ;main.c: 69: {;main.c: 70: RC1IF==1;
   562  0017B4  0E00               	movlw	0
   563  0017B6  6EBE               	movwf	4030,c	;volatile
   564  0017B8  CFBE FF67          	movff	4030,3943	;volatile
   565                           
   566                           ;main.c: 72: LATDbits.LD0=1;
   567  0017BC  808C               	bsf	3980,0,c	;volatile
   568  0017BE  D7EB               	goto	l2463
   569  0017C0                     __end_of_main:
   570                           	opt callstack 0
   571                           
   572 ;; *************** function _pwm_config *****************
   573 ;; Defined at:
   574 ;;		line 41 in file "config.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, status,2
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; Hardware stack levels required when called:    4
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text1
   603  0018CC                     __ptext1:
   604                           	opt callstack 0
   605  0018CC                     _pwm_config:
   606                           	opt callstack 26
   607                           
   608                           ;config.c: 43: CCPTMRS0=0b00000000;
   609                           
   610                           ;incstack = 0
   611  0018CC  0E00               	movlw	0
   612  0018CE  010F               	movlb	15	; () banked
   613  0018D0  6F49               	movwf	73,b	;volatile
   614                           
   615                           ;config.c: 44: CCP2CON=0b00001100;
   616  0018D2  0E0C               	movlw	12
   617  0018D4  6E66               	movwf	3942,c	;volatile
   618                           
   619                           ;config.c: 45: CCP1CON=0b00001100;
   620  0018D6  0E0C               	movlw	12
   621  0018D8  6EBD               	movwf	4029,c	;volatile
   622                           
   623                           ;config.c: 46: T2CON=0b01111101;
   624  0018DA  0E7D               	movlw	125
   625  0018DC  6EBA               	movwf	4026,c	;volatile
   626                           
   627                           ;config.c: 47: PR2=160;
   628  0018DE  0EA0               	movlw	160
   629  0018E0  6EBB               	movwf	4027,c	;volatile
   630                           
   631                           ;config.c: 49: CCPR2L=128;
   632  0018E2  0E80               	movlw	128
   633  0018E4  6E67               	movwf	3943,c	;volatile
   634                           
   635                           ;config.c: 50: CCPR1L=64;
   636  0018E6  0E40               	movlw	64
   637  0018E8  6EBE               	movwf	4030,c	;volatile
   638                           
   639                           ;config.c: 51: CCP3CON=0b00001100;
   640  0018EA  0E0C               	movlw	12
   641  0018EC  6F5D               	movwf	93,b	;volatile
   642                           
   643                           ;config.c: 52: CCPR3L=128;
   644  0018EE  0E80               	movlw	128
   645  0018F0  6F5E               	movwf	94,b	;volatile
   646                           
   647                           ;config.c: 53: CCPR1L=0;
   648  0018F2  0E00               	movlw	0
   649  0018F4  6EBE               	movwf	4030,c	;volatile
   650                           
   651                           ;config.c: 54: CCPR2L=0;
   652  0018F6  0E00               	movlw	0
   653  0018F8  6E67               	movwf	3943,c	;volatile
   654                           
   655                           ;config.c: 55: CCPR3L=0;
   656  0018FA  0E00               	movlw	0
   657  0018FC  6F5E               	movwf	94,b	;volatile
   658                           
   659                           ; BSR set to: 15
   660  0018FE  0012               	return		;funcret
   661  001900                     __end_of_pwm_config:
   662                           	opt callstack 0
   663                           
   664 ;; *************** function _eusart_config *****************
   665 ;; Defined at:
   666 ;;		line 73 in file "config.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;Total ram usage:        0 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    6
   687 ;; This function calls:
   688 ;;		_USART2GotoNewLine
   689 ;;		_USART2Init
   690 ;;		_USART2WriteString
   691 ;;		_USARTInit
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           	psect	text2
   698  001894                     __ptext2:
   699                           	opt callstack 0
   700  001894                     _eusart_config:
   701                           	opt callstack 24
   702                           
   703                           ;config.c: 75: USARTInit(19200);
   704                           
   705                           ; BSR set to: 15
   706                           ;incstack = 0
   707  001894  0E4B               	movlw	75
   708  001896  0100               	movlb	0	; () banked
   709  001898  6FBB               	movwf	(USARTInit@baud_rate+1)& (0+255),b
   710  00189A  0E00               	movlw	0
   711  00189C  6FBA               	movwf	USARTInit@baud_rate& (0+255),b
   712  00189E  ECE0  F00B         	call	_USARTInit	;wreg free
   713                           
   714                           ;config.c: 76: USART2Init(2400);
   715  0018A2  0E09               	movlw	9
   716  0018A4  0100               	movlb	0	; () banked
   717  0018A6  6FBB               	movwf	(USART2Init@baud_rate+1)& (0+255),b
   718  0018A8  0E60               	movlw	96
   719  0018AA  6FBA               	movwf	USART2Init@baud_rate& (0+255),b
   720  0018AC  EC1F  F00B         	call	_USART2Init	;wreg free
   721                           
   722                           ;config.c: 77: USART2WriteString("USART initialized!");
   723  0018B0  0E01               	movlw	low STR_1
   724  0018B2  0100               	movlb	0	; () banked
   725  0018B4  6FBB               	movwf	USART2WriteString@str& (0+255),b
   726  0018B6  0E10               	movlw	high STR_1
   727  0018B8  6FBC               	movwf	(USART2WriteString@str+1)& (0+255),b
   728  0018BA  EC9A  F00C         	call	_USART2WriteString	;wreg free
   729                           
   730                           ;config.c: 78: USART2GotoNewLine();
   731  0018BE  ECD0  F00C         	call	_USART2GotoNewLine	;wreg free
   732                           
   733                           ;config.c: 79: INTCONbits.GIE=1;
   734  0018C2  8EF2               	bsf	4082,7,c	;volatile
   735                           
   736                           ;config.c: 80: INTCONbits.PEIE=1;
   737  0018C4  8CF2               	bsf	4082,6,c	;volatile
   738                           
   739                           ;config.c: 81: PIE3bits.RC2IE=1;
   740  0018C6  8AA3               	bsf	4003,5,c	;volatile
   741                           
   742                           ;config.c: 82: PIE1bits.RCIE=1;
   743  0018C8  8A9D               	bsf	3997,5,c	;volatile
   744  0018CA  0012               	return		;funcret
   745  0018CC                     __end_of_eusart_config:
   746                           	opt callstack 0
   747                           
   748 ;; *************** function _USARTInit *****************
   749 ;; Defined at:
   750 ;;		line 31 in file "usart_pic16.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  baud_rate       2    0[BANK0 ] unsigned int 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   764 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;Total ram usage:        4 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; Hardware stack levels required when called:    4
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_eusart_config
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text3
   779  0017C0                     __ptext3:
   780                           	opt callstack 0
   781  0017C0                     _USARTInit:
   782                           	opt callstack 25
   783                           
   784                           ;usart_pic16.c: 34: UQFront=UQEnd=-1;
   785                           
   786                           ;incstack = 0
   787  0017C0  685D               	setf	_UQEnd,c	;volatile
   788  0017C2  685E               	setf	_UQFront,c	;volatile
   789                           
   790                           ;usart_pic16.c: 37: switch(baud_rate)
   791  0017C4  D009               	goto	l2275
   792  0017C6                     l2265:
   793                           
   794                           ; BSR set to: 0
   795                           ;usart_pic16.c: 40: SPBRG1=207;
   796  0017C6  0ECF               	movlw	207
   797  0017C8  D005               	goto	L3
   798  0017CA                     l2267:
   799                           
   800                           ; BSR set to: 0
   801                           ;usart_pic16.c: 43: SPBRG1=51;
   802  0017CA  0E33               	movlw	51
   803  0017CC  D003               	goto	L3
   804  0017CE                     l2269:
   805                           
   806                           ; BSR set to: 0
   807                           ;usart_pic16.c: 46: SPBRG1=42;
   808  0017CE  0E2A               	movlw	42
   809  0017D0  D001               	goto	L3
   810  0017D2                     l2271:
   811                           
   812                           ; BSR set to: 0
   813                           ;usart_pic16.c: 49: SPBRG1=36;
   814  0017D2  0E24               	movlw	36
   815  0017D4                     L3:
   816  0017D4  6EAF               	movwf	4015,c	;volatile
   817                           
   818                           ;usart_pic16.c: 50: break;
   819  0017D6  D026               	goto	l276
   820  0017D8                     l2275:
   821  0017D8  C0BA  F0BC         	movff	USARTInit@baud_rate,??_USARTInit
   822  0017DC  C0BB  F0BD         	movff	USARTInit@baud_rate+1,??_USARTInit+1
   823                           
   824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
   825                           ; Switch size 1, requested type "simple"
   826                           ; Number of cases is 4, Range of values is 37 to 131
   827                           ; switch strategies available:
   828                           ; Name         Instructions Cycles
   829                           ; simple_byte           13     7 (average)
   830                           ;	Chosen strategy is simple_byte
   831  0017E0  0100               	movlb	0	; () banked
   832  0017E2  51BD               	movf	(??_USARTInit+1)& (0+255),w,b
   833  0017E4  0A25               	xorlw	37	; case 37
   834  0017E6  B4D8               	btfsc	status,2,c
   835  0017E8  D00A               	goto	l2949
   836  0017EA  0A6E               	xorlw	110	; case 75
   837  0017EC  B4D8               	btfsc	status,2,c
   838  0017EE  D00C               	goto	l2951
   839  0017F0  0A3B               	xorlw	59	; case 112
   840  0017F2  B4D8               	btfsc	status,2,c
   841  0017F4  D00E               	goto	l2953
   842  0017F6  0AF3               	xorlw	243	; case 131
   843  0017F8  B4D8               	btfsc	status,2,c
   844  0017FA  D010               	goto	l2955
   845  0017FC  D013               	goto	l276
   846  0017FE                     l2949:
   847                           
   848                           ; BSR set to: 0
   849                           ; Switch size 1, requested type "simple"
   850                           ; Number of cases is 1, Range of values is 128 to 128
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte            4     3 (average)
   854                           ;	Chosen strategy is simple_byte
   855  0017FE  51BC               	movf	??_USARTInit& (0+255),w,b
   856  001800  0A80               	xorlw	128	; case 128
   857  001802  B4D8               	btfsc	status,2,c
   858  001804  D7E0               	goto	l2265
   859  001806  D00E               	goto	l276
   860  001808                     l2951:
   861                           
   862                           ; BSR set to: 0
   863                           ; Switch size 1, requested type "simple"
   864                           ; Number of cases is 1, Range of values is 0 to 0
   865                           ; switch strategies available:
   866                           ; Name         Instructions Cycles
   867                           ; simple_byte            4     3 (average)
   868                           ;	Chosen strategy is simple_byte
   869  001808  51BC               	movf	??_USARTInit& (0+255),w,b
   870  00180A  0A00               	xorlw	0	; case 0
   871  00180C  B4D8               	btfsc	status,2,c
   872  00180E  D7DD               	goto	l2267
   873  001810  D009               	goto	l276
   874  001812                     l2953:
   875                           
   876                           ; BSR set to: 0
   877                           ; Switch size 1, requested type "simple"
   878                           ; Number of cases is 1, Range of values is 128 to 128
   879                           ; switch strategies available:
   880                           ; Name         Instructions Cycles
   881                           ; simple_byte            4     3 (average)
   882                           ;	Chosen strategy is simple_byte
   883  001812  51BC               	movf	??_USARTInit& (0+255),w,b
   884  001814  0A80               	xorlw	128	; case 128
   885  001816  B4D8               	btfsc	status,2,c
   886  001818  D7DA               	goto	l2269
   887  00181A  D004               	goto	l276
   888  00181C                     l2955:
   889                           
   890                           ; BSR set to: 0
   891                           ; Switch size 1, requested type "simple"
   892                           ; Number of cases is 1, Range of values is 64 to 64
   893                           ; switch strategies available:
   894                           ; Name         Instructions Cycles
   895                           ; simple_byte            4     3 (average)
   896                           ;	Chosen strategy is simple_byte
   897  00181C  51BC               	movf	??_USARTInit& (0+255),w,b
   898  00181E  0A40               	xorlw	64	; case 64
   899  001820  B4D8               	btfsc	status,2,c
   900  001822  D7D7               	goto	l2271
   901  001824                     l276:
   902                           
   903                           ; BSR set to: 0
   904                           ;usart_pic16.c: 53: TXSTA1bits.TX9=0;
   905  001824  9CAC               	bcf	4012,6,c	;volatile
   906                           
   907                           ;usart_pic16.c: 54: TXSTA1bits.TXEN=1;
   908  001826  8AAC               	bsf	4012,5,c	;volatile
   909                           
   910                           ;usart_pic16.c: 55: TXSTA1bits.SYNC=0;
   911  001828  98AC               	bcf	4012,4,c	;volatile
   912                           
   913                           ;usart_pic16.c: 56: TXSTA1bits.BRGH=0;
   914  00182A  94AC               	bcf	4012,2,c	;volatile
   915                           
   916                           ;usart_pic16.c: 65: RCSTA1bits.SPEN=1;
   917  00182C  8EAB               	bsf	4011,7,c	;volatile
   918                           
   919                           ;usart_pic16.c: 66: RCSTA1bits.RX9=0;
   920  00182E  9CAB               	bcf	4011,6,c	;volatile
   921                           
   922                           ;usart_pic16.c: 67: RCSTA1bits.CREN=1;
   923  001830  88AB               	bsf	4011,4,c	;volatile
   924                           
   925                           ;usart_pic16.c: 68: RCSTA1bits.ADDEN=0;
   926  001832  96AB               	bcf	4011,3,c	;volatile
   927                           
   928                           ;usart_pic16.c: 75: (INTCONbits.GIE = 1);
   929  001834  8EF2               	bsf	4082,7,c	;volatile
   930                           
   931                           ; BSR set to: 0
   932  001836  0012               	return		;funcret
   933  001838                     __end_of_USARTInit:
   934                           	opt callstack 0
   935                           
   936 ;; *************** function _USART2WriteString *****************
   937 ;; Defined at:
   938 ;;		line 284 in file "usart_pic16.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  str             2    1[BANK0 ] PTR const unsigned char 
   941 ;;		 -> STR_1(19), 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:        2 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    5
   960 ;; This function calls:
   961 ;;		_USART2WriteChar
   962 ;; This function is called by:
   963 ;;		_eusart_config
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text4
   968  001934                     __ptext4:
   969                           	opt callstack 0
   970  001934                     _USART2WriteString:
   971                           	opt callstack 24
   972                           
   973                           ;usart_pic16.c: 286: while(*str!='\0')
   974                           
   975                           ; BSR set to: 0
   976                           ;incstack = 0
   977  001934  D00B               	goto	l2345
   978  001936                     l2341:
   979                           
   980                           ;usart_pic16.c: 287: {;usart_pic16.c: 288: USART2WriteChar(*str);
   981  001936  C0BB  FFF6         	movff	USART2WriteString@str,tblptrl
   982  00193A  C0BC  FFF7         	movff	USART2WriteString@str+1,tblptrh
   983  00193E                     	if	0	;tblptru may be non-zero
   984  00193E                     	endif
   985  00193E                     	if	0	;tblptru may be non-zero
   986  00193E                     	endif
   987  00193E  0008               	tblrd		*
   988  001940  50F5               	movf	tablat,w,c
   989  001942  ECD7  F00C         	call	_USART2WriteChar
   990                           
   991                           ;usart_pic16.c: 289: str++;
   992  001946  0100               	movlb	0	; () banked
   993  001948  4BBB               	infsnz	USART2WriteString@str& (0+255),f,b
   994  00194A  2BBC               	incf	(USART2WriteString@str+1)& (0+255),f,b
   995  00194C                     l2345:
   996  00194C  C0BB  FFF6         	movff	USART2WriteString@str,tblptrl
   997  001950  C0BC  FFF7         	movff	USART2WriteString@str+1,tblptrh
   998  001954                     	if	0	;tblptru may be non-zero
   999  001954                     	endif
  1000  001954                     	if	0	;tblptru may be non-zero
  1001  001954                     	endif
  1002  001954  0008               	tblrd		*
  1003  001956  50F5               	movf	tablat,w,c
  1004  001958  0900               	iorlw	0
  1005  00195A  B4D8               	btfsc	status,2,c
  1006  00195C  0012               	return	
  1007  00195E  D7EB               	goto	l2341
  1008  001960                     __end_of_USART2WriteString:
  1009                           	opt callstack 0
  1010                           
  1011 ;; *************** function _USART2Init *****************
  1012 ;; Defined at:
  1013 ;;		line 233 in file "usart_pic16.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  baud_rate       2    0[BANK0 ] unsigned int 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;Total ram usage:        4 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    4
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_eusart_config
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text5
  1042  00163E                     __ptext5:
  1043                           	opt callstack 0
  1044  00163E                     _USART2Init:
  1045                           	opt callstack 25
  1046                           
  1047                           ;usart_pic16.c: 236: UQFront=UQEnd=-1;
  1048                           
  1049                           ;incstack = 0
  1050  00163E  685D               	setf	_UQEnd,c	;volatile
  1051  001640  685E               	setf	_UQFront,c	;volatile
  1052                           
  1053                           ;usart_pic16.c: 237: TRISDbits.RD7=1;
  1054  001642  8E95               	bsf	3989,7,c	;volatile
  1055                           
  1056                           ;usart_pic16.c: 238: TRISDbits.RD6=0;
  1057  001644  9C95               	bcf	3989,6,c	;volatile
  1058                           
  1059                           ;usart_pic16.c: 240: BAUDCON2bits.BRG162=1;
  1060  001646  8670               	bsf	3952,3,c	;volatile
  1061                           
  1062                           ;usart_pic16.c: 241: switch(baud_rate)
  1063  001648  D00B               	goto	l2313
  1064  00164A                     l2303:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;usart_pic16.c: 244: SPBRGH2= 0X1A;
  1068  00164A  0E1A               	movlw	26
  1069  00164C  6E76               	movwf	3958,c	;volatile
  1070                           
  1071                           ;usart_pic16.c: 245: SPBRG2=0X0A;
  1072  00164E  0E0A               	movlw	10
  1073  001650  D005               	goto	L6
  1074  001652                     l2305:
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;usart_pic16.c: 248: SPBRG2=64;
  1078  001652  0E40               	movlw	64
  1079  001654  D003               	goto	L6
  1080  001656                     l2307:
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;usart_pic16.c: 251: SPBRG2=42;
  1084  001656  0E2A               	movlw	42
  1085  001658  D001               	goto	L6
  1086  00165A                     l2309:
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;usart_pic16.c: 254: SPBRG2=36;
  1090  00165A  0E24               	movlw	36
  1091  00165C                     L6:
  1092  00165C  6E75               	movwf	3957,c	;volatile
  1093                           
  1094                           ;usart_pic16.c: 255: break;
  1095  00165E  D026               	goto	l362
  1096  001660                     l2313:
  1097  001660  C0BA  F0BC         	movff	USART2Init@baud_rate,??_USART2Init
  1098  001664  C0BB  F0BD         	movff	USART2Init@baud_rate+1,??_USART2Init+1
  1099                           
  1100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  1101                           ; Switch size 1, requested type "simple"
  1102                           ; Number of cases is 4, Range of values is 9 to 131
  1103                           ; switch strategies available:
  1104                           ; Name         Instructions Cycles
  1105                           ; simple_byte           13     7 (average)
  1106                           ;	Chosen strategy is simple_byte
  1107  001668  0100               	movlb	0	; () banked
  1108  00166A  51BD               	movf	(??_USART2Init+1)& (0+255),w,b
  1109  00166C  0A09               	xorlw	9	; case 9
  1110  00166E  B4D8               	btfsc	status,2,c
  1111  001670  D00A               	goto	l2957
  1112  001672  0A42               	xorlw	66	; case 75
  1113  001674  B4D8               	btfsc	status,2,c
  1114  001676  D00C               	goto	l2959
  1115  001678  0A3B               	xorlw	59	; case 112
  1116  00167A  B4D8               	btfsc	status,2,c
  1117  00167C  D00E               	goto	l2961
  1118  00167E  0AF3               	xorlw	243	; case 131
  1119  001680  B4D8               	btfsc	status,2,c
  1120  001682  D010               	goto	l2963
  1121  001684  D013               	goto	l362
  1122  001686                     l2957:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ; Switch size 1, requested type "simple"
  1126                           ; Number of cases is 1, Range of values is 96 to 96
  1127                           ; switch strategies available:
  1128                           ; Name         Instructions Cycles
  1129                           ; simple_byte            4     3 (average)
  1130                           ;	Chosen strategy is simple_byte
  1131  001686  51BC               	movf	??_USART2Init& (0+255),w,b
  1132  001688  0A60               	xorlw	96	; case 96
  1133  00168A  B4D8               	btfsc	status,2,c
  1134  00168C  D7DE               	goto	l2303
  1135  00168E  D00E               	goto	l362
  1136  001690                     l2959:
  1137                           
  1138                           ; BSR set to: 0
  1139                           ; Switch size 1, requested type "simple"
  1140                           ; Number of cases is 1, Range of values is 0 to 0
  1141                           ; switch strategies available:
  1142                           ; Name         Instructions Cycles
  1143                           ; simple_byte            4     3 (average)
  1144                           ;	Chosen strategy is simple_byte
  1145  001690  51BC               	movf	??_USART2Init& (0+255),w,b
  1146  001692  0A00               	xorlw	0	; case 0
  1147  001694  B4D8               	btfsc	status,2,c
  1148  001696  D7DD               	goto	l2305
  1149  001698  D009               	goto	l362
  1150  00169A                     l2961:
  1151                           
  1152                           ; BSR set to: 0
  1153                           ; Switch size 1, requested type "simple"
  1154                           ; Number of cases is 1, Range of values is 128 to 128
  1155                           ; switch strategies available:
  1156                           ; Name         Instructions Cycles
  1157                           ; simple_byte            4     3 (average)
  1158                           ;	Chosen strategy is simple_byte
  1159  00169A  51BC               	movf	??_USART2Init& (0+255),w,b
  1160  00169C  0A80               	xorlw	128	; case 128
  1161  00169E  B4D8               	btfsc	status,2,c
  1162  0016A0  D7DA               	goto	l2307
  1163  0016A2  D004               	goto	l362
  1164  0016A4                     l2963:
  1165                           
  1166                           ; BSR set to: 0
  1167                           ; Switch size 1, requested type "simple"
  1168                           ; Number of cases is 1, Range of values is 64 to 64
  1169                           ; switch strategies available:
  1170                           ; Name         Instructions Cycles
  1171                           ; simple_byte            4     3 (average)
  1172                           ;	Chosen strategy is simple_byte
  1173  0016A4  51BC               	movf	??_USART2Init& (0+255),w,b
  1174  0016A6  0A40               	xorlw	64	; case 64
  1175  0016A8  B4D8               	btfsc	status,2,c
  1176  0016AA  D7D7               	goto	l2309
  1177  0016AC                     l362:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;usart_pic16.c: 258: TXSTA2bits.TX9=0;
  1181  0016AC  9C72               	bcf	3954,6,c	;volatile
  1182                           
  1183                           ;usart_pic16.c: 259: TXSTA2bits.TXEN=1;
  1184  0016AE  8A72               	bsf	3954,5,c	;volatile
  1185                           
  1186                           ;usart_pic16.c: 260: TXSTA2bits.SYNC=0;
  1187  0016B0  9872               	bcf	3954,4,c	;volatile
  1188                           
  1189                           ;usart_pic16.c: 261: TXSTA2bits.BRGH=1;
  1190  0016B2  8472               	bsf	3954,2,c	;volatile
  1191                           
  1192                           ;usart_pic16.c: 264: RCSTA2bits.SPEN=1;
  1193  0016B4  8E71               	bsf	3953,7,c	;volatile
  1194                           
  1195                           ;usart_pic16.c: 265: RCSTA2bits.RX9=0;
  1196  0016B6  9C71               	bcf	3953,6,c	;volatile
  1197                           
  1198                           ;usart_pic16.c: 266: RCSTA2bits.CREN=1;
  1199  0016B8  8871               	bsf	3953,4,c	;volatile
  1200                           
  1201                           ;usart_pic16.c: 267: RCSTA2bits.ADDEN=0;
  1202  0016BA  9671               	bcf	3953,3,c	;volatile
  1203                           
  1204                           ;usart_pic16.c: 271: PIE3bits.RC2IE=0;
  1205  0016BC  9AA3               	bcf	4003,5,c	;volatile
  1206                           
  1207                           ;usart_pic16.c: 274: (INTCONbits.GIE = 1);
  1208  0016BE  8EF2               	bsf	4082,7,c	;volatile
  1209                           
  1210                           ; BSR set to: 0
  1211  0016C0  0012               	return		;funcret
  1212  0016C2                     __end_of_USART2Init:
  1213                           	opt callstack 0
  1214                           
  1215 ;; *************** function _USART2GotoNewLine *****************
  1216 ;; Defined at:
  1217 ;;		line 293 in file "usart_pic16.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    5
  1238 ;; This function calls:
  1239 ;;		_USART2WriteChar
  1240 ;; This function is called by:
  1241 ;;		_eusart_config
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text6
  1246  0019A0                     __ptext6:
  1247                           	opt callstack 0
  1248  0019A0                     _USART2GotoNewLine:
  1249                           	opt callstack 24
  1250                           
  1251                           ;usart_pic16.c: 295: USART2WriteChar('\r');
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;incstack = 0
  1255  0019A0  0E0D               	movlw	13
  1256  0019A2  ECD7  F00C         	call	_USART2WriteChar
  1257                           
  1258                           ;usart_pic16.c: 296: USART2WriteChar('\n');
  1259  0019A6  0E0A               	movlw	10
  1260  0019A8  ECD7  F00C         	call	_USART2WriteChar
  1261  0019AC  0012               	return		;funcret
  1262  0019AE                     __end_of_USART2GotoNewLine:
  1263                           	opt callstack 0
  1264                           
  1265 ;; *************** function _USART2WriteChar *****************
  1266 ;; Defined at:
  1267 ;;		line 277 in file "usart_pic16.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  ch              1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  ch              1    0[BANK0 ] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;Total ram usage:        1 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    4
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_USART2WriteString
  1292 ;;		_USART2GotoNewLine
  1293 ;;		_USART2WriteInt
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text7
  1298  0019AE                     __ptext7:
  1299                           	opt callstack 0
  1300  0019AE                     _USART2WriteChar:
  1301                           	opt callstack 24
  1302                           
  1303                           ;incstack = 0
  1304                           ;USART2WriteChar@ch stored from wreg
  1305  0019AE  0100               	movlb	0	; () banked
  1306  0019B0  6FBA               	movwf	USART2WriteChar@ch& (0+255),b
  1307  0019B2                     
  1308                           ;usart_pic16.c: 279: while(!PIR3bits.TX2IF);
  1309  0019B2  A8A4               	btfss	4004,4,c	;volatile
  1310  0019B4  D7FE               	goto	l1995
  1311                           
  1312                           ;usart_pic16.c: 281: TXREG2=ch;
  1313  0019B6  C0BA  FF73         	movff	USART2WriteChar@ch,3955	;volatile
  1314  0019BA  0012               	return		;funcret
  1315  0019BC                     __end_of_USART2WriteChar:
  1316                           	opt callstack 0
  1317                           
  1318 ;; *************** function _config *****************
  1319 ;; Defined at:
  1320 ;;		line 7 in file "config.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    4
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text8
  1349  001838                     __ptext8:
  1350                           	opt callstack 0
  1351  001838                     _config:
  1352                           	opt callstack 26
  1353                           
  1354                           ;config.c: 9: TRISA=0X00;
  1355                           
  1356                           ;incstack = 0
  1357  001838  0E00               	movlw	0
  1358  00183A  6E92               	movwf	3986,c	;volatile
  1359                           
  1360                           ;config.c: 10: TRISB=0X00;
  1361  00183C  0E00               	movlw	0
  1362  00183E  6E93               	movwf	3987,c	;volatile
  1363                           
  1364                           ;config.c: 11: TRISC=0X00;
  1365  001840  0E00               	movlw	0
  1366  001842  6E94               	movwf	3988,c	;volatile
  1367                           
  1368                           ;config.c: 12: TRISD=0X00;
  1369  001844  0E00               	movlw	0
  1370  001846  6E95               	movwf	3989,c	;volatile
  1371                           
  1372                           ;config.c: 13: TRISE=0Xff;
  1373  001848  6896               	setf	3990,c	;volatile
  1374                           
  1375                           ;config.c: 15: PORTA=0X00;
  1376  00184A  0E00               	movlw	0
  1377  00184C  6E80               	movwf	3968,c	;volatile
  1378                           
  1379                           ;config.c: 16: PORTB=0X00;
  1380  00184E  0E00               	movlw	0
  1381  001850  6E81               	movwf	3969,c	;volatile
  1382                           
  1383                           ;config.c: 17: PORTC=0X00;
  1384  001852  0E00               	movlw	0
  1385  001854  6E82               	movwf	3970,c	;volatile
  1386                           
  1387                           ;config.c: 18: PORTD=0X00;
  1388  001856  0E00               	movlw	0
  1389  001858  6E83               	movwf	3971,c	;volatile
  1390                           
  1391                           ;config.c: 19: PORTE=0X00;
  1392  00185A  0E00               	movlw	0
  1393  00185C  6E84               	movwf	3972,c	;volatile
  1394                           
  1395                           ;config.c: 21: LATA=0X00;
  1396  00185E  0E00               	movlw	0
  1397  001860  6E89               	movwf	3977,c	;volatile
  1398                           
  1399                           ;config.c: 22: LATB=0X00;
  1400  001862  0E00               	movlw	0
  1401  001864  6E8A               	movwf	3978,c	;volatile
  1402                           
  1403                           ;config.c: 23: LATC=0X00;
  1404  001866  0E00               	movlw	0
  1405  001868  6E8B               	movwf	3979,c	;volatile
  1406                           
  1407                           ;config.c: 24: LATD=0X00;
  1408  00186A  0E00               	movlw	0
  1409  00186C  6E8C               	movwf	3980,c	;volatile
  1410                           
  1411                           ;config.c: 25: LATE=0X00;
  1412  00186E  0E00               	movlw	0
  1413  001870  6E8D               	movwf	3981,c	;volatile
  1414                           
  1415                           ;config.c: 27: ANSELA=0X00;
  1416  001872  0E00               	movlw	0
  1417  001874  010F               	movlb	15	; () banked
  1418  001876  6F38               	movwf	56,b	;volatile
  1419                           
  1420                           ;config.c: 28: ANSELB=0X00;
  1421  001878  0E00               	movlw	0
  1422  00187A  6F39               	movwf	57,b	;volatile
  1423                           
  1424                           ;config.c: 29: ANSELC=0X00;
  1425  00187C  0E00               	movlw	0
  1426  00187E  6F3A               	movwf	58,b	;volatile
  1427                           
  1428                           ;config.c: 30: ANSELD=0X00;
  1429  001880  0E00               	movlw	0
  1430  001882  6F3B               	movwf	59,b	;volatile
  1431                           
  1432                           ;config.c: 31: ANSELE=0X00;
  1433  001884  0E00               	movlw	0
  1434  001886  6F3C               	movwf	60,b	;volatile
  1435                           
  1436                           ; BSR set to: 15
  1437                           ;config.c: 32: TRISDbits.TRISD5;
  1438  001888  5095               	movf	3989,w,c	;volatile
  1439                           
  1440                           ; BSR set to: 15
  1441                           ;config.c: 33: TRISDbits.TRISD3;
  1442  00188A  5095               	movf	3989,w,c	;volatile
  1443                           
  1444                           ;config.c: 36: OSCCON=0b01110100;
  1445  00188C  0E74               	movlw	116
  1446  00188E  6ED3               	movwf	4051,c	;volatile
  1447                           
  1448                           ; BSR set to: 15
  1449                           ;config.c: 37: OSCTUNEbits.PLLEN=1;
  1450  001890  8C9B               	bsf	3995,6,c	;volatile
  1451                           
  1452                           ; BSR set to: 15
  1453  001892  0012               	return		;funcret
  1454  001894                     __end_of_config:
  1455                           	opt callstack 0
  1456                           
  1457 ;; *************** function _adc_config *****************
  1458 ;; Defined at:
  1459 ;;		line 59 in file "config.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    4
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text9
  1488  001986                     __ptext9:
  1489                           	opt callstack 0
  1490  001986                     _adc_config:
  1491                           	opt callstack 26
  1492                           
  1493                           ; BSR set to: 15
  1494                           ;incstack = 0
  1495  001986  8092               	bsf	3986,0,c	;volatile
  1496                           
  1497                           ;config.c: 61: ANSELAbits.ANSA0=1;
  1498  001988  010F               	movlb	15	; () banked
  1499  00198A  8138               	bsf	56,0,b	;volatile
  1500                           
  1501                           ;config.c: 62: TRISAbits.RA1=1;
  1502  00198C  8292               	bsf	3986,1,c	;volatile
  1503                           
  1504                           ;config.c: 63: ANSELAbits.ANSA1=1;
  1505  00198E  8338               	bsf	56,1,b	;volatile
  1506                           
  1507                           ; BSR set to: 15
  1508                           ;config.c: 66: ADCON0=0b00000011;
  1509  001990  0E03               	movlw	3
  1510  001992  6EC2               	movwf	4034,c	;volatile
  1511                           
  1512                           ;config.c: 67: ADCON1=0b10000000;
  1513  001994  0E80               	movlw	128
  1514  001996  6EC1               	movwf	4033,c	;volatile
  1515                           
  1516                           ;config.c: 68: ADCON2=0b00111110;
  1517  001998  0E3E               	movlw	62
  1518  00199A  6EC0               	movwf	4032,c	;volatile
  1519                           
  1520                           ; BSR set to: 15
  1521                           ;config.c: 69: ADCON2bits.ADFM=0;
  1522  00199C  9EC0               	bcf	4032,7,c	;volatile
  1523                           
  1524                           ; BSR set to: 15
  1525  00199E  0012               	return		;funcret
  1526  0019A0                     __end_of_adc_config:
  1527                           	opt callstack 0
  1528                           
  1529 ;; *************** function _serial *****************
  1530 ;; Defined at:
  1531 ;;		line 37 in file "main.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  angle_from_p    1   57[COMRAM] unsigned char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;Total ram usage:        3 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    3
  1552 ;; This function calls:
  1553 ;;		_steering_angle
  1554 ;; This function is called by:
  1555 ;;		Interrupt level 2
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	intcode
  1560  000008                     __pintcode:
  1561                           	opt callstack 0
  1562  000008                     _serial:
  1563                           	opt callstack 24
  1564                           
  1565                           ; BSR set to: 15
  1566                           ;incstack = 0
  1567  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1568  00000A  CFF3 F038          	movff	prodl,??_serial
  1569  00000E  CFF4 F039          	movff	prodh,??_serial+1
  1570                           
  1571                           ;main.c: 42: if(RC1IF==1)
  1572  000012  AA9E               	btfss	3998,5,c	;volatile
  1573  000014  D006               	goto	i2l64
  1574                           
  1575                           ;main.c: 43: {;main.c: 44: RC1IF=0;
  1576  000016  9A9E               	bcf	3998,5,c	;volatile
  1577                           
  1578                           ;main.c: 46: angle_from_pi=RCREG1;
  1579  000018  CFAE F03A          	movff	4014,serial@angle_from_pi	;volatile
  1580                           
  1581                           ;main.c: 47: steering_angle(angle_from_pi);
  1582  00001C  503A               	movf	serial@angle_from_pi,w,c
  1583  00001E  EC80  F00C         	call	_steering_angle
  1584  000022                     i2l64:
  1585  000022  C039  FFF4         	movff	??_serial+1,prodh
  1586  000026  C038  FFF3         	movff	??_serial,prodl
  1587  00002A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1588  00002C  0011               	retfie		f
  1589  00002E                     __end_of_serial:
  1590                           	opt callstack 0
  1591                           
  1592 ;; *************** function _steering_angle *****************
  1593 ;; Defined at:
  1594 ;;		line 98 in file "pwm_config.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  received_ang    1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  received_ang    1   52[COMRAM] unsigned char 
  1599 ;;  my_angle_a      1   54[COMRAM] unsigned char 
  1600 ;;  my_angle_b      1   53[COMRAM] unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;Total ram usage:        3 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    2
  1617 ;; This function calls:
  1618 ;;		___awdiv
  1619 ;;		_steering
  1620 ;; This function is called by:
  1621 ;;		_serial
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text11
  1626  001900                     __ptext11:
  1627                           	opt callstack 0
  1628  001900                     _steering_angle:
  1629                           	opt callstack 24
  1630                           
  1631                           ;incstack = 0
  1632                           ;steering_angle@received_angle stored from wreg
  1633  001900  6E35               	movwf	steering_angle@received_angle,c
  1634                           
  1635                           ;pwm_config.c: 101: uint8_t my_angle_b = 0;
  1636  001902  0E00               	movlw	0
  1637  001904  6E36               	movwf	steering_angle@my_angle_b,c
  1638                           
  1639                           ;pwm_config.c: 102: my_angle_a = (received_angle * 55)/100;
  1640  001906  5035               	movf	steering_angle@received_angle,w,c
  1641  001908  0D37               	mullw	55
  1642  00190A  CFF3 F001          	movff	prodl,___awdiv@dividend
  1643  00190E  CFF4 F002          	movff	prodh,___awdiv@dividend+1
  1644  001912  0E00               	movlw	0
  1645  001914  6E04               	movwf	___awdiv@divisor+1,c
  1646  001916  0E64               	movlw	100
  1647  001918  6E03               	movwf	___awdiv@divisor,c
  1648  00191A  EC61  F00B         	call	___awdiv	;wreg free
  1649  00191E  5001               	movf	?___awdiv,w,c
  1650  001920  6E37               	movwf	steering_angle@my_angle_a,c
  1651                           
  1652                           ;pwm_config.c: 103: my_angle_b = 100 - my_angle_a;
  1653  001922  5037               	movf	steering_angle@my_angle_a,w,c
  1654  001924  0864               	sublw	100
  1655  001926  6E36               	movwf	steering_angle@my_angle_b,c
  1656                           
  1657                           ;pwm_config.c: 104: steering(my_angle_a, my_angle_b);
  1658  001928  C036  F032         	movff	steering_angle@my_angle_b,steering@dty_right
  1659  00192C  5037               	movf	steering_angle@my_angle_a,w,c
  1660  00192E  EC54  F00A         	call	_steering
  1661  001932  0012               	return		;funcret
  1662  001934                     __end_of_steering_angle:
  1663                           	opt callstack 0
  1664                           
  1665 ;; *************** function _steering *****************
  1666 ;; Defined at:
  1667 ;;		line 22 in file "pwm_config.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  dty_left        1    wreg     unsigned char 
  1670 ;;  dty_right       1   49[COMRAM] unsigned char 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  dty_left        1   50[COMRAM] unsigned char 
  1673 ;;  buffer          1   51[COMRAM] unsigned char 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1683 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;Total ram usage:        3 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    1
  1690 ;; This function calls:
  1691 ;;		___awdiv
  1692 ;;		___flmul
  1693 ;;		___fltol
  1694 ;;		___xxtofl
  1695 ;; This function is called by:
  1696 ;;		_steering_angle
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text12
  1701  0014A8                     __ptext12:
  1702                           	opt callstack 0
  1703  0014A8                     _steering:
  1704                           	opt callstack 24
  1705                           
  1706                           ;incstack = 0
  1707                           ;steering@dty_left stored from wreg
  1708  0014A8  6E33               	movwf	steering@dty_left,c
  1709                           
  1710                           ;pwm_config.c: 24: uint8_t buffer;;pwm_config.c: 25: if(dty_left>100)
  1711  0014AA  0E64               	movlw	100
  1712  0014AC  6433               	cpfsgt	steering@dty_left,c
  1713  0014AE  D002               	goto	i2l2353
  1714                           
  1715                           ;pwm_config.c: 26: {;pwm_config.c: 27: dty_left=100;
  1716  0014B0  0E64               	movlw	100
  1717  0014B2  6E33               	movwf	steering@dty_left,c
  1718  0014B4                     i2l2353:
  1719                           
  1720                           ;pwm_config.c: 28: };pwm_config.c: 30: if(dty_right > 100)
  1721  0014B4  0E64               	movlw	100
  1722  0014B6  6432               	cpfsgt	steering@dty_right,c
  1723  0014B8  D002               	goto	i2l2357
  1724                           
  1725                           ;pwm_config.c: 31: {;pwm_config.c: 32: dty_right=100;
  1726  0014BA  0E64               	movlw	100
  1727  0014BC  6E32               	movwf	steering@dty_right,c
  1728  0014BE                     i2l2357:
  1729                           
  1730                           ;pwm_config.c: 33: };pwm_config.c: 36: buffer=dty_left*1.7;
  1731  0014BE  0E9A               	movlw	154
  1732  0014C0  6E13               	movwf	___flmul@a,c
  1733  0014C2  0E99               	movlw	153
  1734  0014C4  6E14               	movwf	___flmul@a+1,c
  1735  0014C6  0ED9               	movlw	217
  1736  0014C8  6E15               	movwf	___flmul@a+2,c
  1737  0014CA  0E3F               	movlw	63
  1738  0014CC  6E16               	movwf	___flmul@a+3,c
  1739  0014CE  5033               	movf	steering@dty_left,w,c
  1740  0014D0  6E01               	movwf	___xxtofl@val,c
  1741  0014D2  6A02               	clrf	___xxtofl@val+1,c
  1742  0014D4  6A03               	clrf	___xxtofl@val+2,c
  1743  0014D6  6A04               	clrf	___xxtofl@val+3,c
  1744  0014D8  0E00               	movlw	0
  1745  0014DA  ECB4  F009         	call	___xxtofl
  1746  0014DE  C001  F00F         	movff	?___xxtofl,___flmul@b
  1747  0014E2  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1748  0014E6  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1749  0014EA  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1750  0014EE  EC0B  F008         	call	___flmul	;wreg free
  1751  0014F2  C00F  F028         	movff	?___flmul,___fltol@f1
  1752  0014F6  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  1753  0014FA  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  1754  0014FE  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  1755  001502  ECC2  F00A         	call	___fltol	;wreg free
  1756  001506  5028               	movf	?___fltol,w,c
  1757  001508  6E34               	movwf	steering@buffer,c
  1758                           
  1759                           ;pwm_config.c: 37: CCPR1L=buffer/2;
  1760  00150A  C034  F001         	movff	steering@buffer,___awdiv@dividend
  1761  00150E  6A02               	clrf	___awdiv@dividend+1,c
  1762  001510  0E00               	movlw	0
  1763  001512  6E04               	movwf	___awdiv@divisor+1,c
  1764  001514  0E02               	movlw	2
  1765  001516  6E03               	movwf	___awdiv@divisor,c
  1766  001518  EC61  F00B         	call	___awdiv	;wreg free
  1767  00151C  5001               	movf	?___awdiv,w,c
  1768  00151E  6EBE               	movwf	4030,c	;volatile
  1769                           
  1770                           ;pwm_config.c: 38: buffer = dty_right*1.7;
  1771  001520  0E9A               	movlw	154
  1772  001522  6E13               	movwf	___flmul@a,c
  1773  001524  0E99               	movlw	153
  1774  001526  6E14               	movwf	___flmul@a+1,c
  1775  001528  0ED9               	movlw	217
  1776  00152A  6E15               	movwf	___flmul@a+2,c
  1777  00152C  0E3F               	movlw	63
  1778  00152E  6E16               	movwf	___flmul@a+3,c
  1779  001530  5032               	movf	steering@dty_right,w,c
  1780  001532  6E01               	movwf	___xxtofl@val,c
  1781  001534  6A02               	clrf	___xxtofl@val+1,c
  1782  001536  6A03               	clrf	___xxtofl@val+2,c
  1783  001538  6A04               	clrf	___xxtofl@val+3,c
  1784  00153A  0E00               	movlw	0
  1785  00153C  ECB4  F009         	call	___xxtofl
  1786  001540  C001  F00F         	movff	?___xxtofl,___flmul@b
  1787  001544  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1788  001548  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1789  00154C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1790  001550  EC0B  F008         	call	___flmul	;wreg free
  1791  001554  C00F  F028         	movff	?___flmul,___fltol@f1
  1792  001558  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  1793  00155C  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  1794  001560  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  1795  001564  ECC2  F00A         	call	___fltol	;wreg free
  1796  001568  5028               	movf	?___fltol,w,c
  1797  00156A  6E34               	movwf	steering@buffer,c
  1798                           
  1799                           ;pwm_config.c: 39: CCPR2L=buffer/2;
  1800  00156C  C034  F001         	movff	steering@buffer,___awdiv@dividend
  1801  001570  6A02               	clrf	___awdiv@dividend+1,c
  1802  001572  0E00               	movlw	0
  1803  001574  6E04               	movwf	___awdiv@divisor+1,c
  1804  001576  0E02               	movlw	2
  1805  001578  6E03               	movwf	___awdiv@divisor,c
  1806  00157A  EC61  F00B         	call	___awdiv	;wreg free
  1807  00157E  5001               	movf	?___awdiv,w,c
  1808  001580  6E67               	movwf	3943,c	;volatile
  1809  001582  0012               	return		;funcret
  1810  001584                     __end_of_steering:
  1811                           	opt callstack 0
  1812                           
  1813 ;; *************** function ___xxtofl *****************
  1814 ;; Defined at:
  1815 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  sign            1    wreg     unsigned char 
  1818 ;;  val             4    0[COMRAM] long 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  sign            1    8[COMRAM] unsigned char 
  1821 ;;  arg             4   10[COMRAM] unsigned long 
  1822 ;;  exp             1    9[COMRAM] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  4    0[COMRAM] unsigned char 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;Total ram usage:       14 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_steering
  1842 ;;		_read_Ibat
  1843 ;;		_read_Ubat
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text13
  1848  001368                     __ptext13:
  1849                           	opt callstack 0
  1850  001368                     ___xxtofl:
  1851                           	opt callstack 24
  1852                           
  1853                           ;incstack = 0
  1854                           ;___xxtofl@sign stored from wreg
  1855  001368  6E09               	movwf	___xxtofl@sign,c
  1856  00136A  5009               	movf	___xxtofl@sign,w,c
  1857  00136C  A4D8               	btfss	status,2,c
  1858  00136E  AE04               	btfss	___xxtofl@val+3,7,c
  1859  001370  D01A               	goto	i2l1045
  1860  001372  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1861  001376  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1862  00137A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1863  00137E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1864  001382  1E05               	comf	??___xxtofl,f,c
  1865  001384  1E06               	comf	??___xxtofl+1,f,c
  1866  001386  1E07               	comf	??___xxtofl+2,f,c
  1867  001388  1E08               	comf	??___xxtofl+3,f,c
  1868  00138A  2A05               	incf	??___xxtofl,f,c
  1869  00138C  0E00               	movlw	0
  1870  00138E  2206               	addwfc	??___xxtofl+1,f,c
  1871  001390  2207               	addwfc	??___xxtofl+2,f,c
  1872  001392  2208               	addwfc	??___xxtofl+3,f,c
  1873  001394  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1874  001398  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1875  00139C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1876  0013A0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1877  0013A4  D008               	goto	i2l2223
  1878  0013A6                     i2l1045:
  1879  0013A6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1880  0013AA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1881  0013AE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1882  0013B2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1883  0013B6                     i2l2223:
  1884  0013B6  5001               	movf	___xxtofl@val,w,c
  1885  0013B8  1002               	iorwf	___xxtofl@val+1,w,c
  1886  0013BA  1003               	iorwf	___xxtofl@val+2,w,c
  1887  0013BC  1004               	iorwf	___xxtofl@val+3,w,c
  1888  0013BE  A4D8               	btfss	status,2,c
  1889  0013C0  D009               	goto	i2l2229
  1890  0013C2  0E00               	movlw	0
  1891  0013C4  6E01               	movwf	?___xxtofl,c
  1892  0013C6  0E00               	movlw	0
  1893  0013C8  6E02               	movwf	?___xxtofl+1,c
  1894  0013CA  0E00               	movlw	0
  1895  0013CC  6E03               	movwf	?___xxtofl+2,c
  1896  0013CE  0E00               	movlw	0
  1897  0013D0  6E04               	movwf	?___xxtofl+3,c
  1898  0013D2  0012               	return	
  1899  0013D4                     i2l2229:
  1900  0013D4  0E96               	movlw	150
  1901  0013D6  6E0A               	movwf	___xxtofl@exp,c
  1902  0013D8  D006               	goto	i2l2233
  1903  0013DA                     i2l2231:
  1904  0013DA  2A0A               	incf	___xxtofl@exp,f,c
  1905  0013DC  90D8               	bcf	status,0,c
  1906  0013DE  320E               	rrcf	___xxtofl@arg+3,f,c
  1907  0013E0  320D               	rrcf	___xxtofl@arg+2,f,c
  1908  0013E2  320C               	rrcf	___xxtofl@arg+1,f,c
  1909  0013E4  320B               	rrcf	___xxtofl@arg,f,c
  1910  0013E6                     i2l2233:
  1911  0013E6  0E00               	movlw	0
  1912  0013E8  140B               	andwf	___xxtofl@arg,w,c
  1913  0013EA  6E05               	movwf	??___xxtofl& (0+255),c
  1914  0013EC  0E00               	movlw	0
  1915  0013EE  140C               	andwf	___xxtofl@arg+1,w,c
  1916  0013F0  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1917  0013F2  0E00               	movlw	0
  1918  0013F4  140D               	andwf	___xxtofl@arg+2,w,c
  1919  0013F6  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1920  0013F8  0EFE               	movlw	254
  1921  0013FA  140E               	andwf	___xxtofl@arg+3,w,c
  1922  0013FC  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1923  0013FE  5005               	movf	??___xxtofl,w,c
  1924  001400  1006               	iorwf	??___xxtofl+1,w,c
  1925  001402  1007               	iorwf	??___xxtofl+2,w,c
  1926  001404  1008               	iorwf	??___xxtofl+3,w,c
  1927  001406  B4D8               	btfsc	status,2,c
  1928  001408  D00D               	goto	i2l1052
  1929  00140A  D7E7               	goto	i2l2231
  1930  00140C                     i2l2235:
  1931  00140C  2A0A               	incf	___xxtofl@exp,f,c
  1932  00140E  0E01               	movlw	1
  1933  001410  260B               	addwf	___xxtofl@arg,f,c
  1934  001412  0E00               	movlw	0
  1935  001414  220C               	addwfc	___xxtofl@arg+1,f,c
  1936  001416  220D               	addwfc	___xxtofl@arg+2,f,c
  1937  001418  220E               	addwfc	___xxtofl@arg+3,f,c
  1938  00141A  90D8               	bcf	status,0,c
  1939  00141C  320E               	rrcf	___xxtofl@arg+3,f,c
  1940  00141E  320D               	rrcf	___xxtofl@arg+2,f,c
  1941  001420  320C               	rrcf	___xxtofl@arg+1,f,c
  1942  001422  320B               	rrcf	___xxtofl@arg,f,c
  1943  001424                     i2l1052:
  1944  001424  0E00               	movlw	0
  1945  001426  140B               	andwf	___xxtofl@arg,w,c
  1946  001428  6E05               	movwf	??___xxtofl& (0+255),c
  1947  00142A  0E00               	movlw	0
  1948  00142C  140C               	andwf	___xxtofl@arg+1,w,c
  1949  00142E  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1950  001430  0E00               	movlw	0
  1951  001432  140D               	andwf	___xxtofl@arg+2,w,c
  1952  001434  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1953  001436  0EFF               	movlw	255
  1954  001438  140E               	andwf	___xxtofl@arg+3,w,c
  1955  00143A  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1956  00143C  5005               	movf	??___xxtofl,w,c
  1957  00143E  1006               	iorwf	??___xxtofl+1,w,c
  1958  001440  1007               	iorwf	??___xxtofl+2,w,c
  1959  001442  1008               	iorwf	??___xxtofl+3,w,c
  1960  001444  B4D8               	btfsc	status,2,c
  1961  001446  D007               	goto	i2l2243
  1962  001448  D7E1               	goto	i2l2235
  1963  00144A                     i2l2241:
  1964  00144A  060A               	decf	___xxtofl@exp,f,c
  1965  00144C  90D8               	bcf	status,0,c
  1966  00144E  360B               	rlcf	___xxtofl@arg,f,c
  1967  001450  360C               	rlcf	___xxtofl@arg+1,f,c
  1968  001452  360D               	rlcf	___xxtofl@arg+2,f,c
  1969  001454  360E               	rlcf	___xxtofl@arg+3,f,c
  1970  001456                     i2l2243:
  1971  001456  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1972  001458  D003               	goto	i2u127_40
  1973  00145A  0E02               	movlw	2
  1974  00145C  600A               	cpfslt	___xxtofl@exp,c
  1975  00145E  D7F5               	goto	i2l2241
  1976  001460                     i2u127_40:
  1977  001460  A00A               	btfss	___xxtofl@exp,0,c
  1978  001462  9E0D               	bcf	___xxtofl@arg+2,7,c
  1979  001464  90D8               	bcf	status,0,c
  1980  001466  320A               	rrcf	___xxtofl@exp,f,c
  1981  001468  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1982  00146C  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1983  00146E  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1984  001470  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1985  001472  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1986  001476  6A07               	clrf	??___xxtofl+2,c
  1987  001478  6A06               	clrf	??___xxtofl+1,c
  1988  00147A  6A05               	clrf	??___xxtofl,c
  1989  00147C  5005               	movf	??___xxtofl,w,c
  1990  00147E  120B               	iorwf	___xxtofl@arg,f,c
  1991  001480  5006               	movf	??___xxtofl+1,w,c
  1992  001482  120C               	iorwf	___xxtofl@arg+1,f,c
  1993  001484  5007               	movf	??___xxtofl+2,w,c
  1994  001486  120D               	iorwf	___xxtofl@arg+2,f,c
  1995  001488  5008               	movf	??___xxtofl+3,w,c
  1996  00148A  120E               	iorwf	___xxtofl@arg+3,f,c
  1997  00148C  5009               	movf	___xxtofl@sign,w,c
  1998  00148E  A4D8               	btfss	status,2,c
  1999  001490  AE04               	btfss	___xxtofl@val+3,7,c
  2000  001492  D001               	goto	i2l2259
  2001  001494  8E0E               	bsf	___xxtofl@arg+3,7,c
  2002  001496                     i2l2259:
  2003  001496  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2004  00149A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2005  00149E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2006  0014A2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2007  0014A6  0012               	return		;funcret
  2008  0014A8                     __end_of___xxtofl:
  2009                           	opt callstack 0
  2010                           
  2011 ;; *************** function ___fltol *****************
  2012 ;; Defined at:
  2013 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  f1              4   39[COMRAM] unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  exp1            1   48[COMRAM] unsigned char 
  2018 ;;  sign1           1   47[COMRAM] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  4   39[COMRAM] long 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;Total ram usage:       10 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_steering
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text14
  2042  001584                     __ptext14:
  2043                           	opt callstack 0
  2044  001584                     ___fltol:
  2045                           	opt callstack 24
  2046                           
  2047                           ;incstack = 0
  2048  001584  342A               	rlcf	___fltol@f1+2,w,c
  2049  001586  342B               	rlcf	___fltol@f1+3,w,c
  2050  001588  6E31               	movwf	___fltol@exp1,c
  2051  00158A  5031               	movf	___fltol@exp1,w,c
  2052  00158C  A4D8               	btfss	status,2,c
  2053  00158E  D009               	goto	i2l2179
  2054  001590                     i2u114_40:
  2055  001590  0E00               	movlw	0
  2056  001592  6E28               	movwf	?___fltol,c
  2057  001594  0E00               	movlw	0
  2058  001596  6E29               	movwf	?___fltol+1,c
  2059  001598  0E00               	movlw	0
  2060  00159A  6E2A               	movwf	?___fltol+2,c
  2061  00159C  0E00               	movlw	0
  2062  00159E  6E2B               	movwf	?___fltol+3,c
  2063  0015A0  0012               	return	
  2064  0015A2                     i2l2179:
  2065  0015A2  C028  F02C         	movff	___fltol@f1,??___fltol
  2066  0015A6  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  2067  0015AA  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  2068  0015AE  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  2069  0015B2  0E20               	movlw	32
  2070  0015B4  D005               	goto	i2u115_40
  2071  0015B6                     i2u115_45:
  2072  0015B6  90D8               	bcf	status,0,c
  2073  0015B8  322F               	rrcf	??___fltol+3,f,c
  2074  0015BA  322E               	rrcf	??___fltol+2,f,c
  2075  0015BC  322D               	rrcf	??___fltol+1,f,c
  2076  0015BE  322C               	rrcf	??___fltol,f,c
  2077  0015C0                     i2u115_40:
  2078  0015C0  2EE8               	decfsz	wreg,f,c
  2079  0015C2  D7F9               	goto	i2u115_45
  2080  0015C4  502C               	movf	??___fltol,w,c
  2081  0015C6  6E30               	movwf	___fltol@sign1,c
  2082  0015C8  8E2A               	bsf	___fltol@f1+2,7,c
  2083  0015CA  0EFF               	movlw	255
  2084  0015CC  1628               	andwf	___fltol@f1,f,c
  2085  0015CE  0EFF               	movlw	255
  2086  0015D0  1629               	andwf	___fltol@f1+1,f,c
  2087  0015D2  0EFF               	movlw	255
  2088  0015D4  162A               	andwf	___fltol@f1+2,f,c
  2089  0015D6  0E00               	movlw	0
  2090  0015D8  162B               	andwf	___fltol@f1+3,f,c
  2091  0015DA  0E96               	movlw	150
  2092  0015DC  5E31               	subwf	___fltol@exp1,f,c
  2093  0015DE  AE31               	btfss	___fltol@exp1,7,c
  2094  0015E0  D00D               	goto	i2l2199
  2095  0015E2  5031               	movf	___fltol@exp1,w,c
  2096  0015E4  0A80               	xorlw	128
  2097  0015E6  0F97               	addlw	151
  2098  0015E8  A0D8               	btfss	status,0,c
  2099  0015EA  D7D2               	goto	i2u114_40
  2100  0015EC                     i2l2195:
  2101  0015EC  90D8               	bcf	status,0,c
  2102  0015EE  322B               	rrcf	___fltol@f1+3,f,c
  2103  0015F0  322A               	rrcf	___fltol@f1+2,f,c
  2104  0015F2  3229               	rrcf	___fltol@f1+1,f,c
  2105  0015F4  3228               	rrcf	___fltol@f1,f,c
  2106  0015F6  3E31               	incfsz	___fltol@exp1,f,c
  2107  0015F8  D7F9               	goto	i2l2195
  2108  0015FA  D00D               	goto	i2u119_40
  2109  0015FC                     i2l2199:
  2110  0015FC  0E1F               	movlw	31
  2111  0015FE  6431               	cpfsgt	___fltol@exp1,c
  2112  001600  D007               	goto	i2l2207
  2113  001602  D7C6               	goto	i2u114_40
  2114  001604                     i2l2205:
  2115  001604  90D8               	bcf	status,0,c
  2116  001606  3628               	rlcf	___fltol@f1,f,c
  2117  001608  3629               	rlcf	___fltol@f1+1,f,c
  2118  00160A  362A               	rlcf	___fltol@f1+2,f,c
  2119  00160C  362B               	rlcf	___fltol@f1+3,f,c
  2120  00160E  0631               	decf	___fltol@exp1,f,c
  2121  001610                     i2l2207:
  2122  001610  5031               	movf	___fltol@exp1,w,c
  2123  001612  A4D8               	btfss	status,2,c
  2124  001614  D7F7               	goto	i2l2205
  2125  001616                     i2u119_40:
  2126  001616  5030               	movf	___fltol@sign1,w,c
  2127  001618  B4D8               	btfsc	status,2,c
  2128  00161A  D008               	goto	i2l2213
  2129  00161C  1E2B               	comf	___fltol@f1+3,f,c
  2130  00161E  1E2A               	comf	___fltol@f1+2,f,c
  2131  001620  1E29               	comf	___fltol@f1+1,f,c
  2132  001622  6C28               	negf	___fltol@f1,c
  2133  001624  0E00               	movlw	0
  2134  001626  2229               	addwfc	___fltol@f1+1,f,c
  2135  001628  222A               	addwfc	___fltol@f1+2,f,c
  2136  00162A  222B               	addwfc	___fltol@f1+3,f,c
  2137  00162C                     i2l2213:
  2138  00162C  C028  F028         	movff	___fltol@f1,?___fltol
  2139  001630  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  2140  001634  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  2141  001638  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  2142  00163C  0012               	return		;funcret
  2143  00163E                     __end_of___fltol:
  2144                           	opt callstack 0
  2145                           
  2146 ;; *************** function ___flmul *****************
  2147 ;; Defined at:
  2148 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  b               4   14[COMRAM] long 
  2151 ;;  a               4   18[COMRAM] long 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  prod            4   33[COMRAM] struct .
  2154 ;;  grs             4   27[COMRAM] unsigned long 
  2155 ;;  temp            2   37[COMRAM] struct .
  2156 ;;  bexp            1   32[COMRAM] unsigned char 
  2157 ;;  aexp            1   31[COMRAM] unsigned char 
  2158 ;;  sign            1   26[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  4   14[COMRAM] unsigned char 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, prodl, prodh
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2168 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;Total ram usage:       25 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_steering
  2178 ;;		_read_Ibat
  2179 ;;		_read_Ubat
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text15
  2184  001016                     __ptext15:
  2185                           	opt callstack 0
  2186  001016                     ___flmul:
  2187                           	opt callstack 24
  2188                           
  2189                           ;incstack = 0
  2190  001016  5012               	movf	___flmul@b+3,w,c
  2191  001018  0B80               	andlw	128
  2192  00101A  6E1B               	movwf	___flmul@sign,c
  2193  00101C  5012               	movf	___flmul@b+3,w,c
  2194  00101E  2412               	addwf	___flmul@b+3,w,c
  2195  001020  6E21               	movwf	___flmul@bexp,c
  2196  001022  BE11               	btfsc	___flmul@b+2,7,c
  2197  001024  8021               	bsf	___flmul@bexp,0,c
  2198  001026  5021               	movf	___flmul@bexp,w,c
  2199  001028  B4D8               	btfsc	status,2,c
  2200  00102A  D00D               	goto	i2l2013
  2201  00102C  2821               	incf	___flmul@bexp,w,c
  2202  00102E  A4D8               	btfss	status,2,c
  2203  001030  D008               	goto	i2l2011
  2204  001032  0E00               	movlw	0
  2205  001034  6E0F               	movwf	___flmul@b,c
  2206  001036  0E00               	movlw	0
  2207  001038  6E10               	movwf	___flmul@b+1,c
  2208  00103A  0E00               	movlw	0
  2209  00103C  6E11               	movwf	___flmul@b+2,c
  2210  00103E  0E00               	movlw	0
  2211  001040  6E12               	movwf	___flmul@b+3,c
  2212  001042                     i2l2011:
  2213  001042  8E11               	bsf	___flmul@b+2,7,c
  2214  001044  D008               	goto	i2l2015
  2215  001046                     i2l2013:
  2216  001046  0E00               	movlw	0
  2217  001048  6E0F               	movwf	___flmul@b,c
  2218  00104A  0E00               	movlw	0
  2219  00104C  6E10               	movwf	___flmul@b+1,c
  2220  00104E  0E00               	movlw	0
  2221  001050  6E11               	movwf	___flmul@b+2,c
  2222  001052  0E00               	movlw	0
  2223  001054  6E12               	movwf	___flmul@b+3,c
  2224  001056                     i2l2015:
  2225  001056  5016               	movf	___flmul@a+3,w,c
  2226  001058  0B80               	andlw	128
  2227  00105A  1A1B               	xorwf	___flmul@sign,f,c
  2228  00105C  5016               	movf	___flmul@a+3,w,c
  2229  00105E  2416               	addwf	___flmul@a+3,w,c
  2230  001060  6E20               	movwf	___flmul@aexp,c
  2231  001062  BE15               	btfsc	___flmul@a+2,7,c
  2232  001064  8020               	bsf	___flmul@aexp,0,c
  2233  001066  5020               	movf	___flmul@aexp,w,c
  2234  001068  B4D8               	btfsc	status,2,c
  2235  00106A  D00D               	goto	i2l2031
  2236  00106C  2820               	incf	___flmul@aexp,w,c
  2237  00106E  A4D8               	btfss	status,2,c
  2238  001070  D008               	goto	i2l2029
  2239  001072  0E00               	movlw	0
  2240  001074  6E13               	movwf	___flmul@a,c
  2241  001076  0E00               	movlw	0
  2242  001078  6E14               	movwf	___flmul@a+1,c
  2243  00107A  0E00               	movlw	0
  2244  00107C  6E15               	movwf	___flmul@a+2,c
  2245  00107E  0E00               	movlw	0
  2246  001080  6E16               	movwf	___flmul@a+3,c
  2247  001082                     i2l2029:
  2248  001082  8E15               	bsf	___flmul@a+2,7,c
  2249  001084  D008               	goto	i2l1004
  2250  001086                     i2l2031:
  2251  001086  0E00               	movlw	0
  2252  001088  6E13               	movwf	___flmul@a,c
  2253  00108A  0E00               	movlw	0
  2254  00108C  6E14               	movwf	___flmul@a+1,c
  2255  00108E  0E00               	movlw	0
  2256  001090  6E15               	movwf	___flmul@a+2,c
  2257  001092  0E00               	movlw	0
  2258  001094  6E16               	movwf	___flmul@a+3,c
  2259  001096                     i2l1004:
  2260  001096  5020               	movf	___flmul@aexp,w,c
  2261  001098  B4D8               	btfsc	status,2,c
  2262  00109A  D003               	goto	i2u96_40
  2263  00109C  5021               	movf	___flmul@bexp,w,c
  2264  00109E  A4D8               	btfss	status,2,c
  2265  0010A0  D009               	goto	i2l2039
  2266  0010A2                     i2u96_40:
  2267  0010A2  0E00               	movlw	0
  2268  0010A4  6E0F               	movwf	?___flmul,c
  2269  0010A6  0E00               	movlw	0
  2270  0010A8  6E10               	movwf	?___flmul+1,c
  2271  0010AA  0E00               	movlw	0
  2272  0010AC  6E11               	movwf	?___flmul+2,c
  2273  0010AE  0E00               	movlw	0
  2274  0010B0  6E12               	movwf	?___flmul+3,c
  2275  0010B2  0012               	return	
  2276  0010B4                     i2l2039:
  2277  0010B4  5015               	movf	___flmul@a+2,w,c
  2278  0010B6  020F               	mulwf	___flmul@b,c
  2279  0010B8  CFF3 F026          	movff	prodl,___flmul@temp
  2280  0010BC  CFF4 F027          	movff	prodh,___flmul@temp+1
  2281  0010C0  5026               	movf	___flmul@temp,w,c
  2282  0010C2  6E1C               	movwf	___flmul@grs,c
  2283  0010C4  6A1D               	clrf	___flmul@grs+1,c
  2284  0010C6  6A1E               	clrf	___flmul@grs+2,c
  2285  0010C8  6A1F               	clrf	___flmul@grs+3,c
  2286  0010CA  5027               	movf	___flmul@temp+1,w,c
  2287  0010CC  6E22               	movwf	___flmul@prod,c
  2288  0010CE  6A23               	clrf	___flmul@prod+1,c
  2289  0010D0  6A24               	clrf	___flmul@prod+2,c
  2290  0010D2  6A25               	clrf	___flmul@prod+3,c
  2291  0010D4  5014               	movf	___flmul@a+1,w,c
  2292  0010D6  0210               	mulwf	___flmul@b+1,c
  2293  0010D8  CFF3 F026          	movff	prodl,___flmul@temp
  2294  0010DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  2295  0010E0  5026               	movf	___flmul@temp,w,c
  2296  0010E2  261C               	addwf	___flmul@grs,f,c
  2297  0010E4  0E00               	movlw	0
  2298  0010E6  221D               	addwfc	___flmul@grs+1,f,c
  2299  0010E8  221E               	addwfc	___flmul@grs+2,f,c
  2300  0010EA  221F               	addwfc	___flmul@grs+3,f,c
  2301  0010EC  5027               	movf	___flmul@temp+1,w,c
  2302  0010EE  2622               	addwf	___flmul@prod,f,c
  2303  0010F0  0E00               	movlw	0
  2304  0010F2  2223               	addwfc	___flmul@prod+1,f,c
  2305  0010F4  2224               	addwfc	___flmul@prod+2,f,c
  2306  0010F6  2225               	addwfc	___flmul@prod+3,f,c
  2307  0010F8  5013               	movf	___flmul@a,w,c
  2308  0010FA  0211               	mulwf	___flmul@b+2,c
  2309  0010FC  CFF3 F026          	movff	prodl,___flmul@temp
  2310  001100  CFF4 F027          	movff	prodh,___flmul@temp+1
  2311  001104  5026               	movf	___flmul@temp,w,c
  2312  001106  261C               	addwf	___flmul@grs,f,c
  2313  001108  0E00               	movlw	0
  2314  00110A  221D               	addwfc	___flmul@grs+1,f,c
  2315  00110C  221E               	addwfc	___flmul@grs+2,f,c
  2316  00110E  221F               	addwfc	___flmul@grs+3,f,c
  2317  001110  5027               	movf	___flmul@temp+1,w,c
  2318  001112  2622               	addwf	___flmul@prod,f,c
  2319  001114  0E00               	movlw	0
  2320  001116  2223               	addwfc	___flmul@prod+1,f,c
  2321  001118  2224               	addwfc	___flmul@prod+2,f,c
  2322  00111A  2225               	addwfc	___flmul@prod+3,f,c
  2323  00111C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2324  001120  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2325  001124  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2326  001128  6A1C               	clrf	___flmul@grs,c
  2327  00112A  5013               	movf	___flmul@a,w,c
  2328  00112C  0210               	mulwf	___flmul@b+1,c
  2329  00112E  CFF3 F026          	movff	prodl,___flmul@temp
  2330  001132  CFF4 F027          	movff	prodh,___flmul@temp+1
  2331  001136  5026               	movf	___flmul@temp,w,c
  2332  001138  261C               	addwf	___flmul@grs,f,c
  2333  00113A  5027               	movf	___flmul@temp+1,w,c
  2334  00113C  221D               	addwfc	___flmul@grs+1,f,c
  2335  00113E  0E00               	movlw	0
  2336  001140  221E               	addwfc	___flmul@grs+2,f,c
  2337  001142  0E00               	movlw	0
  2338  001144  221F               	addwfc	___flmul@grs+3,f,c
  2339  001146  5014               	movf	___flmul@a+1,w,c
  2340  001148  020F               	mulwf	___flmul@b,c
  2341  00114A  CFF3 F026          	movff	prodl,___flmul@temp
  2342  00114E  CFF4 F027          	movff	prodh,___flmul@temp+1
  2343  001152  5026               	movf	___flmul@temp,w,c
  2344  001154  261C               	addwf	___flmul@grs,f,c
  2345  001156  5027               	movf	___flmul@temp+1,w,c
  2346  001158  221D               	addwfc	___flmul@grs+1,f,c
  2347  00115A  0E00               	movlw	0
  2348  00115C  221E               	addwfc	___flmul@grs+2,f,c
  2349  00115E  0E00               	movlw	0
  2350  001160  221F               	addwfc	___flmul@grs+3,f,c
  2351  001162  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2352  001166  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2353  00116A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2354  00116E  6A1C               	clrf	___flmul@grs,c
  2355  001170  5013               	movf	___flmul@a,w,c
  2356  001172  020F               	mulwf	___flmul@b,c
  2357  001174  CFF3 F026          	movff	prodl,___flmul@temp
  2358  001178  CFF4 F027          	movff	prodh,___flmul@temp+1
  2359  00117C  5026               	movf	___flmul@temp,w,c
  2360  00117E  261C               	addwf	___flmul@grs,f,c
  2361  001180  5027               	movf	___flmul@temp+1,w,c
  2362  001182  221D               	addwfc	___flmul@grs+1,f,c
  2363  001184  0E00               	movlw	0
  2364  001186  221E               	addwfc	___flmul@grs+2,f,c
  2365  001188  0E00               	movlw	0
  2366  00118A  221F               	addwfc	___flmul@grs+3,f,c
  2367  00118C  5015               	movf	___flmul@a+2,w,c
  2368  00118E  0210               	mulwf	___flmul@b+1,c
  2369  001190  CFF3 F026          	movff	prodl,___flmul@temp
  2370  001194  CFF4 F027          	movff	prodh,___flmul@temp+1
  2371  001198  5026               	movf	___flmul@temp,w,c
  2372  00119A  2622               	addwf	___flmul@prod,f,c
  2373  00119C  5027               	movf	___flmul@temp+1,w,c
  2374  00119E  2223               	addwfc	___flmul@prod+1,f,c
  2375  0011A0  0E00               	movlw	0
  2376  0011A2  2224               	addwfc	___flmul@prod+2,f,c
  2377  0011A4  0E00               	movlw	0
  2378  0011A6  2225               	addwfc	___flmul@prod+3,f,c
  2379  0011A8  5014               	movf	___flmul@a+1,w,c
  2380  0011AA  0211               	mulwf	___flmul@b+2,c
  2381  0011AC  CFF3 F026          	movff	prodl,___flmul@temp
  2382  0011B0  CFF4 F027          	movff	prodh,___flmul@temp+1
  2383  0011B4  5026               	movf	___flmul@temp,w,c
  2384  0011B6  2622               	addwf	___flmul@prod,f,c
  2385  0011B8  5027               	movf	___flmul@temp+1,w,c
  2386  0011BA  2223               	addwfc	___flmul@prod+1,f,c
  2387  0011BC  0E00               	movlw	0
  2388  0011BE  2224               	addwfc	___flmul@prod+2,f,c
  2389  0011C0  0E00               	movlw	0
  2390  0011C2  2225               	addwfc	___flmul@prod+3,f,c
  2391  0011C4  5015               	movf	___flmul@a+2,w,c
  2392  0011C6  0211               	mulwf	___flmul@b+2,c
  2393  0011C8  CFF3 F026          	movff	prodl,___flmul@temp
  2394  0011CC  CFF4 F027          	movff	prodh,___flmul@temp+1
  2395  0011D0  5026               	movf	___flmul@temp,w,c
  2396  0011D2  6E17               	movwf	??___flmul& (0+255),c
  2397  0011D4  5027               	movf	___flmul@temp+1,w,c
  2398  0011D6  6E18               	movwf	(??___flmul+1)& (0+255),c
  2399  0011D8  6A19               	clrf	(??___flmul+2)& (0+255),c
  2400  0011DA  6A1A               	clrf	(??___flmul+3)& (0+255),c
  2401  0011DC  C019  F01A         	movff	??___flmul+2,??___flmul+3
  2402  0011E0  C018  F019         	movff	??___flmul+1,??___flmul+2
  2403  0011E4  C017  F018         	movff	??___flmul,??___flmul+1
  2404  0011E8  6A17               	clrf	??___flmul,c
  2405  0011EA  5017               	movf	??___flmul,w,c
  2406  0011EC  2622               	addwf	___flmul@prod,f,c
  2407  0011EE  5018               	movf	??___flmul+1,w,c
  2408  0011F0  2223               	addwfc	___flmul@prod+1,f,c
  2409  0011F2  5019               	movf	??___flmul+2,w,c
  2410  0011F4  2224               	addwfc	___flmul@prod+2,f,c
  2411  0011F6  501A               	movf	??___flmul+3,w,c
  2412  0011F8  2225               	addwfc	___flmul@prod+3,f,c
  2413  0011FA  C01C  F017         	movff	___flmul@grs,??___flmul
  2414  0011FE  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  2415  001202  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  2416  001206  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  2417  00120A  0E19               	movlw	25
  2418  00120C  D005               	goto	i2u97_40
  2419  00120E                     i2u97_45:
  2420  00120E  90D8               	bcf	status,0,c
  2421  001210  321A               	rrcf	??___flmul+3,f,c
  2422  001212  3219               	rrcf	??___flmul+2,f,c
  2423  001214  3218               	rrcf	??___flmul+1,f,c
  2424  001216  3217               	rrcf	??___flmul,f,c
  2425  001218                     i2u97_40:
  2426  001218  2EE8               	decfsz	wreg,f,c
  2427  00121A  D7F9               	goto	i2u97_45
  2428  00121C  5017               	movf	??___flmul,w,c
  2429  00121E  2622               	addwf	___flmul@prod,f,c
  2430  001220  5018               	movf	??___flmul+1,w,c
  2431  001222  2223               	addwfc	___flmul@prod+1,f,c
  2432  001224  5019               	movf	??___flmul+2,w,c
  2433  001226  2224               	addwfc	___flmul@prod+2,f,c
  2434  001228  501A               	movf	??___flmul+3,w,c
  2435  00122A  2225               	addwfc	___flmul@prod+3,f,c
  2436  00122C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2437  001230  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2438  001234  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2439  001238  6A1C               	clrf	___flmul@grs,c
  2440  00123A  5020               	movf	___flmul@aexp,w,c
  2441  00123C  C021  F017         	movff	___flmul@bexp,??___flmul
  2442  001240  6A18               	clrf	(??___flmul+1)& (0+255),c
  2443  001242  2617               	addwf	??___flmul,f,c
  2444  001244  0E00               	movlw	0
  2445  001246  2218               	addwfc	??___flmul+1,f,c
  2446  001248  0E82               	movlw	130
  2447  00124A  2417               	addwf	??___flmul,w,c
  2448  00124C  6E26               	movwf	___flmul@temp,c
  2449  00124E  0EFF               	movlw	255
  2450  001250  2018               	addwfc	??___flmul+1,w,c
  2451  001252  6E27               	movwf	___flmul@temp+1,c
  2452  001254  D00F               	goto	i2l2087
  2453  001256                     i2l2081:
  2454  001256  90D8               	bcf	status,0,c
  2455  001258  3622               	rlcf	___flmul@prod,f,c
  2456  00125A  3623               	rlcf	___flmul@prod+1,f,c
  2457  00125C  3624               	rlcf	___flmul@prod+2,f,c
  2458  00125E  3625               	rlcf	___flmul@prod+3,f,c
  2459  001260  BE1F               	btfsc	___flmul@grs+3,7,c
  2460  001262  8022               	bsf	___flmul@prod,0,c
  2461  001264  90D8               	bcf	status,0,c
  2462  001266  361C               	rlcf	___flmul@grs,f,c
  2463  001268  361D               	rlcf	___flmul@grs+1,f,c
  2464  00126A  361E               	rlcf	___flmul@grs+2,f,c
  2465  00126C  361F               	rlcf	___flmul@grs+3,f,c
  2466  00126E  0626               	decf	___flmul@temp,f,c
  2467  001270  A0D8               	btfss	status,0,c
  2468  001272  0627               	decf	___flmul@temp+1,f,c
  2469  001274                     i2l2087:
  2470  001274  AE24               	btfss	___flmul@prod+2,7,c
  2471  001276  D7EF               	goto	i2l2081
  2472  001278  0E00               	movlw	0
  2473  00127A  6E20               	movwf	___flmul@aexp,c
  2474  00127C  AE1F               	btfss	___flmul@grs+3,7,c
  2475  00127E  D017               	goto	i2l1013
  2476  001280  0EFF               	movlw	255
  2477  001282  141C               	andwf	___flmul@grs,w,c
  2478  001284  6E17               	movwf	??___flmul& (0+255),c
  2479  001286  0EFF               	movlw	255
  2480  001288  141D               	andwf	___flmul@grs+1,w,c
  2481  00128A  6E18               	movwf	(??___flmul+1)& (0+255),c
  2482  00128C  0EFF               	movlw	255
  2483  00128E  141E               	andwf	___flmul@grs+2,w,c
  2484  001290  6E19               	movwf	(??___flmul+2)& (0+255),c
  2485  001292  0E7F               	movlw	127
  2486  001294  141F               	andwf	___flmul@grs+3,w,c
  2487  001296  6E1A               	movwf	(??___flmul+3)& (0+255),c
  2488  001298  5017               	movf	??___flmul,w,c
  2489  00129A  1018               	iorwf	??___flmul+1,w,c
  2490  00129C  1019               	iorwf	??___flmul+2,w,c
  2491  00129E  101A               	iorwf	??___flmul+3,w,c
  2492  0012A0  B4D8               	btfsc	status,2,c
  2493  0012A2  D003               	goto	i2l1014
  2494  0012A4                     i2u101_40:
  2495  0012A4  0E01               	movlw	1
  2496  0012A6  6E20               	movwf	___flmul@aexp,c
  2497  0012A8  D002               	goto	i2l1013
  2498  0012AA                     i2l1014:
  2499  0012AA  B022               	btfsc	___flmul@prod,0,c
  2500  0012AC  D7FB               	goto	i2u101_40
  2501  0012AE                     i2l1013:
  2502  0012AE  5020               	movf	___flmul@aexp,w,c
  2503  0012B0  B4D8               	btfsc	status,2,c
  2504  0012B2  D01F               	goto	i2l2107
  2505  0012B4  0E01               	movlw	1
  2506  0012B6  2622               	addwf	___flmul@prod,f,c
  2507  0012B8  0E00               	movlw	0
  2508  0012BA  2223               	addwfc	___flmul@prod+1,f,c
  2509  0012BC  2224               	addwfc	___flmul@prod+2,f,c
  2510  0012BE  2225               	addwfc	___flmul@prod+3,f,c
  2511  0012C0  A025               	btfss	___flmul@prod+3,0,c
  2512  0012C2  D017               	goto	i2l2107
  2513  0012C4  C022  F017         	movff	___flmul@prod,??___flmul
  2514  0012C8  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2515  0012CC  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2516  0012D0  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2517  0012D4  341A               	rlcf	??___flmul+3,w,c
  2518  0012D6  321A               	rrcf	??___flmul+3,f,c
  2519  0012D8  3219               	rrcf	??___flmul+2,f,c
  2520  0012DA  3218               	rrcf	??___flmul+1,f,c
  2521  0012DC  3217               	rrcf	??___flmul,f,c
  2522  0012DE  C017  F022         	movff	??___flmul,___flmul@prod
  2523  0012E2  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2524  0012E6  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2525  0012EA  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2526  0012EE  4A26               	infsnz	___flmul@temp,f,c
  2527  0012F0  2A27               	incf	___flmul@temp+1,f,c
  2528  0012F2                     i2l2107:
  2529  0012F2  BE27               	btfsc	___flmul@temp+1,7,c
  2530  0012F4  D00D               	goto	i2l2111
  2531  0012F6  5027               	movf	___flmul@temp+1,w,c
  2532  0012F8  E103               	bnz	i2u105_40
  2533  0012FA  2826               	incf	___flmul@temp,w,c
  2534  0012FC  A0D8               	btfss	status,0,c
  2535  0012FE  D008               	goto	i2l2111
  2536  001300                     i2u105_40:
  2537  001300  0E00               	movlw	0
  2538  001302  6E22               	movwf	___flmul@prod,c
  2539  001304  0E00               	movlw	0
  2540  001306  6E23               	movwf	___flmul@prod+1,c
  2541  001308  0E80               	movlw	128
  2542  00130A  6E24               	movwf	___flmul@prod+2,c
  2543  00130C  0E7F               	movlw	127
  2544  00130E  D020               	goto	L7
  2545  001310                     i2l2111:
  2546  001310  BE27               	btfsc	___flmul@temp+1,7,c
  2547  001312  D005               	goto	i2u106_40
  2548  001314  5027               	movf	___flmul@temp+1,w,c
  2549  001316  E10E               	bnz	i2l1021
  2550  001318  0426               	decf	___flmul@temp,w,c
  2551  00131A  B0D8               	btfsc	status,0,c
  2552  00131C  D00B               	goto	i2l1021
  2553  00131E                     i2u106_40:
  2554  00131E  0E00               	movlw	0
  2555  001320  6E22               	movwf	___flmul@prod,c
  2556  001322  0E00               	movlw	0
  2557  001324  6E23               	movwf	___flmul@prod+1,c
  2558  001326  0E00               	movlw	0
  2559  001328  6E24               	movwf	___flmul@prod+2,c
  2560  00132A  0E00               	movlw	0
  2561  00132C  6E25               	movwf	___flmul@prod+3,c
  2562  00132E  0E00               	movlw	0
  2563  001330  6E1B               	movwf	___flmul@sign,c
  2564  001332  D00F               	goto	i2l2123
  2565  001334                     i2l1021:
  2566  001334  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2567  001338  0EFF               	movlw	255
  2568  00133A  1622               	andwf	___flmul@prod,f,c
  2569  00133C  0EFF               	movlw	255
  2570  00133E  1623               	andwf	___flmul@prod+1,f,c
  2571  001340  0E7F               	movlw	127
  2572  001342  1624               	andwf	___flmul@prod+2,f,c
  2573  001344  0E00               	movlw	0
  2574  001346  1625               	andwf	___flmul@prod+3,f,c
  2575  001348  B021               	btfsc	___flmul@bexp,0,c
  2576  00134A  8E24               	bsf	___flmul@prod+2,7,c
  2577  00134C  90D8               	bcf	status,0,c
  2578  00134E  3021               	rrcf	___flmul@bexp,w,c
  2579  001350                     L7:
  2580  001350  6E25               	movwf	___flmul@prod+3,c
  2581  001352                     i2l2123:
  2582  001352  501B               	movf	___flmul@sign,w,c
  2583  001354  1225               	iorwf	___flmul@prod+3,f,c
  2584  001356  C022  F00F         	movff	___flmul@prod,?___flmul
  2585  00135A  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2586  00135E  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2587  001362  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2588  001366  0012               	return		;funcret
  2589  001368                     __end_of___flmul:
  2590                           	opt callstack 0
  2591                           
  2592 ;; *************** function ___awdiv *****************
  2593 ;; Defined at:
  2594 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  dividend        2    0[COMRAM] int 
  2597 ;;  divisor         2    2[COMRAM] int 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  quotient        2    6[COMRAM] int 
  2600 ;;  sign            1    5[COMRAM] unsigned char 
  2601 ;;  counter         1    4[COMRAM] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  2    0[COMRAM] int 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;Total ram usage:        8 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_steering
  2621 ;;		_steering_angle
  2622 ;;		_USARTWriteInt
  2623 ;;		_USART2WriteInt
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text16
  2628  0016C2                     __ptext16:
  2629                           	opt callstack 0
  2630  0016C2                     ___awdiv:
  2631                           	opt callstack 24
  2632                           
  2633                           ;incstack = 0
  2634  0016C2  0E00               	movlw	0
  2635  0016C4  6E06               	movwf	___awdiv@sign,c
  2636  0016C6  AE04               	btfss	___awdiv@divisor+1,7,c
  2637  0016C8  D006               	goto	i2l2137
  2638  0016CA  6C03               	negf	___awdiv@divisor,c
  2639  0016CC  1E04               	comf	___awdiv@divisor+1,f,c
  2640  0016CE  B0D8               	btfsc	status,0,c
  2641  0016D0  2A04               	incf	___awdiv@divisor+1,f,c
  2642  0016D2  0E01               	movlw	1
  2643  0016D4  6E06               	movwf	___awdiv@sign,c
  2644  0016D6                     i2l2137:
  2645  0016D6  AE02               	btfss	___awdiv@dividend+1,7,c
  2646  0016D8  D006               	goto	i2l2143
  2647  0016DA  6C01               	negf	___awdiv@dividend,c
  2648  0016DC  1E02               	comf	___awdiv@dividend+1,f,c
  2649  0016DE  B0D8               	btfsc	status,0,c
  2650  0016E0  2A02               	incf	___awdiv@dividend+1,f,c
  2651  0016E2  0E01               	movlw	1
  2652  0016E4  1A06               	xorwf	___awdiv@sign,f,c
  2653  0016E6                     i2l2143:
  2654  0016E6  0E00               	movlw	0
  2655  0016E8  6E08               	movwf	___awdiv@quotient+1,c
  2656  0016EA  0E00               	movlw	0
  2657  0016EC  6E07               	movwf	___awdiv@quotient,c
  2658  0016EE  5003               	movf	___awdiv@divisor,w,c
  2659  0016F0  1004               	iorwf	___awdiv@divisor+1,w,c
  2660  0016F2  B4D8               	btfsc	status,2,c
  2661  0016F4  D01C               	goto	i2l2165
  2662  0016F6  0E01               	movlw	1
  2663  0016F8  6E05               	movwf	___awdiv@counter,c
  2664  0016FA  D004               	goto	i2l2151
  2665  0016FC                     i2l2149:
  2666  0016FC  90D8               	bcf	status,0,c
  2667  0016FE  3603               	rlcf	___awdiv@divisor,f,c
  2668  001700  3604               	rlcf	___awdiv@divisor+1,f,c
  2669  001702  2A05               	incf	___awdiv@counter,f,c
  2670  001704                     i2l2151:
  2671  001704  AE04               	btfss	___awdiv@divisor+1,7,c
  2672  001706  D7FA               	goto	i2l2149
  2673  001708                     i2u111_40:
  2674  001708  90D8               	bcf	status,0,c
  2675  00170A  3607               	rlcf	___awdiv@quotient,f,c
  2676  00170C  3608               	rlcf	___awdiv@quotient+1,f,c
  2677  00170E  5003               	movf	___awdiv@divisor,w,c
  2678  001710  5C01               	subwf	___awdiv@dividend,w,c
  2679  001712  5004               	movf	___awdiv@divisor+1,w,c
  2680  001714  5802               	subwfb	___awdiv@dividend+1,w,c
  2681  001716  A0D8               	btfss	status,0,c
  2682  001718  D005               	goto	i2l2161
  2683  00171A  5003               	movf	___awdiv@divisor,w,c
  2684  00171C  5E01               	subwf	___awdiv@dividend,f,c
  2685  00171E  5004               	movf	___awdiv@divisor+1,w,c
  2686  001720  5A02               	subwfb	___awdiv@dividend+1,f,c
  2687  001722  8007               	bsf	___awdiv@quotient,0,c
  2688  001724                     i2l2161:
  2689  001724  90D8               	bcf	status,0,c
  2690  001726  3204               	rrcf	___awdiv@divisor+1,f,c
  2691  001728  3203               	rrcf	___awdiv@divisor,f,c
  2692  00172A  2E05               	decfsz	___awdiv@counter,f,c
  2693  00172C  D7ED               	goto	i2u111_40
  2694  00172E                     i2l2165:
  2695  00172E  5006               	movf	___awdiv@sign,w,c
  2696  001730  B4D8               	btfsc	status,2,c
  2697  001732  D004               	goto	i2l2169
  2698  001734  6C07               	negf	___awdiv@quotient,c
  2699  001736  1E08               	comf	___awdiv@quotient+1,f,c
  2700  001738  B0D8               	btfsc	status,0,c
  2701  00173A  2A08               	incf	___awdiv@quotient+1,f,c
  2702  00173C                     i2l2169:
  2703  00173C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2704  001740  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2705  001744  0012               	return		;funcret
  2706  001746                     __end_of___awdiv:
  2707                           	opt callstack 0
  2708                           
  2709                           	psect	rparam
  2710  0000                     
  2711                           	psect	temp
  2712  00005F                     btemp:
  2713                           	opt callstack 0
  2714  00005F                     	ds	1
  2715  0000                     int$flags	set	btemp
  2716  0000                     wtemp8	set	btemp+1
  2717  0000                     ttemp5	set	btemp+1
  2718  0000                     ttemp6	set	btemp+4
  2719  0000                     ttemp7	set	btemp+8
  2720                           tosu	equ	0xFFF
  2721                           tosh	equ	0xFFE
  2722                           tosl	equ	0xFFD
  2723                           stkptr	equ	0xFFC
  2724                           pclatu	equ	0xFFB
  2725                           pclath	equ	0xFFA
  2726                           pcl	equ	0xFF9
  2727                           tblptru	equ	0xFF8
  2728                           tblptrh	equ	0xFF7
  2729                           tblptrl	equ	0xFF6
  2730                           tablat	equ	0xFF5
  2731                           prodh	equ	0xFF4
  2732                           prodl	equ	0xFF3
  2733                           indf0	equ	0xFEF
  2734                           postinc0	equ	0xFEE
  2735                           postdec0	equ	0xFED
  2736                           preinc0	equ	0xFEC
  2737                           plusw0	equ	0xFEB
  2738                           fsr0h	equ	0xFEA
  2739                           fsr0l	equ	0xFE9
  2740                           wreg	equ	0xFE8
  2741                           indf1	equ	0xFE7
  2742                           postinc1	equ	0xFE6
  2743                           postdec1	equ	0xFE5
  2744                           preinc1	equ	0xFE4
  2745                           plusw1	equ	0xFE3
  2746                           fsr1h	equ	0xFE2
  2747                           fsr1l	equ	0xFE1
  2748                           bsr	equ	0xFE0
  2749                           indf2	equ	0xFDF
  2750                           postinc2	equ	0xFDE
  2751                           postdec2	equ	0xFDD
  2752                           preinc2	equ	0xFDC
  2753                           plusw2	equ	0xFDB
  2754                           fsr2h	equ	0xFDA
  2755                           fsr2l	equ	0xFD9
  2756                           status	equ	0xFD8


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         124
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      94
    BANK0           160      6      96
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    USART2WriteString@str	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _serial in COMRAM

    _serial->_steering_angle
    _steering_angle->_steering
    _steering->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    _eusart_config->_USART2Init
    _eusart_config->_USARTInit
    _USART2WriteString->_USART2WriteChar
    _USART2GotoNewLine->_USART2WriteChar

Critical Paths under _serial in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _serial in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _serial in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _serial in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _serial in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _serial in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _serial in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _serial in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _serial in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _serial in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _serial in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _serial in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _serial in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _serial in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _serial in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _serial in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     361
                                              4 BANK0      2     2      0
                         _adc_config
                             _config
                      _eusart_config
                         _pwm_config
 ---------------------------------------------------------------------------------
 (1) _pwm_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eusart_config                                        0     0      0     361
                  _USART2GotoNewLine
                         _USART2Init
                  _USART2WriteString
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            4     2      2      98
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _USART2WriteString                                    2     0      2     143
                                              1 BANK0      2     0      2
                    _USART2WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART2Init                                           4     2      2      98
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _USART2GotoNewLine                                    0     0      0      22
                    _USART2WriteChar
 ---------------------------------------------------------------------------------
 (3) _USART2WriteChar                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _serial                                               3     3      0    5655
                                             55 COMRAM     3     3      0
                     _steering_angle
 ---------------------------------------------------------------------------------
 (5) _steering_angle                                       3     3      0    5631
                                             52 COMRAM     3     3      0
                            ___awdiv
                           _steering
 ---------------------------------------------------------------------------------
 (6) _steering                                             3     2      1    4479
                                             49 COMRAM     3     2      1
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     381
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    2200
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_config
   _config
   _eusart_config
     _USART2GotoNewLine
       _USART2WriteChar
     _USART2Init
     _USART2WriteString
       _USART2WriteChar
     _USARTInit
   _pwm_config

 _serial (ROOT)
   _steering_angle
     ___awdiv
     _steering
       ___awdiv
       ___flmul
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6      60       5       60.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      5E       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE      12        0.0%
DATA                 0      0      BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Feb 21 21:12:49 2020

                ___awdiv@sign 0006            USARTInit@baud_rate 00BA                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                         l362 16AC                           l276 1824                  __CFG_CPB$OFF 000000  
                         _PR2 000FBB                  __CFG_CPD$OFF 000000                           _TMR 0059  
                         _cor 005B                           wreg 000FE8                    _TXSTA1bits 000FAC  
                  _TXSTA2bits 000F72                  ___flmul@aexp 0020                  ___flmul@bexp 0021  
           _USART2GotoNewLine 19A0                  ___flmul@sign 001B                  ___flmul@temp 0026  
                ___flmul@prod 0022                  __CFG_LVP$OFF 000000            ?_USART2GotoNewLine 0001  
                ___fltol@exp1 0031                          l2303 164A                          l2305 1652  
                        l2313 1660                          l2307 1656                          l2309 165A  
                        l2341 1936                          l2271 17D2                          l2345 194C  
                        l2265 17C6                          l2267 17CA                          l2275 17D8  
                        l2269 17CE                          l2463 1796                          l2951 1808  
                        l2961 169A                          l2953 1812                          l1995 19B2  
                        l2963 16A4                          l2955 181C                          l2957 1686  
                        l2949 17FE                          l2959 1690                          STR_1 1001  
                        u1405 1762                          _LATA 000F89                          _LATB 000F8A  
                        u1407 1764                          _LATC 000F8B                          _LATD 000F8C  
                        _LATE 000F8D                          u1787 1788                          u1797 17A2  
                        i2l64 0022                          _TMR1 000FCE                          _TMR3 000FB2  
                        _Ibat 004B                          _Ubat 0043                          _main 1746  
                        _tens 003F                          btemp 005F                 __CFG_BORV$190 000000  
         ??_USART2GotoNewLine 00BB                          prodh 000FF4                          prodl 000FF3  
                        start 002E                 __CFG_IESO$OFF 000000                  ___param_bank 000000  
                _BAUDCON2bits 000F70                 ___fltol@sign1 0030                         ?_main 0001  
             __end_of___awdiv 1746               __end_of___flmul 1368               __end_of___fltol 163E  
             ___awdiv@divisor 0003                         _T2CON 000FBA                         _RC1IF 007CF5  
             ___awdiv@counter 0005                         _RCREG 000FAE     __end_of_USART2GotoNewLine 19AE  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
                       _PORTD 000F83                         _PORTE 000F84                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                         _TXREG 000FAD                         _UQEnd 005D  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000            __CFG_MCLRE$EXTMCLR 000000                         _str_A 00A0  
                       _str_V 00A8                __CFG_BOREN$OFF 000000                         tablat 000FF5  
          __size_of_USARTInit 0078                   ?_USART2Init 00BA                         ttemp5 0060  
                       ttemp6 0063                         ttemp7 0067                         status 000FD8  
                       wtemp8 0060                __CFG_HFOFST$ON 000000               __initialization 1960  
                __end_of_main 17C0                _steering_angle 1900                        ??_main 00BE  
               __activetblptr 000002                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _ADRESH 000FC4                        _CCPR1L 000FBE  
                      _CCPR2L 000F67                        _CCPR3L 000F5E              ___awdiv@dividend 0001  
                      _ANSELA 000F38                        _ANSELB 000F39                        _ANSELC 000F3A  
                      _ANSELD 000F3B                        _ANSELE 000F3C                        i2l1004 1096  
                      i2l1021 1334                        i2l1013 12AE                        i2l1014 12AA  
    __size_of_USART2WriteChar 000E                        i2l2011 1042                        i2l1052 1424  
                      i2l2013 1046                        i2l1045 13A6                        i2l2111 1310  
                      i2l2031 1086                        i2l2015 1056                        i2l2123 1352  
                      i2l2107 12F2                        i2l2029 1082                        i2l2213 162C  
                      i2l2205 1604                        i2l2151 1704                        i2l2143 16E6  
                      i2l2039 10B4                        i2l2207 1610                        i2l2231 13DA  
                      i2l2223 13B6                        i2l2161 1724                        i2l2137 16D6  
                      i2l2081 1256                        i2l2241 144A                        i2l2233 13E6  
                      i2l2243 1456                        i2l2235 140C                        i2l2149 16FC  
                      i2l2165 172E                        i2l2229 13D4                        i2l2087 1274  
                      i2l2169 173C                        i2l2353 14B4                        i2l2195 15EC  
                      i2l2179 15A2                        i2l2259 1496                        i2l2357 14BE  
              __CFG_WDTEN$OFF 000000                        i2l2199 15FC                        _RCREG1 000FAE  
                      _OSCCON 000FD3              steering@dty_left 0033                        _SPBRG1 000FAF  
                      _SPBRG2 000F75      steering_angle@my_angle_a 0037      steering_angle@my_angle_b 0036  
                      _TXREG2 000F73              __end_of___xxtofl 14A8                        _URBuff 0060  
              __CFG_XINST$OFF 000000        __end_of_steering_angle 1934                     ??___awdiv 0005  
                   ??___flmul 0017                     ??___fltol 002C                        _config 1838  
                      clear_0 1966                        clear_1 1972              ___awdiv@quotient 0007  
                      _tens_A 004F                        _serial 0008             __end_of_USARTInit 1838  
         __size_of_USART2Init 0084    __size_of_USART2GotoNewLine 000E                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
            __end_of_steering 1584                  ___xxtofl@arg 000B                  ___xxtofl@exp 000A  
                ___xxtofl@val 0001                    __accesstop 0060       __end_of__initialization 1978  
             __CFG_PBADEN$OFF 000000                 ___rparam_used 000001                    ___fltol@f1 0028  
             ?_steering_angle 0001                __pcstackCOMRAM 0001        __size_of_eusart_config 0038  
                  _adc_config 1986                    __pbssBANK0 0060             _USART2WriteString 1934  
             __CFG_PLLCFG$OFF 000000            ?_USART2WriteString 00BB                    __pnvCOMRAM 005D  
         USART2Init@baud_rate 00BA             ??_USART2WriteChar 00BA            __CFG_CCP2MX$PORTC1 000000  
         ??_USART2WriteString 00BD            __CFG_CCP3MX$PORTB5 000000                       ?_config 0001  
                     _CCP1CON 000FBD                       _CCP2CON 000F66                       _CCP3CON 000F5D  
                     ?_serial 0001                     ?___xxtofl 0001                       _SPBRGH2 000F76  
                     i2u96_40 10A2                       i2u97_40 1218                       i2u97_45 120E  
               _eusart_config 1894             steering@dty_right 0032     __end_of_USART2WriteString 1960  
          USARTWriteInt@F5902 00B5                       _UQFront 005E                  ??_USART2Init 00BC  
             __CFG_PWRTEN$OFF 000000                       __Hparam 0000                       __Lparam 0000  
         serial@angle_from_pi 003A                   ?_adc_config 0001                       ___awdiv 16C2  
                     ___flmul 1016                       ___fltol 1584                     ?_steering 0032  
                __psmallconst 1000               __size_of_config 005C               __CFG_STVREN$OFF 000000  
                     __pcinit 1960                       __ramtop 1000                       __ptext0 1746  
                     __ptext1 18CC                       __ptext2 1894               __size_of_serial 0026  
                     __ptext3 17C0                       __ptext4 1934                       __ptext5 163E  
                     __ptext6 19A0                       __ptext7 19AE                       __ptext8 1838  
                     __ptext9 1986            __end_of_USART2Init 16C2                    ??___xxtofl 0005  
              ?_eusart_config 0001                       _timp_us 003B          end_of_initialization 1978  
               __Lmediumconst 0000                       postinc0 000FEE                    ??_steering 0033  
                   _PORTAbits 000F80                     _PORTBbits 000F81                 ___xxtofl@sign 0009  
                   _USARTInit 17C0                     _TRISAbits 000F92                     _TRISDbits 000F95  
                  _pwm_config 18CC    __size_of_USART2WriteString 002C           __size_of_adc_config 001A  
                 ___flmul@grs 001C              ??_steering_angle 0035                __end_of_config 1894  
              __end_of_serial 002E               ??_eusart_config 00BE           start_initialization 1960  
                  ?_USARTInit 00BA          USART2WriteString@str 00BB               _USART2WriteChar 19AE  
                    ??_config 00BA                      ??_serial 0038                     ___flmul@a 0013  
                   ___flmul@b 000F                   __pbssCOMRAM 003B                 __pcstackBANK0 00BA  
                 ?_pwm_config 0001             __size_of___xxtofl 0140                     __pintcode 0008  
                ??_adc_config 00BA                      ?___awdiv 0001                      ?___flmul 000F  
                    ?___fltol 0028              __CFG_PRICLKEN$ON 000000             __size_of_steering 00DC  
         USART2WriteInt@F5914 00B0                   __smallconst 1000       __end_of_USART2WriteChar 19BC  
                 ??_USARTInit 00BC                      _CCPTMRS0 000F49            __end_of_adc_config 19A0  
                    _LATDbits 000F8C                      _PIE1bits 000F9D                      _PIE3bits 000FA3  
                    i2u101_40 12A4                      i2u111_40 1708                      i2u105_40 1300  
                    i2u106_40 131E                      i2u114_40 1590                      i2u115_40 15C0  
                    i2u115_45 15B6                      i2u119_40 1616                      i2u127_40 1460  
                   _rez_adc_A 0053                     _rez_adc_U 0047                      _PIR1bits 000F9E  
                    _PIR3bits 000FA4              __CFG_WDTPS$32768 000000           __size_of_pwm_config 0034  
                  _ADCON0bits 000FC2                    _ADCON2bits 000FC0  steering_angle@received_angle 0035  
              steering@buffer 0034                      __Hrparam 0000                      __Lrparam 0000  
           __CFG_P2BMX$PORTD2 000000              __size_of___awdiv 0084              __size_of___flmul 0352  
            __size_of___fltol 00BA                    _ANSELAbits 000F38              ?_USART2WriteChar 0001  
                    ___xxtofl 1368                      __ptext11 1900                      __ptext12 14A8  
                    __ptext13 1368                      __ptext14 1584                      __ptext15 1016  
                    __ptext16 16C2                      _distanta 0057                 __size_of_main 007A  
                    int$flags 005F                      _steering 14A8                   _OSCTUNEbits 000F9B  
                  _INTCONbits 000FF2                  ??_pwm_config 00BA         __end_of_eusart_config 18CC  
                    intlevel2 0000             USART2WriteChar@ch 00BA                    _RCSTA1bits 000FAB  
                  _RCSTA2bits 000F71            __end_of_pwm_config 1900       __size_of_steering_angle 0034  
           __CFG_T3CMX$PORTC0 000000                    _USART2Init 163E             __CFG_FOSC$INTIO67 000000  
