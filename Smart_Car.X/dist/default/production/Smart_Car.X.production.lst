

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Feb 21 16:28:25 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.05
    56                           ; Generated 20/12/2018 GMT
    57                           ; 
    58                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F46K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	smallconst
    91  001000                     __psmallconst:
    92                           	opt callstack 0
    93  001000  00                 	db	0
    94  001001                     __powers_:
    95                           	opt callstack 0
    96  001001  0000               	dw	0
    97  001003  3F80               	dw	16256
    98  001005  0000               	dw	0
    99  001007  4120               	dw	16672
   100  001009  0000               	dw	0
   101  00100B  42C8               	dw	17096
   102  00100D  0000               	dw	0
   103  00100F  447A               	dw	17530
   104  001011  4000               	dw	16384
   105  001013  461C               	dw	17948
   106  001015  5000               	dw	20480
   107  001017  47C3               	dw	18371
   108  001019  2400               	dw	9216
   109  00101B  4974               	dw	18804
   110  00101D  9680               	dw	38528
   111  00101F  4B18               	dw	19224
   112  001021  BC20               	dw	48160
   113  001023  4CBE               	dw	19646
   114  001025  6B28               	dw	27432
   115  001027  4E6E               	dw	20078
   116  001029  02F9               	dw	761
   117  00102B  5015               	dw	20501
   118  00102D  78EC               	dw	30956
   119  00102F  60AD               	dw	24749
   120  001031  F2CA               	dw	62154
   121  001033  7149               	dw	29001
   122  001035                     __end_of__powers_:
   123                           	opt callstack 0
   124  001035                     __npowers_:
   125                           	opt callstack 0
   126  001035  0000               	dw	0
   127  001037  3F80               	dw	16256
   128  001039  CCCD               	dw	52429
   129  00103B  3DCC               	dw	15820
   130  00103D  D70A               	dw	55050
   131  00103F  3C23               	dw	15395
   132  001041  126F               	dw	4719
   133  001043  3A83               	dw	14979
   134  001045  B717               	dw	46871
   135  001047  38D1               	dw	14545
   136  001049  C5AC               	dw	50604
   137  00104B  3727               	dw	14119
   138  00104D  37BD               	dw	14269
   139  00104F  3586               	dw	13702
   140  001051  BF95               	dw	49045
   141  001053  33D6               	dw	13270
   142  001055  CC77               	dw	52343
   143  001057  322B               	dw	12843
   144  001059  705F               	dw	28767
   145  00105B  3089               	dw	12425
   146  00105D  E6FF               	dw	59135
   147  00105F  2EDB               	dw	11995
   148  001061  E508               	dw	58632
   149  001063  1E3C               	dw	7740
   150  001065  4260               	dw	16992
   151  001067  0DA2               	dw	3490
   152  001069                     __end_of__npowers_:
   153                           	opt callstack 0
   154  001069                     _dpowers:
   155                           	opt callstack 0
   156  001069  0001               	dw	1
   157  00106B  0000               	dw	0
   158  00106D  000A               	dw	10
   159  00106F  0000               	dw	0
   160  001071  0064               	dw	100
   161  001073  0000               	dw	0
   162  001075  03E8               	dw	1000
   163  001077  0000               	dw	0
   164  001079  2710               	dw	10000
   165  00107B  0000               	dw	0
   166  00107D  86A0               	dw	34464
   167  00107F  0001               	dw	1
   168  001081  4240               	dw	16960
   169  001083  000F               	dw	15
   170  001085  9680               	dw	38528
   171  001087  0098               	dw	152
   172  001089  E100               	dw	57600
   173  00108B  05F5               	dw	1525
   174  00108D  CA00               	dw	51712
   175  00108F  3B9A               	dw	15258
   176  001091                     __end_of_dpowers:
   177                           	opt callstack 0
   178  001091                     STR_3:
   179  001091  55                 	db	85	;'U'
   180  001092  53                 	db	83	;'S'
   181  001093  41                 	db	65	;'A'
   182  001094  52                 	db	82	;'R'
   183  001095  54                 	db	84	;'T'
   184  001096  20                 	db	32
   185  001097  69                 	db	105	;'i'
   186  001098  6E                 	db	110	;'n'
   187  001099  69                 	db	105	;'i'
   188  00109A  74                 	db	116	;'t'
   189  00109B  69                 	db	105	;'i'
   190  00109C  61                 	db	97	;'a'
   191  00109D  6C                 	db	108	;'l'
   192  00109E  69                 	db	105	;'i'
   193  00109F  7A                 	db	122	;'z'
   194  0010A0  65                 	db	101	;'e'
   195  0010A1  64                 	db	100	;'d'
   196  0010A2  21                 	db	33
   197  0010A3  00                 	db	0
   198  0010A4                     STR_2:
   199  0010A4  25                 	db	37
   200  0010A5  2E                 	db	46
   201  0010A6  31                 	db	49	;'1'
   202  0010A7  66                 	db	102	;'f'
   203  0010A8  00                 	db	0
   204  0010A9                     STR_1:
   205  0010A9  25                 	db	37
   206  0010AA  2E                 	db	46
   207  0010AB  32                 	db	50	;'2'
   208  0010AC  66                 	db	102	;'f'
   209  0010AD  00                 	db	0
   210                           
   211                           ; #config settings
   212  0010AE  00                 	db	0	; dummy byte at the end
   213  0000                     
   214                           	psect	nvCOMRAM
   215  00005C                     __pnvCOMRAM:
   216                           	opt callstack 0
   217  00005C                     _UQEnd:
   218                           	opt callstack 0
   219  00005C                     	ds	1
   220  00005D                     _UQFront:
   221                           	opt callstack 0
   222  00005D                     	ds	1
   223  0000                     _ANSELAbits	set	3896
   224  0000                     _CCPR3L	set	3934
   225  0000                     _CCP3CON	set	3933
   226  0000                     _CCPTMRS0	set	3913
   227  0000                     _ANSELE	set	3900
   228  0000                     _ANSELD	set	3899
   229  0000                     _ANSELC	set	3898
   230  0000                     _ANSELB	set	3897
   231  0000                     _ANSELA	set	3896
   232  0000                     _TMR3	set	4018
   233  0000                     _TMR1	set	4046
   234  0000                     _TXREG2	set	3955
   235  0000                     _PIR3bits	set	4004
   236  0000                     _RCSTA2bits	set	3953
   237  0000                     _TXSTA2bits	set	3954
   238  0000                     _SPBRG2	set	3957
   239  0000                     _SPBRGH2	set	3958
   240  0000                     _BAUDCON2bits	set	3952
   241  0000                     _RCREG	set	4014
   242  0000                     _PORTBbits	set	3969
   243  0000                     _TXREG	set	4013
   244  0000                     _PIR1bits	set	3998
   245  0000                     _RCSTA1bits	set	4011
   246  0000                     _TXSTA1bits	set	4012
   247  0000                     _SPBRG1	set	4015
   248  0000                     _ADRESH	set	4036
   249  0000                     _ADCON0bits	set	4034
   250  0000                     _PIE1bits	set	3997
   251  0000                     _PIE3bits	set	4003
   252  0000                     _INTCONbits	set	4082
   253  0000                     _ADCON2bits	set	4032
   254  0000                     _ADCON2	set	4032
   255  0000                     _ADCON1	set	4033
   256  0000                     _ADCON0	set	4034
   257  0000                     _TRISAbits	set	3986
   258  0000                     _PR2	set	4027
   259  0000                     _T2CON	set	4026
   260  0000                     _CCP1CON	set	4029
   261  0000                     _CCP2CON	set	3942
   262  0000                     _OSCTUNEbits	set	3995
   263  0000                     _OSCCON	set	4051
   264  0000                     _TRISDbits	set	3989
   265  0000                     _LATE	set	3981
   266  0000                     _LATD	set	3980
   267  0000                     _LATC	set	3979
   268  0000                     _LATB	set	3978
   269  0000                     _LATA	set	3977
   270  0000                     _PORTE	set	3972
   271  0000                     _PORTD	set	3971
   272  0000                     _PORTC	set	3970
   273  0000                     _PORTB	set	3969
   274  0000                     _PORTA	set	3968
   275  0000                     _TRISE	set	3990
   276  0000                     _TRISD	set	3989
   277  0000                     _TRISC	set	3988
   278  0000                     _TRISB	set	3987
   279  0000                     _TRISA	set	3986
   280  0000                     _PORTAbits	set	3968
   281  0000                     _LATEbits	set	3981
   282  0000                     _LATDbits	set	3980
   283  0000                     _CCPR1L	set	4030
   284  0000                     _CCPR2L	set	3943
   285  0000                     _RCREG1	set	4014
   286  0000                     _RC1IF	set	31989
   287                           
   288                           	psect	cinit
   289  0033D8                     __pcinit:
   290                           	opt callstack 0
   291  0033D8                     start_initialization:
   292                           	opt callstack 0
   293  0033D8                     __initialization:
   294                           	opt callstack 0
   295                           
   296                           ; Clear objects allocated to BANK1 (64 bytes)
   297  0033D8  EE01  F000         	lfsr	0,__pbssBANK1
   298  0033DC  0E40               	movlw	64
   299  0033DE                     clear_0:
   300  0033DE  6AEE               	clrf	postinc0,c
   301  0033E0  06E8               	decf	wreg,f,c
   302  0033E2  E1FD               	bnz	clear_0
   303                           
   304                           ; Clear objects allocated to BANK0 (60 bytes)
   305  0033E4  EE00  F09D         	lfsr	0,__pbssBANK0
   306  0033E8  0E3C               	movlw	60
   307  0033EA                     clear_1:
   308  0033EA  6AEE               	clrf	postinc0,c
   309  0033EC  06E8               	decf	wreg,f,c
   310  0033EE  E1FD               	bnz	clear_1
   311                           
   312                           ; Clear objects allocated to COMRAM (4 bytes)
   313  0033F0  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   314  0033F2  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   315  0033F4  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   316  0033F6  6A58               	clrf	__pbssCOMRAM& (0+255),c
   317  0033F8                     end_of_initialization:
   318                           	opt callstack 0
   319  0033F8                     __end_of__initialization:
   320                           	opt callstack 0
   321  0033F8  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322  0033FA  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323  0033FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   324  0033FE  6EF8               	movwf	tblptru,c
   325  003400  0100               	movlb	0
   326  003402  EF37  F018         	goto	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMRAM
   329  000058                     __pbssCOMRAM:
   330                           	opt callstack 0
   331  000058                     _c:
   332                           	opt callstack 0
   333  000058                     	ds	2
   334  00005A                     _cor:
   335                           	opt callstack 0
   336  00005A                     	ds	2
   337                           
   338                           	psect	bssBANK0
   339  00009D                     __pbssBANK0:
   340                           	opt callstack 0
   341  00009D                     _str_A:
   342                           	opt callstack 0
   343  00009D                     	ds	8
   344  0000A5                     _str_V:
   345                           	opt callstack 0
   346  0000A5                     	ds	8
   347  0000AD                     	ds	5
   348  0000B2                     	ds	5
   349  0000B7                     _timp_us:
   350                           	opt callstack 0
   351  0000B7                     	ds	4
   352  0000BB                     _tens:
   353                           	opt callstack 0
   354  0000BB                     	ds	4
   355  0000BF                     _Ubat:
   356                           	opt callstack 0
   357  0000BF                     	ds	4
   358  0000C3                     _rez_adc_U:
   359                           	opt callstack 0
   360  0000C3                     	ds	4
   361  0000C7                     _Ibat:
   362                           	opt callstack 0
   363  0000C7                     	ds	4
   364  0000CB                     _tens_A:
   365                           	opt callstack 0
   366  0000CB                     	ds	4
   367  0000CF                     _rez_adc_A:
   368                           	opt callstack 0
   369  0000CF                     	ds	4
   370  0000D3                     _dty_car:
   371                           	opt callstack 0
   372  0000D3                     	ds	2
   373  0000D5                     _distanta:
   374                           	opt callstack 0
   375  0000D5                     	ds	2
   376  0000D7                     _TMR:
   377                           	opt callstack 0
   378  0000D7                     	ds	2
   379                           
   380                           	psect	bssBANK1
   381  000100                     __pbssBANK1:
   382                           	opt callstack 0
   383  000100                     _URBuff:
   384                           	opt callstack 0
   385  000100                     	ds	64
   386                           
   387                           	psect	cstackBANK1
   388  000140                     __pcstackBANK1:
   389                           	opt callstack 0
   390  000140                     USART2WriteChar@ch:
   391                           	opt callstack 0
   392  000140                     USARTInit@baud_rate:
   393                           	opt callstack 0
   394  000140                     USART2Init@baud_rate:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x0
   398  000140                     	ds	1
   399  000141                     USART2WriteString@str:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x1
   403  000141                     	ds	1
   404  000142                     ??_USARTInit:
   405  000142                     ??_USART2Init:
   406                           
   407                           ; 1 bytes @ 0x2
   408  000142                     	ds	1
   409  000143                     
   410                           ; 1 bytes @ 0x3
   411  000143                     	ds	1
   412  000144                     ??_main:
   413                           
   414                           ; 1 bytes @ 0x4
   415  000144                     	ds	2
   416                           
   417                           	psect	cstackBANK0
   418  000060                     __pcstackBANK0:
   419                           	opt callstack 0
   420  000060                     _sprintf$2198:
   421                           	opt callstack 0
   422                           
   423                           ; 4 bytes @ 0x0
   424  000060                     	ds	4
   425  000064                     sprintf@ap:
   426                           	opt callstack 0
   427                           
   428                           ; 2 bytes @ 0x4
   429  000064                     	ds	2
   430  000066                     sprintf@flag:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0x6
   434  000066                     	ds	2
   435  000068                     sprintf@val:
   436                           	opt callstack 0
   437                           
   438                           ; 4 bytes @ 0x8
   439  000068                     	ds	4
   440  00006C                     sprintf@eexp:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0xC
   444  00006C                     	ds	2
   445  00006E                     sprintf@tmpval:
   446                           	opt callstack 0
   447                           
   448                           ; 4 bytes @ 0xE
   449  00006E                     	ds	4
   450  000072                     sprintf@prec:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x12
   454  000072                     	ds	2
   455  000074                     sprintf@fval:
   456                           	opt callstack 0
   457                           
   458                           ; 4 bytes @ 0x14
   459  000074                     	ds	4
   460  000078                     sprintf@c:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x18
   464  000078                     	ds	1
   465  000079                     ??_serial:
   466                           
   467                           ; 1 bytes @ 0x19
   468  000079                     	ds	10
   469  000083                     serial@str_V:
   470                           	opt callstack 0
   471                           
   472                           ; 8 bytes @ 0x23
   473  000083                     	ds	8
   474  00008B                     serial@str_A:
   475                           	opt callstack 0
   476                           
   477                           ; 8 bytes @ 0x2B
   478  00008B                     	ds	8
   479  000093                     serial@i:
   480                           	opt callstack 0
   481                           
   482                           ; 4 bytes @ 0x33
   483  000093                     	ds	4
   484  000097                     serial@j:
   485                           	opt callstack 0
   486                           
   487                           ; 4 bytes @ 0x37
   488  000097                     	ds	4
   489  00009B                     serial@flag:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x3B
   493  00009B                     	ds	2
   494                           
   495                           	psect	cstackCOMRAM
   496  000001                     __pcstackCOMRAM:
   497                           	opt callstack 0
   498  000001                     ??_isdigit:
   499  000001                     ?___wmul:
   500                           	opt callstack 0
   501  000001                     ?___awmod:
   502                           	opt callstack 0
   503  000001                     ?___lwmod:
   504                           	opt callstack 0
   505  000001                     ?__tdiv_to_l_:
   506                           	opt callstack 0
   507  000001                     ?__div_to_l_:
   508                           	opt callstack 0
   509  000001                     ?___fldiv:
   510                           	opt callstack 0
   511  000001                     ?___lldiv:
   512                           	opt callstack 0
   513  000001                     ?___flneg:
   514                           	opt callstack 0
   515  000001                     ?___llmod:
   516                           	opt callstack 0
   517  000001                     ?___xxtofl:
   518                           	opt callstack 0
   519  000001                     USARTWriteChar@ch:
   520                           	opt callstack 0
   521  000001                     ___wmul@multiplier:
   522                           	opt callstack 0
   523  000001                     ___awmod@dividend:
   524                           	opt callstack 0
   525  000001                     ___lwmod@dividend:
   526                           	opt callstack 0
   527  000001                     ___lldiv@dividend:
   528                           	opt callstack 0
   529  000001                     __div_to_l_@f1:
   530                           	opt callstack 0
   531  000001                     ___fleq@ff1:
   532                           	opt callstack 0
   533  000001                     ___flge@ff1:
   534                           	opt callstack 0
   535  000001                     ___flneg@f1:
   536                           	opt callstack 0
   537  000001                     __tdiv_to_l_@f1:
   538                           	opt callstack 0
   539  000001                     ___llmod@dividend:
   540                           	opt callstack 0
   541  000001                     ___fldiv@b:
   542                           	opt callstack 0
   543  000001                     ___xxtofl@val:
   544                           	opt callstack 0
   545                           
   546                           ; 4 bytes @ 0x0
   547  000001                     	ds	1
   548  000002                     _isdigit$1981:
   549                           	opt callstack 0
   550  000002                     USARTWriteString@str:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x1
   554  000002                     	ds	1
   555  000003                     isdigit@c:
   556                           	opt callstack 0
   557  000003                     ___wmul@multiplicand:
   558                           	opt callstack 0
   559  000003                     ___awmod@divisor:
   560                           	opt callstack 0
   561  000003                     ___lwmod@divisor:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x2
   565  000003                     	ds	1
   566  000004                     
   567                           ; 1 bytes @ 0x3
   568  000004                     	ds	1
   569  000005                     ??___xxtofl:
   570  000005                     ___awmod@counter:
   571                           	opt callstack 0
   572  000005                     ___lwmod@counter:
   573                           	opt callstack 0
   574  000005                     ___wmul@product:
   575                           	opt callstack 0
   576  000005                     ___lldiv@divisor:
   577                           	opt callstack 0
   578  000005                     __div_to_l_@f2:
   579                           	opt callstack 0
   580  000005                     ___fleq@ff2:
   581                           	opt callstack 0
   582  000005                     ___flge@ff2:
   583                           	opt callstack 0
   584  000005                     __tdiv_to_l_@f2:
   585                           	opt callstack 0
   586  000005                     ___llmod@divisor:
   587                           	opt callstack 0
   588  000005                     ___fldiv@a:
   589                           	opt callstack 0
   590                           
   591                           ; 4 bytes @ 0x4
   592  000005                     	ds	1
   593  000006                     ?___lwdiv:
   594                           	opt callstack 0
   595  000006                     ___awmod@sign:
   596                           	opt callstack 0
   597  000006                     ___lwdiv@dividend:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0x5
   601  000006                     	ds	1
   602  000007                     ?___awdiv:
   603                           	opt callstack 0
   604  000007                     ___awdiv@dividend:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x6
   608  000007                     	ds	1
   609  000008                     ___lwdiv@divisor:
   610                           	opt callstack 0
   611                           
   612                           ; 2 bytes @ 0x7
   613  000008                     	ds	1
   614  000009                     ??__tdiv_to_l_:
   615  000009                     ??___fldiv:
   616  000009                     ??___fleq:
   617  000009                     ??___flge:
   618  000009                     ___llmod@counter:
   619                           	opt callstack 0
   620  000009                     ___xxtofl@sign:
   621                           	opt callstack 0
   622  000009                     ___awdiv@divisor:
   623                           	opt callstack 0
   624  000009                     ___lldiv@quotient:
   625                           	opt callstack 0
   626  000009                     __div_to_l_@quot:
   627                           	opt callstack 0
   628                           
   629                           ; 4 bytes @ 0x8
   630  000009                     	ds	1
   631  00000A                     ___xxtofl@exp:
   632                           	opt callstack 0
   633  00000A                     ___lwdiv@quotient:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x9
   637  00000A                     	ds	1
   638  00000B                     ___awdiv@counter:
   639                           	opt callstack 0
   640  00000B                     ___xxtofl@arg:
   641                           	opt callstack 0
   642                           
   643                           ; 4 bytes @ 0xA
   644  00000B                     	ds	1
   645  00000C                     ___awdiv@sign:
   646                           	opt callstack 0
   647  00000C                     ___lwdiv@counter:
   648                           	opt callstack 0
   649  00000C                     __tdiv_to_l_@quot:
   650                           	opt callstack 0
   651                           
   652                           ; 4 bytes @ 0xB
   653  00000C                     	ds	1
   654  00000D                     ___lldiv@counter:
   655                           	opt callstack 0
   656  00000D                     __div_to_l_@cntr:
   657                           	opt callstack 0
   658  00000D                     ___awdiv@quotient:
   659                           	opt callstack 0
   660  00000D                     ___fldiv@rem:
   661                           	opt callstack 0
   662                           
   663                           ; 4 bytes @ 0xC
   664  00000D                     	ds	1
   665  00000E                     __div_to_l_@exp1:
   666                           	opt callstack 0
   667                           
   668                           ; 1 bytes @ 0xD
   669  00000E                     	ds	1
   670  00000F                     ?___flmul:
   671                           	opt callstack 0
   672  00000F                     ___flmul@b:
   673                           	opt callstack 0
   674                           
   675                           ; 4 bytes @ 0xE
   676  00000F                     	ds	1
   677  000010                     __tdiv_to_l_@cntr:
   678                           	opt callstack 0
   679                           
   680                           ; 1 bytes @ 0xF
   681  000010                     	ds	1
   682  000011                     __tdiv_to_l_@exp1:
   683                           	opt callstack 0
   684  000011                     ___fldiv@sign:
   685                           	opt callstack 0
   686                           
   687                           ; 1 bytes @ 0x10
   688  000011                     	ds	1
   689  000012                     ___fldiv@new_exp:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x11
   693  000012                     	ds	1
   694  000013                     ___flmul@a:
   695                           	opt callstack 0
   696                           
   697                           ; 4 bytes @ 0x12
   698  000013                     	ds	1
   699  000014                     ___fldiv@grs:
   700                           	opt callstack 0
   701                           
   702                           ; 4 bytes @ 0x13
   703  000014                     	ds	3
   704  000017                     ??___flmul:
   705                           
   706                           ; 1 bytes @ 0x16
   707  000017                     	ds	1
   708  000018                     ___fldiv@bexp:
   709                           	opt callstack 0
   710                           
   711                           ; 1 bytes @ 0x17
   712  000018                     	ds	1
   713  000019                     ___fldiv@aexp:
   714                           	opt callstack 0
   715                           
   716                           ; 1 bytes @ 0x18
   717  000019                     	ds	2
   718  00001B                     ___flmul@sign:
   719                           	opt callstack 0
   720                           
   721                           ; 1 bytes @ 0x1A
   722  00001B                     	ds	1
   723  00001C                     ___flmul@grs:
   724                           	opt callstack 0
   725                           
   726                           ; 4 bytes @ 0x1B
   727  00001C                     	ds	4
   728  000020                     ___flmul@aexp:
   729                           	opt callstack 0
   730                           
   731                           ; 1 bytes @ 0x1F
   732  000020                     	ds	1
   733  000021                     ___flmul@bexp:
   734                           	opt callstack 0
   735                           
   736                           ; 1 bytes @ 0x20
   737  000021                     	ds	1
   738  000022                     ___flmul@prod:
   739                           	opt callstack 0
   740                           
   741                           ; 4 bytes @ 0x21
   742  000022                     	ds	4
   743  000026                     ___flmul@temp:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x25
   747  000026                     	ds	2
   748  000028                     ?_read_Ibat:
   749                           	opt callstack 0
   750  000028                     ?_read_Ubat:
   751                           	opt callstack 0
   752  000028                     ?_fround:
   753                           	opt callstack 0
   754  000028                     ?_scale:
   755                           	opt callstack 0
   756  000028                     ?___fltol:
   757                           	opt callstack 0
   758  000028                     ___fltol@f1:
   759                           	opt callstack 0
   760                           
   761                           ; 4 bytes @ 0x27
   762  000028                     	ds	4
   763  00002C                     ??_read_Ibat:
   764  00002C                     ??_read_Ubat:
   765  00002C                     ??___fltol:
   766  00002C                     _fround$2196:
   767                           	opt callstack 0
   768  00002C                     _scale$2197:
   769                           	opt callstack 0
   770                           
   771                           ; 4 bytes @ 0x2B
   772  00002C                     	ds	4
   773  000030                     scale@scl:
   774                           	opt callstack 0
   775  000030                     ___fltol@sign1:
   776                           	opt callstack 0
   777  000030                     _fround$2195:
   778                           	opt callstack 0
   779                           
   780                           ; 4 bytes @ 0x2F
   781  000030                     	ds	1
   782  000031                     ___fltol@exp1:
   783                           	opt callstack 0
   784                           
   785                           ; 1 bytes @ 0x30
   786  000031                     	ds	3
   787  000034                     fround@prec:
   788                           	opt callstack 0
   789                           
   790                           ; 1 bytes @ 0x33
   791  000034                     	ds	1
   792  000035                     ?___fladd:
   793                           	opt callstack 0
   794  000035                     ___fladd@b:
   795                           	opt callstack 0
   796                           
   797                           ; 4 bytes @ 0x34
   798  000035                     	ds	4
   799  000039                     ___fladd@a:
   800                           	opt callstack 0
   801                           
   802                           ; 4 bytes @ 0x38
   803  000039                     	ds	4
   804  00003D                     ??___fladd:
   805                           
   806                           ; 1 bytes @ 0x3C
   807  00003D                     	ds	4
   808  000041                     ___fladd@signs:
   809                           	opt callstack 0
   810                           
   811                           ; 1 bytes @ 0x40
   812  000041                     	ds	1
   813  000042                     ___fladd@aexp:
   814                           	opt callstack 0
   815                           
   816                           ; 1 bytes @ 0x41
   817  000042                     	ds	1
   818  000043                     ___fladd@bexp:
   819                           	opt callstack 0
   820                           
   821                           ; 1 bytes @ 0x42
   822  000043                     	ds	1
   823  000044                     ___fladd@grs:
   824                           	opt callstack 0
   825                           
   826                           ; 1 bytes @ 0x43
   827  000044                     	ds	1
   828  000045                     ?___flsub:
   829                           	opt callstack 0
   830  000045                     ___flsub@b:
   831                           	opt callstack 0
   832                           
   833                           ; 4 bytes @ 0x44
   834  000045                     	ds	4
   835  000049                     ___flsub@a:
   836                           	opt callstack 0
   837                           
   838                           ; 4 bytes @ 0x48
   839  000049                     	ds	4
   840  00004D                     ?_sprintf:
   841                           	opt callstack 0
   842  00004D                     sprintf@sp:
   843                           	opt callstack 0
   844                           
   845                           ; 2 bytes @ 0x4C
   846  00004D                     	ds	2
   847  00004F                     sprintf@f:
   848                           	opt callstack 0
   849                           
   850                           ; 2 bytes @ 0x4E
   851  00004F                     	ds	6
   852  000055                     ??_sprintf:
   853                           
   854                           ; 1 bytes @ 0x54
   855  000055                     	ds	3
   856                           
   857 ;;
   858 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   859 ;;
   860 ;; *************** function _main *****************
   861 ;; Defined at:
   862 ;;		line 164 in file "main.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:        2 bytes
   881 ;; Hardware stack levels required when called:    7
   882 ;; This function calls:
   883 ;;		_adc_config
   884 ;;		_config
   885 ;;		_eusart_config
   886 ;;		_pwm_config
   887 ;; This function is called by:
   888 ;;		Startup code after reset
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text0
   893  00306E                     __ptext0:
   894                           	opt callstack 0
   895  00306E                     _main:
   896                           	opt callstack 24
   897                           
   898                           ;main.c: 166: config();
   899                           
   900                           ;incstack = 0
   901  00306E  EC1B  F019         	call	_config	;wreg free
   902                           
   903                           ;main.c: 167: pwm_config();
   904  003072  ECD2  F019         	call	_pwm_config	;wreg free
   905                           
   906                           ;main.c: 168: adc_config();
   907  003076  EC64  F01A         	call	_adc_config	;wreg free
   908                           
   909                           ;main.c: 169: eusart_config();
   910  00307A  ECB6  F019         	call	_eusart_config	;wreg free
   911                           
   912                           ;main.c: 170: LATDbits.LD0=0;
   913  00307E  908C               	bcf	3980,0,c	;volatile
   914                           
   915                           ;main.c: 171: LATDbits.LD1=1;
   916  003080  828C               	bsf	3980,1,c	;volatile
   917                           
   918                           ;main.c: 172: LATDbits.LD2=LATDbits.LD1;
   919  003082  A28C               	btfss	3980,1,c	;volatile
   920  003084  D002               	bra	u4645
   921  003086  848C               	bsf	3980,2,c	;volatile
   922  003088  D001               	bra	u4647
   923  00308A                     u4645:
   924  00308A  948C               	bcf	3980,2,c	;volatile
   925  00308C                     u4647:
   926                           
   927                           ;main.c: 173: CCPR2L=CCPR1L=0;
   928  00308C  0E00               	movlw	0
   929  00308E  6EBE               	movwf	4030,c	;volatile
   930  003090  CFBE FF67          	movff	4030,3943	;volatile
   931                           
   932                           ;main.c: 174: TMR1=TMR3=0;
   933  003094  0E00               	movlw	0
   934  003096  6EB3               	movwf	4019,c	;volatile
   935  003098  0E00               	movlw	0
   936  00309A  6EB2               	movwf	4018,c	;volatile
   937  00309C  CFB2 FFCE          	movff	4018,4046	;volatile
   938  0030A0  CFB3 FFCF          	movff	4019,4047	;volatile
   939                           
   940                           ;main.c: 175: _delay((unsigned long)((100)*(64000000/4000.0)));
   941  0030A4  0E09               	movlw	9
   942  0030A6  0101               	movlb	1	; () banked
   943  0030A8  6F45               	movwf	(??_main+1)& (0+255),b
   944  0030AA  0E1E               	movlw	30
   945  0030AC  6F44               	movwf	??_main& (0+255),b
   946  0030AE  0EE4               	movlw	228
   947  0030B0                     u4757:
   948  0030B0  2EE8               	decfsz	wreg,f,c
   949  0030B2  D7FE               	bra	u4757
   950  0030B4  2F44               	decfsz	??_main& (0+255),f,b
   951  0030B6  D7FC               	bra	u4757
   952  0030B8  2F45               	decfsz	(??_main+1)& (0+255),f,b
   953  0030BA  D7FA               	bra	u4757
   954  0030BC  F000               	nop	
   955  0030BE                     l5404:
   956                           
   957                           ;main.c: 178: {;main.c: 180: _delay((unsigned long)((1000)*(64000000/4000.0)));
   958  0030BE  0E52               	movlw	82
   959  0030C0  0101               	movlb	1	; () banked
   960  0030C2  6F45               	movwf	(??_main+1)& (0+255),b
   961  0030C4  0E2B               	movlw	43
   962  0030C6  6F44               	movwf	??_main& (0+255),b
   963  0030C8  0E00               	movlw	0
   964  0030CA                     u4767:
   965  0030CA  2EE8               	decfsz	wreg,f,c
   966  0030CC  D7FE               	bra	u4767
   967  0030CE  2F44               	decfsz	??_main& (0+255),f,b
   968  0030D0  D7FC               	bra	u4767
   969  0030D2  2F45               	decfsz	(??_main+1)& (0+255),f,b
   970  0030D4  D7FA               	bra	u4767
   971  0030D6  F000               	nop	
   972                           
   973                           ;main.c: 181: if(PORTAbits.RA7==1)
   974  0030D8  AE80               	btfss	3968,7,c	;volatile
   975  0030DA  D7F1               	goto	l5404
   976                           
   977                           ;main.c: 184: CCPR2L=CCPR1L=0;
   978                           
   979                           ;main.c: 182: {;main.c: 183: RC1IF==1;
   980  0030DC  0E00               	movlw	0
   981  0030DE  6EBE               	movwf	4030,c	;volatile
   982  0030E0  CFBE FF67          	movff	4030,3943	;volatile
   983                           
   984                           ;main.c: 185: LATDbits.LD0=1;
   985  0030E4  808C               	bsf	3980,0,c	;volatile
   986  0030E6  D7EB               	goto	l5404
   987  0030E8                     __end_of_main:
   988                           	opt callstack 0
   989                           
   990 ;; *************** function _pwm_config *****************
   991 ;; Defined at:
   992 ;;		line 41 in file "config.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    4
  1013 ;; This function calls:
  1014 ;;		Nothing
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text1
  1021  0033A4                     __ptext1:
  1022                           	opt callstack 0
  1023  0033A4                     _pwm_config:
  1024                           	opt callstack 26
  1025                           
  1026                           ;config.c: 43: CCPTMRS0=0b00000000;
  1027                           
  1028                           ;incstack = 0
  1029  0033A4  0E00               	movlw	0
  1030  0033A6  010F               	movlb	15	; () banked
  1031  0033A8  6F49               	movwf	73,b	;volatile
  1032                           
  1033                           ;config.c: 44: CCP2CON=0b00001100;
  1034  0033AA  0E0C               	movlw	12
  1035  0033AC  6E66               	movwf	3942,c	;volatile
  1036                           
  1037                           ;config.c: 45: CCP1CON=0b00001100;
  1038  0033AE  0E0C               	movlw	12
  1039  0033B0  6EBD               	movwf	4029,c	;volatile
  1040                           
  1041                           ;config.c: 46: T2CON=0b01111101;
  1042  0033B2  0E7D               	movlw	125
  1043  0033B4  6EBA               	movwf	4026,c	;volatile
  1044                           
  1045                           ;config.c: 47: PR2=160;
  1046  0033B6  0EA0               	movlw	160
  1047  0033B8  6EBB               	movwf	4027,c	;volatile
  1048                           
  1049                           ;config.c: 49: CCPR2L=128;
  1050  0033BA  0E80               	movlw	128
  1051  0033BC  6E67               	movwf	3943,c	;volatile
  1052                           
  1053                           ;config.c: 50: CCPR1L=64;
  1054  0033BE  0E40               	movlw	64
  1055  0033C0  6EBE               	movwf	4030,c	;volatile
  1056                           
  1057                           ;config.c: 51: CCP3CON=0b00001100;
  1058  0033C2  0E0C               	movlw	12
  1059  0033C4  6F5D               	movwf	93,b	;volatile
  1060                           
  1061                           ;config.c: 52: CCPR3L=128;
  1062  0033C6  0E80               	movlw	128
  1063  0033C8  6F5E               	movwf	94,b	;volatile
  1064                           
  1065                           ;config.c: 53: CCPR1L=0;
  1066  0033CA  0E00               	movlw	0
  1067  0033CC  6EBE               	movwf	4030,c	;volatile
  1068                           
  1069                           ;config.c: 54: CCPR2L=0;
  1070  0033CE  0E00               	movlw	0
  1071  0033D0  6E67               	movwf	3943,c	;volatile
  1072                           
  1073                           ;config.c: 55: CCPR3L=0;
  1074  0033D2  0E00               	movlw	0
  1075  0033D4  6F5E               	movwf	94,b	;volatile
  1076                           
  1077                           ; BSR set to: 15
  1078  0033D6  0012               	return		;funcret
  1079  0033D8                     __end_of_pwm_config:
  1080                           	opt callstack 0
  1081                           
  1082 ;; *************** function _eusart_config *****************
  1083 ;; Defined at:
  1084 ;;		line 73 in file "config.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    6
  1105 ;; This function calls:
  1106 ;;		_USART2GotoNewLine
  1107 ;;		_USART2Init
  1108 ;;		_USART2WriteString
  1109 ;;		_USARTInit
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text2
  1116  00336C                     __ptext2:
  1117                           	opt callstack 0
  1118  00336C                     _eusart_config:
  1119                           	opt callstack 24
  1120                           
  1121                           ;config.c: 75: USARTInit(19200);
  1122                           
  1123                           ; BSR set to: 15
  1124                           ;incstack = 0
  1125  00336C  0E4B               	movlw	75
  1126  00336E  0101               	movlb	1	; () banked
  1127  003370  6F41               	movwf	(USARTInit@baud_rate+1)& (0+255),b
  1128  003372  0E00               	movlw	0
  1129  003374  6F40               	movwf	USARTInit@baud_rate& (0+255),b
  1130  003376  EC74  F018         	call	_USARTInit	;wreg free
  1131                           
  1132                           ;config.c: 76: USART2Init(2400);
  1133  00337A  0E09               	movlw	9
  1134  00337C  0101               	movlb	1	; () banked
  1135  00337E  6F41               	movwf	(USART2Init@baud_rate+1)& (0+255),b
  1136  003380  0E60               	movlw	96
  1137  003382  6F40               	movwf	USART2Init@baud_rate& (0+255),b
  1138  003384  EC72  F017         	call	_USART2Init	;wreg free
  1139                           
  1140                           ;config.c: 77: USART2WriteString("USART initialized!");
  1141  003388  0E91               	movlw	low STR_3
  1142  00338A  0101               	movlb	1	; () banked
  1143  00338C  6F41               	movwf	USART2WriteString@str& (0+255),b
  1144  00338E  0E10               	movlw	high STR_3
  1145  003390  6F42               	movwf	(USART2WriteString@str+1)& (0+255),b
  1146  003392  EC1A  F01A         	call	_USART2WriteString	;wreg free
  1147                           
  1148                           ;config.c: 78: USART2GotoNewLine();
  1149  003396  EC71  F01A         	call	_USART2GotoNewLine	;wreg free
  1150                           
  1151                           ;config.c: 79: INTCONbits.GIE=1;
  1152  00339A  8EF2               	bsf	4082,7,c	;volatile
  1153                           
  1154                           ;config.c: 80: INTCONbits.PEIE=1;
  1155  00339C  8CF2               	bsf	4082,6,c	;volatile
  1156                           
  1157                           ;config.c: 81: PIE3bits.RC2IE=1;
  1158  00339E  8AA3               	bsf	4003,5,c	;volatile
  1159                           
  1160                           ;config.c: 82: PIE1bits.RCIE=1;
  1161  0033A0  8A9D               	bsf	3997,5,c	;volatile
  1162  0033A2  0012               	return		;funcret
  1163  0033A4                     __end_of_eusart_config:
  1164                           	opt callstack 0
  1165                           
  1166 ;; *************** function _USARTInit *****************
  1167 ;; Defined at:
  1168 ;;		line 31 in file "usart_pic16.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  baud_rate       2    0[BANK1 ] unsigned int 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1182 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;Total ram usage:        4 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    4
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_eusart_config
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text3
  1197  0030E8                     __ptext3:
  1198                           	opt callstack 0
  1199  0030E8                     _USARTInit:
  1200                           	opt callstack 25
  1201                           
  1202                           ;usart_pic16.c: 34: UQFront=UQEnd=-1;
  1203                           
  1204                           ;incstack = 0
  1205  0030E8  685C               	setf	_UQEnd,c	;volatile
  1206  0030EA  685D               	setf	_UQFront,c	;volatile
  1207                           
  1208                           ;usart_pic16.c: 37: switch(baud_rate)
  1209  0030EC  D009               	goto	l5282
  1210  0030EE                     l5272:
  1211                           
  1212                           ; BSR set to: 1
  1213                           ;usart_pic16.c: 40: SPBRG1=207;
  1214  0030EE  0ECF               	movlw	207
  1215  0030F0  D005               	goto	L3
  1216  0030F2                     l5274:
  1217                           
  1218                           ; BSR set to: 1
  1219                           ;usart_pic16.c: 43: SPBRG1=51;
  1220  0030F2  0E33               	movlw	51
  1221  0030F4  D003               	goto	L3
  1222  0030F6                     l5276:
  1223                           
  1224                           ; BSR set to: 1
  1225                           ;usart_pic16.c: 46: SPBRG1=42;
  1226  0030F6  0E2A               	movlw	42
  1227  0030F8  D001               	goto	L3
  1228  0030FA                     l5278:
  1229                           
  1230                           ; BSR set to: 1
  1231                           ;usart_pic16.c: 49: SPBRG1=36;
  1232  0030FA  0E24               	movlw	36
  1233  0030FC                     L3:
  1234  0030FC  6EAF               	movwf	4015,c	;volatile
  1235                           
  1236                           ;usart_pic16.c: 50: break;
  1237  0030FE  D026               	goto	l309
  1238  003100                     l5282:
  1239  003100  C140  F142         	movff	USARTInit@baud_rate,??_USARTInit
  1240  003104  C141  F143         	movff	USARTInit@baud_rate+1,??_USARTInit+1
  1241                           
  1242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 4, Range of values is 37 to 131
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte           13     7 (average)
  1248                           ;	Chosen strategy is simple_byte
  1249  003108  0101               	movlb	1	; () banked
  1250  00310A  5143               	movf	(??_USARTInit+1)& (0+255),w,b
  1251  00310C  0A25               	xorlw	37	; case 37
  1252  00310E  B4D8               	btfsc	status,2,c
  1253  003110  D00A               	goto	l5734
  1254  003112  0A6E               	xorlw	110	; case 75
  1255  003114  B4D8               	btfsc	status,2,c
  1256  003116  D00C               	goto	l5736
  1257  003118  0A3B               	xorlw	59	; case 112
  1258  00311A  B4D8               	btfsc	status,2,c
  1259  00311C  D00E               	goto	l5738
  1260  00311E  0AF3               	xorlw	243	; case 131
  1261  003120  B4D8               	btfsc	status,2,c
  1262  003122  D010               	goto	l5740
  1263  003124  D013               	goto	l309
  1264  003126                     l5734:
  1265                           
  1266                           ; BSR set to: 1
  1267                           ; Switch size 1, requested type "simple"
  1268                           ; Number of cases is 1, Range of values is 128 to 128
  1269                           ; switch strategies available:
  1270                           ; Name         Instructions Cycles
  1271                           ; simple_byte            4     3 (average)
  1272                           ;	Chosen strategy is simple_byte
  1273  003126  5142               	movf	??_USARTInit& (0+255),w,b
  1274  003128  0A80               	xorlw	128	; case 128
  1275  00312A  B4D8               	btfsc	status,2,c
  1276  00312C  D7E0               	goto	l5272
  1277  00312E  D00E               	goto	l309
  1278  003130                     l5736:
  1279                           
  1280                           ; BSR set to: 1
  1281                           ; Switch size 1, requested type "simple"
  1282                           ; Number of cases is 1, Range of values is 0 to 0
  1283                           ; switch strategies available:
  1284                           ; Name         Instructions Cycles
  1285                           ; simple_byte            4     3 (average)
  1286                           ;	Chosen strategy is simple_byte
  1287  003130  5142               	movf	??_USARTInit& (0+255),w,b
  1288  003132  0A00               	xorlw	0	; case 0
  1289  003134  B4D8               	btfsc	status,2,c
  1290  003136  D7DD               	goto	l5274
  1291  003138  D009               	goto	l309
  1292  00313A                     l5738:
  1293                           
  1294                           ; BSR set to: 1
  1295                           ; Switch size 1, requested type "simple"
  1296                           ; Number of cases is 1, Range of values is 128 to 128
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte            4     3 (average)
  1300                           ;	Chosen strategy is simple_byte
  1301  00313A  5142               	movf	??_USARTInit& (0+255),w,b
  1302  00313C  0A80               	xorlw	128	; case 128
  1303  00313E  B4D8               	btfsc	status,2,c
  1304  003140  D7DA               	goto	l5276
  1305  003142  D004               	goto	l309
  1306  003144                     l5740:
  1307                           
  1308                           ; BSR set to: 1
  1309                           ; Switch size 1, requested type "simple"
  1310                           ; Number of cases is 1, Range of values is 64 to 64
  1311                           ; switch strategies available:
  1312                           ; Name         Instructions Cycles
  1313                           ; simple_byte            4     3 (average)
  1314                           ;	Chosen strategy is simple_byte
  1315  003144  5142               	movf	??_USARTInit& (0+255),w,b
  1316  003146  0A40               	xorlw	64	; case 64
  1317  003148  B4D8               	btfsc	status,2,c
  1318  00314A  D7D7               	goto	l5278
  1319  00314C                     l309:
  1320                           
  1321                           ; BSR set to: 1
  1322                           ;usart_pic16.c: 53: TXSTA1bits.TX9=0;
  1323  00314C  9CAC               	bcf	4012,6,c	;volatile
  1324                           
  1325                           ;usart_pic16.c: 54: TXSTA1bits.TXEN=1;
  1326  00314E  8AAC               	bsf	4012,5,c	;volatile
  1327                           
  1328                           ;usart_pic16.c: 55: TXSTA1bits.SYNC=0;
  1329  003150  98AC               	bcf	4012,4,c	;volatile
  1330                           
  1331                           ;usart_pic16.c: 56: TXSTA1bits.BRGH=0;
  1332  003152  94AC               	bcf	4012,2,c	;volatile
  1333                           
  1334                           ;usart_pic16.c: 65: RCSTA1bits.SPEN=1;
  1335  003154  8EAB               	bsf	4011,7,c	;volatile
  1336                           
  1337                           ;usart_pic16.c: 66: RCSTA1bits.RX9=0;
  1338  003156  9CAB               	bcf	4011,6,c	;volatile
  1339                           
  1340                           ;usart_pic16.c: 67: RCSTA1bits.CREN=1;
  1341  003158  88AB               	bsf	4011,4,c	;volatile
  1342                           
  1343                           ;usart_pic16.c: 68: RCSTA1bits.ADDEN=0;
  1344  00315A  96AB               	bcf	4011,3,c	;volatile
  1345                           
  1346                           ;usart_pic16.c: 75: (INTCONbits.GIE = 1);
  1347  00315C  8EF2               	bsf	4082,7,c	;volatile
  1348                           
  1349                           ; BSR set to: 1
  1350  00315E  0012               	return		;funcret
  1351  003160                     __end_of_USARTInit:
  1352                           	opt callstack 0
  1353                           
  1354 ;; *************** function _USART2WriteString *****************
  1355 ;; Defined at:
  1356 ;;		line 284 in file "usart_pic16.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  str             2    1[BANK1 ] PTR const unsigned char 
  1359 ;;		 -> STR_3(19), 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1371 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;Total ram usage:        2 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    5
  1378 ;; This function calls:
  1379 ;;		_USART2WriteChar
  1380 ;; This function is called by:
  1381 ;;		_eusart_config
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text4
  1386  003434                     __ptext4:
  1387                           	opt callstack 0
  1388  003434                     _USART2WriteString:
  1389                           	opt callstack 24
  1390                           
  1391                           ;usart_pic16.c: 286: while(*str!='\0')
  1392                           
  1393                           ; BSR set to: 1
  1394                           ;incstack = 0
  1395  003434  D00B               	goto	l5352
  1396  003436                     l5348:
  1397                           
  1398                           ;usart_pic16.c: 287: {;usart_pic16.c: 288: USART2WriteChar(*str);
  1399  003436  C141  FFF6         	movff	USART2WriteString@str,tblptrl
  1400  00343A  C142  FFF7         	movff	USART2WriteString@str+1,tblptrh
  1401  00343E                     	if	0	;tblptru may be non-zero
  1402  00343E                     	endif
  1403  00343E                     	if	0	;tblptru may be non-zero
  1404  00343E                     	endif
  1405  00343E  0008               	tblrd		*
  1406  003440  50F5               	movf	tablat,w,c
  1407  003442  EC78  F01A         	call	_USART2WriteChar
  1408                           
  1409                           ;usart_pic16.c: 289: str++;
  1410  003446  0101               	movlb	1	; () banked
  1411  003448  4B41               	infsnz	USART2WriteString@str& (0+255),f,b
  1412  00344A  2B42               	incf	(USART2WriteString@str+1)& (0+255),f,b
  1413  00344C                     l5352:
  1414  00344C  C141  FFF6         	movff	USART2WriteString@str,tblptrl
  1415  003450  C142  FFF7         	movff	USART2WriteString@str+1,tblptrh
  1416  003454                     	if	0	;tblptru may be non-zero
  1417  003454                     	endif
  1418  003454                     	if	0	;tblptru may be non-zero
  1419  003454                     	endif
  1420  003454  0008               	tblrd		*
  1421  003456  50F5               	movf	tablat,w,c
  1422  003458  0900               	iorlw	0
  1423  00345A  B4D8               	btfsc	status,2,c
  1424  00345C  0012               	return	
  1425  00345E  D7EB               	goto	l5348
  1426  003460                     __end_of_USART2WriteString:
  1427                           	opt callstack 0
  1428                           
  1429 ;; *************** function _USART2Init *****************
  1430 ;; Defined at:
  1431 ;;		line 233 in file "usart_pic16.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  baud_rate       2    0[BANK1 ] unsigned int 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1445 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;Total ram usage:        4 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    4
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_eusart_config
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text5
  1460  002EE4                     __ptext5:
  1461                           	opt callstack 0
  1462  002EE4                     _USART2Init:
  1463                           	opt callstack 25
  1464                           
  1465                           ;usart_pic16.c: 236: UQFront=UQEnd=-1;
  1466                           
  1467                           ;incstack = 0
  1468  002EE4  685C               	setf	_UQEnd,c	;volatile
  1469  002EE6  685D               	setf	_UQFront,c	;volatile
  1470                           
  1471                           ;usart_pic16.c: 237: TRISDbits.RD7=1;
  1472  002EE8  8E95               	bsf	3989,7,c	;volatile
  1473                           
  1474                           ;usart_pic16.c: 238: TRISDbits.RD6=0;
  1475  002EEA  9C95               	bcf	3989,6,c	;volatile
  1476                           
  1477                           ;usart_pic16.c: 240: BAUDCON2bits.BRG162=1;
  1478  002EEC  8670               	bsf	3952,3,c	;volatile
  1479                           
  1480                           ;usart_pic16.c: 241: switch(baud_rate)
  1481  002EEE  D00B               	goto	l5320
  1482  002EF0                     l5310:
  1483                           
  1484                           ; BSR set to: 1
  1485                           ;usart_pic16.c: 244: SPBRGH2= 0X1A;
  1486  002EF0  0E1A               	movlw	26
  1487  002EF2  6E76               	movwf	3958,c	;volatile
  1488                           
  1489                           ;usart_pic16.c: 245: SPBRG2=0X0A;
  1490  002EF4  0E0A               	movlw	10
  1491  002EF6  D005               	goto	L6
  1492  002EF8                     l5312:
  1493                           
  1494                           ; BSR set to: 1
  1495                           ;usart_pic16.c: 248: SPBRG2=64;
  1496  002EF8  0E40               	movlw	64
  1497  002EFA  D003               	goto	L6
  1498  002EFC                     l5314:
  1499                           
  1500                           ; BSR set to: 1
  1501                           ;usart_pic16.c: 251: SPBRG2=42;
  1502  002EFC  0E2A               	movlw	42
  1503  002EFE  D001               	goto	L6
  1504  002F00                     l5316:
  1505                           
  1506                           ; BSR set to: 1
  1507                           ;usart_pic16.c: 254: SPBRG2=36;
  1508  002F00  0E24               	movlw	36
  1509  002F02                     L6:
  1510  002F02  6E75               	movwf	3957,c	;volatile
  1511                           
  1512                           ;usart_pic16.c: 255: break;
  1513  002F04  D026               	goto	l395
  1514  002F06                     l5320:
  1515  002F06  C140  F142         	movff	USART2Init@baud_rate,??_USART2Init
  1516  002F0A  C141  F143         	movff	USART2Init@baud_rate+1,??_USART2Init+1
  1517                           
  1518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 4, Range of values is 9 to 131
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte           13     7 (average)
  1524                           ;	Chosen strategy is simple_byte
  1525  002F0E  0101               	movlb	1	; () banked
  1526  002F10  5143               	movf	(??_USART2Init+1)& (0+255),w,b
  1527  002F12  0A09               	xorlw	9	; case 9
  1528  002F14  B4D8               	btfsc	status,2,c
  1529  002F16  D00A               	goto	l5742
  1530  002F18  0A42               	xorlw	66	; case 75
  1531  002F1A  B4D8               	btfsc	status,2,c
  1532  002F1C  D00C               	goto	l5744
  1533  002F1E  0A3B               	xorlw	59	; case 112
  1534  002F20  B4D8               	btfsc	status,2,c
  1535  002F22  D00E               	goto	l5746
  1536  002F24  0AF3               	xorlw	243	; case 131
  1537  002F26  B4D8               	btfsc	status,2,c
  1538  002F28  D010               	goto	l5748
  1539  002F2A  D013               	goto	l395
  1540  002F2C                     l5742:
  1541                           
  1542                           ; BSR set to: 1
  1543                           ; Switch size 1, requested type "simple"
  1544                           ; Number of cases is 1, Range of values is 96 to 96
  1545                           ; switch strategies available:
  1546                           ; Name         Instructions Cycles
  1547                           ; simple_byte            4     3 (average)
  1548                           ;	Chosen strategy is simple_byte
  1549  002F2C  5142               	movf	??_USART2Init& (0+255),w,b
  1550  002F2E  0A60               	xorlw	96	; case 96
  1551  002F30  B4D8               	btfsc	status,2,c
  1552  002F32  D7DE               	goto	l5310
  1553  002F34  D00E               	goto	l395
  1554  002F36                     l5744:
  1555                           
  1556                           ; BSR set to: 1
  1557                           ; Switch size 1, requested type "simple"
  1558                           ; Number of cases is 1, Range of values is 0 to 0
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; simple_byte            4     3 (average)
  1562                           ;	Chosen strategy is simple_byte
  1563  002F36  5142               	movf	??_USART2Init& (0+255),w,b
  1564  002F38  0A00               	xorlw	0	; case 0
  1565  002F3A  B4D8               	btfsc	status,2,c
  1566  002F3C  D7DD               	goto	l5312
  1567  002F3E  D009               	goto	l395
  1568  002F40                     l5746:
  1569                           
  1570                           ; BSR set to: 1
  1571                           ; Switch size 1, requested type "simple"
  1572                           ; Number of cases is 1, Range of values is 128 to 128
  1573                           ; switch strategies available:
  1574                           ; Name         Instructions Cycles
  1575                           ; simple_byte            4     3 (average)
  1576                           ;	Chosen strategy is simple_byte
  1577  002F40  5142               	movf	??_USART2Init& (0+255),w,b
  1578  002F42  0A80               	xorlw	128	; case 128
  1579  002F44  B4D8               	btfsc	status,2,c
  1580  002F46  D7DA               	goto	l5314
  1581  002F48  D004               	goto	l395
  1582  002F4A                     l5748:
  1583                           
  1584                           ; BSR set to: 1
  1585                           ; Switch size 1, requested type "simple"
  1586                           ; Number of cases is 1, Range of values is 64 to 64
  1587                           ; switch strategies available:
  1588                           ; Name         Instructions Cycles
  1589                           ; simple_byte            4     3 (average)
  1590                           ;	Chosen strategy is simple_byte
  1591  002F4A  5142               	movf	??_USART2Init& (0+255),w,b
  1592  002F4C  0A40               	xorlw	64	; case 64
  1593  002F4E  B4D8               	btfsc	status,2,c
  1594  002F50  D7D7               	goto	l5316
  1595  002F52                     l395:
  1596                           
  1597                           ; BSR set to: 1
  1598                           ;usart_pic16.c: 258: TXSTA2bits.TX9=0;
  1599  002F52  9C72               	bcf	3954,6,c	;volatile
  1600                           
  1601                           ;usart_pic16.c: 259: TXSTA2bits.TXEN=1;
  1602  002F54  8A72               	bsf	3954,5,c	;volatile
  1603                           
  1604                           ;usart_pic16.c: 260: TXSTA2bits.SYNC=0;
  1605  002F56  9872               	bcf	3954,4,c	;volatile
  1606                           
  1607                           ;usart_pic16.c: 261: TXSTA2bits.BRGH=1;
  1608  002F58  8472               	bsf	3954,2,c	;volatile
  1609                           
  1610                           ;usart_pic16.c: 264: RCSTA2bits.SPEN=1;
  1611  002F5A  8E71               	bsf	3953,7,c	;volatile
  1612                           
  1613                           ;usart_pic16.c: 265: RCSTA2bits.RX9=0;
  1614  002F5C  9C71               	bcf	3953,6,c	;volatile
  1615                           
  1616                           ;usart_pic16.c: 266: RCSTA2bits.CREN=1;
  1617  002F5E  8871               	bsf	3953,4,c	;volatile
  1618                           
  1619                           ;usart_pic16.c: 267: RCSTA2bits.ADDEN=0;
  1620  002F60  9671               	bcf	3953,3,c	;volatile
  1621                           
  1622                           ;usart_pic16.c: 271: PIE3bits.RC2IE=0;
  1623  002F62  9AA3               	bcf	4003,5,c	;volatile
  1624                           
  1625                           ;usart_pic16.c: 274: (INTCONbits.GIE = 1);
  1626  002F64  8EF2               	bsf	4082,7,c	;volatile
  1627                           
  1628                           ; BSR set to: 1
  1629  002F66  0012               	return		;funcret
  1630  002F68                     __end_of_USART2Init:
  1631                           	opt callstack 0
  1632                           
  1633 ;; *************** function _USART2GotoNewLine *****************
  1634 ;; Defined at:
  1635 ;;		line 293 in file "usart_pic16.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    5
  1656 ;; This function calls:
  1657 ;;		_USART2WriteChar
  1658 ;; This function is called by:
  1659 ;;		_eusart_config
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text6
  1664  0034E2                     __ptext6:
  1665                           	opt callstack 0
  1666  0034E2                     _USART2GotoNewLine:
  1667                           	opt callstack 24
  1668                           
  1669                           ;usart_pic16.c: 295: USART2WriteChar('\r');
  1670                           
  1671                           ; BSR set to: 1
  1672                           ;incstack = 0
  1673  0034E2  0E0D               	movlw	13
  1674  0034E4  EC78  F01A         	call	_USART2WriteChar
  1675                           
  1676                           ;usart_pic16.c: 296: USART2WriteChar('\n');
  1677  0034E8  0E0A               	movlw	10
  1678  0034EA  EC78  F01A         	call	_USART2WriteChar
  1679  0034EE  0012               	return		;funcret
  1680  0034F0                     __end_of_USART2GotoNewLine:
  1681                           	opt callstack 0
  1682                           
  1683 ;; *************** function _USART2WriteChar *****************
  1684 ;; Defined at:
  1685 ;;		line 277 in file "usart_pic16.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  ch              1    wreg     unsigned char 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  ch              1    0[BANK1 ] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;Total ram usage:        1 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    4
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_USART2WriteString
  1710 ;;		_USART2GotoNewLine
  1711 ;;		_USART2WriteInt
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text7
  1716  0034F0                     __ptext7:
  1717                           	opt callstack 0
  1718  0034F0                     _USART2WriteChar:
  1719                           	opt callstack 24
  1720                           
  1721                           ;incstack = 0
  1722                           ;USART2WriteChar@ch stored from wreg
  1723  0034F0  0101               	movlb	1	; () banked
  1724  0034F2  6F40               	movwf	USART2WriteChar@ch& (0+255),b
  1725  0034F4                     
  1726                           ;usart_pic16.c: 279: while(!PIR3bits.TX2IF);
  1727  0034F4  A8A4               	btfss	4004,4,c	;volatile
  1728  0034F6  D7FE               	goto	l5266
  1729                           
  1730                           ;usart_pic16.c: 281: TXREG2=ch;
  1731  0034F8  C140  FF73         	movff	USART2WriteChar@ch,3955	;volatile
  1732  0034FC  0012               	return		;funcret
  1733  0034FE                     __end_of_USART2WriteChar:
  1734                           	opt callstack 0
  1735                           
  1736 ;; *************** function _config *****************
  1737 ;; Defined at:
  1738 ;;		line 7 in file "config.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    4
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text8
  1767  003236                     __ptext8:
  1768                           	opt callstack 0
  1769  003236                     _config:
  1770                           	opt callstack 26
  1771                           
  1772                           ;config.c: 9: TRISA=0X00;
  1773                           
  1774                           ;incstack = 0
  1775  003236  0E00               	movlw	0
  1776  003238  6E92               	movwf	3986,c	;volatile
  1777                           
  1778                           ;config.c: 10: TRISB=0X00;
  1779  00323A  0E00               	movlw	0
  1780  00323C  6E93               	movwf	3987,c	;volatile
  1781                           
  1782                           ;config.c: 11: TRISC=0X00;
  1783  00323E  0E00               	movlw	0
  1784  003240  6E94               	movwf	3988,c	;volatile
  1785                           
  1786                           ;config.c: 12: TRISD=0X00;
  1787  003242  0E00               	movlw	0
  1788  003244  6E95               	movwf	3989,c	;volatile
  1789                           
  1790                           ;config.c: 13: TRISE=0Xff;
  1791  003246  6896               	setf	3990,c	;volatile
  1792                           
  1793                           ;config.c: 15: PORTA=0X00;
  1794  003248  0E00               	movlw	0
  1795  00324A  6E80               	movwf	3968,c	;volatile
  1796                           
  1797                           ;config.c: 16: PORTB=0X00;
  1798  00324C  0E00               	movlw	0
  1799  00324E  6E81               	movwf	3969,c	;volatile
  1800                           
  1801                           ;config.c: 17: PORTC=0X00;
  1802  003250  0E00               	movlw	0
  1803  003252  6E82               	movwf	3970,c	;volatile
  1804                           
  1805                           ;config.c: 18: PORTD=0X00;
  1806  003254  0E00               	movlw	0
  1807  003256  6E83               	movwf	3971,c	;volatile
  1808                           
  1809                           ;config.c: 19: PORTE=0X00;
  1810  003258  0E00               	movlw	0
  1811  00325A  6E84               	movwf	3972,c	;volatile
  1812                           
  1813                           ;config.c: 21: LATA=0X00;
  1814  00325C  0E00               	movlw	0
  1815  00325E  6E89               	movwf	3977,c	;volatile
  1816                           
  1817                           ;config.c: 22: LATB=0X00;
  1818  003260  0E00               	movlw	0
  1819  003262  6E8A               	movwf	3978,c	;volatile
  1820                           
  1821                           ;config.c: 23: LATC=0X00;
  1822  003264  0E00               	movlw	0
  1823  003266  6E8B               	movwf	3979,c	;volatile
  1824                           
  1825                           ;config.c: 24: LATD=0X00;
  1826  003268  0E00               	movlw	0
  1827  00326A  6E8C               	movwf	3980,c	;volatile
  1828                           
  1829                           ;config.c: 25: LATE=0X00;
  1830  00326C  0E00               	movlw	0
  1831  00326E  6E8D               	movwf	3981,c	;volatile
  1832                           
  1833                           ;config.c: 27: ANSELA=0X00;
  1834  003270  0E00               	movlw	0
  1835  003272  010F               	movlb	15	; () banked
  1836  003274  6F38               	movwf	56,b	;volatile
  1837                           
  1838                           ;config.c: 28: ANSELB=0X00;
  1839  003276  0E00               	movlw	0
  1840  003278  6F39               	movwf	57,b	;volatile
  1841                           
  1842                           ;config.c: 29: ANSELC=0X00;
  1843  00327A  0E00               	movlw	0
  1844  00327C  6F3A               	movwf	58,b	;volatile
  1845                           
  1846                           ;config.c: 30: ANSELD=0X00;
  1847  00327E  0E00               	movlw	0
  1848  003280  6F3B               	movwf	59,b	;volatile
  1849                           
  1850                           ;config.c: 31: ANSELE=0X00;
  1851  003282  0E00               	movlw	0
  1852  003284  6F3C               	movwf	60,b	;volatile
  1853                           
  1854                           ; BSR set to: 15
  1855                           ;config.c: 32: TRISDbits.TRISD5;
  1856  003286  5095               	movf	3989,w,c	;volatile
  1857                           
  1858                           ; BSR set to: 15
  1859                           ;config.c: 33: TRISDbits.TRISD3;
  1860  003288  5095               	movf	3989,w,c	;volatile
  1861                           
  1862                           ;config.c: 36: OSCCON=0b01110100;
  1863  00328A  0E74               	movlw	116
  1864  00328C  6ED3               	movwf	4051,c	;volatile
  1865                           
  1866                           ; BSR set to: 15
  1867                           ;config.c: 37: OSCTUNEbits.PLLEN=1;
  1868  00328E  8C9B               	bsf	3995,6,c	;volatile
  1869                           
  1870                           ; BSR set to: 15
  1871  003290  0012               	return		;funcret
  1872  003292                     __end_of_config:
  1873                           	opt callstack 0
  1874                           
  1875 ;; *************** function _adc_config *****************
  1876 ;; Defined at:
  1877 ;;		line 59 in file "config.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    4
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text9
  1906  0034C8                     __ptext9:
  1907                           	opt callstack 0
  1908  0034C8                     _adc_config:
  1909                           	opt callstack 26
  1910                           
  1911                           ; BSR set to: 15
  1912                           ;incstack = 0
  1913  0034C8  8092               	bsf	3986,0,c	;volatile
  1914                           
  1915                           ;config.c: 61: ANSELAbits.ANSA0=1;
  1916  0034CA  010F               	movlb	15	; () banked
  1917  0034CC  8138               	bsf	56,0,b	;volatile
  1918                           
  1919                           ;config.c: 62: TRISAbits.RA1=1;
  1920  0034CE  8292               	bsf	3986,1,c	;volatile
  1921                           
  1922                           ;config.c: 63: ANSELAbits.ANSA1=1;
  1923  0034D0  8338               	bsf	56,1,b	;volatile
  1924                           
  1925                           ; BSR set to: 15
  1926                           ;config.c: 66: ADCON0=0b00000011;
  1927  0034D2  0E03               	movlw	3
  1928  0034D4  6EC2               	movwf	4034,c	;volatile
  1929                           
  1930                           ;config.c: 67: ADCON1=0b10000000;
  1931  0034D6  0E80               	movlw	128
  1932  0034D8  6EC1               	movwf	4033,c	;volatile
  1933                           
  1934                           ;config.c: 68: ADCON2=0b00111110;
  1935  0034DA  0E3E               	movlw	62
  1936  0034DC  6EC0               	movwf	4032,c	;volatile
  1937                           
  1938                           ; BSR set to: 15
  1939                           ;config.c: 69: ADCON2bits.ADFM=0;
  1940  0034DE  9EC0               	bcf	4032,7,c	;volatile
  1941                           
  1942                           ; BSR set to: 15
  1943  0034E0  0012               	return		;funcret
  1944  0034E2                     __end_of_adc_config:
  1945                           	opt callstack 0
  1946                           
  1947 ;; *************** function _serial *****************
  1948 ;; Defined at:
  1949 ;;		line 35 in file "main.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;		None
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  flag            2   59[BANK0 ] int 
  1954 ;;  str_A           8   43[BANK0 ] unsigned char [8]
  1955 ;;  str_V           8   35[BANK0 ] unsigned char [8]
  1956 ;;  j               4   55[BANK0 ] float 
  1957 ;;  i               4   51[BANK0 ] float 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;Total ram usage:       36 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    3
  1974 ;; This function calls:
  1975 ;;		_USARTWriteString
  1976 ;;		_read_Ibat
  1977 ;;		_read_Ubat
  1978 ;;		_sprintf
  1979 ;; This function is called by:
  1980 ;;		Interrupt level 2
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	intcode
  1985  000008                     __pintcode:
  1986                           	opt callstack 0
  1987  000008                     _serial:
  1988                           	opt callstack 24
  1989                           
  1990                           ; BSR set to: 15
  1991                           ;incstack = 0
  1992  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1993  00000A  CFD9 F07B          	movff	fsr2l,??_serial+2
  1994  00000E  CFDA F07C          	movff	fsr2h,??_serial+3
  1995  000012  CFF3 F07D          	movff	prodl,??_serial+4
  1996  000016  CFF4 F07E          	movff	prodh,??_serial+5
  1997  00001A  CFF6 F07F          	movff	tblptrl,??_serial+6
  1998  00001E  CFF7 F080          	movff	tblptrh,??_serial+7
  1999  000022  CFF8 F081          	movff	tblptru,??_serial+8
  2000  000026  CFF5 F082          	movff	tablat,??_serial+9
  2001                           
  2002                           ;main.c: 37: char str_V[8],str_A[8];;main.c: 38: float i,j;;main.c: 40: if (RC1IF==1)
  2003  00002A  AA9E               	btfss	3998,5,c	;volatile
  2004  00002C  D116               	goto	i2l71
  2005                           
  2006                           ;main.c: 44: flag=RCREG1;
  2007  00002E  CFAE F09B          	movff	4014,serial@flag	;volatile
  2008  000032  0100               	movlb	0	; () banked
  2009  000034  6B9C               	clrf	(serial@flag+1)& (0+255),b
  2010                           
  2011                           ;main.c: 46: switch(flag)
  2012  000036  D0D8               	goto	i2l4798
  2013  000038                     i2l4696:
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;main.c: 49: CCPR2L=CCPR1L=60;
  2017  000038  0E3C               	movlw	60
  2018  00003A  6EBE               	movwf	4030,c	;volatile
  2019  00003C  CFBE FF67          	movff	4030,3943	;volatile
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;main.c: 50: LATDbits.LD1=LATDbits.LD2=1;
  2023  000040  848C               	bsf	3980,2,c	;volatile
  2024  000042  828C               	bsf	3980,1,c	;volatile
  2025  000044  D0A3               	goto	i2l4776
  2026  000046                     i2l4702:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;main.c: 55: CCPR2L=CCPR1L=0;
  2030  000046  0E00               	movlw	0
  2031  000048  6EBE               	movwf	4030,c	;volatile
  2032  00004A  CFBE FF67          	movff	4030,3943	;volatile
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;main.c: 56: LATDbits.LD0=1;
  2036  00004E  808C               	bsf	3980,0,c	;volatile
  2037                           
  2038                           ;main.c: 57: break;
  2039  000050  D104               	goto	i2l71
  2040  000052                     i2l4706:
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;main.c: 60: CCPR2L=80;
  2044  000052  0E50               	movlw	80
  2045  000054  6E67               	movwf	3943,c	;volatile
  2046                           
  2047                           ;main.c: 61: CCPR1L= 30;
  2048  000056  0E1E               	movlw	30
  2049  000058  6EBE               	movwf	4030,c	;volatile
  2050  00005A  D098               	goto	i2l4776
  2051  00005C                     i2l4710:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;main.c: 66: CCPR1L=80;
  2055  00005C  0E50               	movlw	80
  2056  00005E  6EBE               	movwf	4030,c	;volatile
  2057                           
  2058                           ;main.c: 67: CCPR2L=20;
  2059  000060  0E14               	movlw	20
  2060  000062  6E67               	movwf	3943,c	;volatile
  2061  000064  D093               	goto	i2l4776
  2062  000066                     i2l4714:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;main.c: 72: CCPR2L=CCPR1L=60;
  2066  000066  0E3C               	movlw	60
  2067  000068  6EBE               	movwf	4030,c	;volatile
  2068  00006A  CFBE FF67          	movff	4030,3943	;volatile
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;main.c: 73: LATDbits.LD1=LATDbits.LD2=0;
  2072  00006E  948C               	bcf	3980,2,c	;volatile
  2073  000070  928C               	bcf	3980,1,c	;volatile
  2074  000072  D08C               	goto	i2l4776
  2075  000074                     i2l4720:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;main.c: 78: CCPR1L=70;
  2079  000074  0E46               	movlw	70
  2080  000076  6EBE               	movwf	4030,c	;volatile
  2081                           
  2082                           ;main.c: 79: CCPR2L=70;
  2083  000078  0E46               	movlw	70
  2084  00007A  6E67               	movwf	3943,c	;volatile
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;main.c: 80: LATDbits.LD0=0;
  2088  00007C  908C               	bcf	3980,0,c	;volatile
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;main.c: 81: LATDbits.LD1=1;
  2092  00007E  828C               	bsf	3980,1,c	;volatile
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;main.c: 82: LATDbits.LD2=0;
  2096  000080  948C               	bcf	3980,2,c	;volatile
  2097                           
  2098                           ;main.c: 83: break;
  2099  000082  D0EB               	goto	i2l71
  2100  000084                     i2l4728:
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;main.c: 88: CCPR2L=CCPR1L=0;
  2104  000084  0E00               	movlw	0
  2105  000086  6EBE               	movwf	4030,c	;volatile
  2106  000088  CFBE FF67          	movff	4030,3943	;volatile
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;main.c: 89: LATDbits.LD0=1;
  2110  00008C  808C               	bsf	3980,0,c	;volatile
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;main.c: 90: LATEbits.LE0=1;
  2114  00008E  808D               	bsf	3981,0,c	;volatile
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;main.c: 91: LATEbits.LE1=1;
  2118  000090  828D               	bsf	3981,1,c	;volatile
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;main.c: 92: LATEbits.LE2=0;
  2122  000092  948D               	bcf	3981,2,c	;volatile
  2123                           
  2124                           ;main.c: 93: break;
  2125  000094  D0E2               	goto	i2l71
  2126  000096                     i2l4738:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;main.c: 96: CCPR2L=CCPR1L=0;
  2130  000096  0E00               	movlw	0
  2131  000098  6EBE               	movwf	4030,c	;volatile
  2132  00009A  CFBE FF67          	movff	4030,3943	;volatile
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 97: LATDbits.LD0=1;
  2136  00009E  808C               	bsf	3980,0,c	;volatile
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;main.c: 98: LATEbits.LE0=1;
  2140  0000A0  808D               	bsf	3981,0,c	;volatile
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;main.c: 99: LATEbits.LE2=1;
  2144  0000A2  848D               	bsf	3981,2,c	;volatile
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;main.c: 100: LATEbits.LE1=0;
  2148  0000A4  928D               	bcf	3981,1,c	;volatile
  2149                           
  2150                           ;main.c: 101: break;
  2151  0000A6  D0D9               	goto	i2l71
  2152  0000A8                     i2l4748:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;main.c: 104: i=read_Ibat();
  2156  0000A8  ECF0  F015         	call	_read_Ibat	;wreg free
  2157  0000AC  C028  F093         	movff	?_read_Ibat,serial@i
  2158  0000B0  C029  F094         	movff	?_read_Ibat+1,serial@i+1
  2159  0000B4  C02A  F095         	movff	?_read_Ibat+2,serial@i+2
  2160  0000B8  C02B  F096         	movff	?_read_Ibat+3,serial@i+3
  2161                           
  2162                           ;main.c: 105: sprintf(str_A, "%.2f", i);
  2163  0000BC  0E8B               	movlw	low serial@str_A
  2164  0000BE  6E4D               	movwf	sprintf@sp,c
  2165  0000C0  0E00               	movlw	high serial@str_A
  2166  0000C2  6E4E               	movwf	sprintf@sp+1,c
  2167  0000C4  0EA9               	movlw	low STR_1
  2168  0000C6  6E4F               	movwf	sprintf@f,c
  2169  0000C8  0E10               	movlw	high STR_1
  2170  0000CA  6E50               	movwf	sprintf@f+1,c
  2171  0000CC  C093  F051         	movff	serial@i,?_sprintf+4
  2172  0000D0  C094  F052         	movff	serial@i+1,?_sprintf+5
  2173  0000D4  C095  F053         	movff	serial@i+2,?_sprintf+6
  2174  0000D8  C096  F054         	movff	serial@i+3,?_sprintf+7
  2175  0000DC  EC58  F008         	call	_sprintf	;wreg free
  2176                           
  2177                           ;main.c: 106: USARTWriteString(str_A);
  2178  0000E0  0E8B               	movlw	low serial@str_A
  2179  0000E2  6E02               	movwf	USARTWriteString@str,c
  2180  0000E4  0E00               	movlw	high serial@str_A
  2181  0000E6  6E03               	movwf	USARTWriteString@str+1,c
  2182  0000E8  EC43  F01A         	call	_USARTWriteString	;wreg free
  2183                           
  2184                           ;main.c: 107: break;
  2185  0000EC  D0B6               	goto	i2l71
  2186  0000EE                     i2l4754:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;main.c: 110: j=read_Ubat();
  2190  0000EE  EC59  F014         	call	_read_Ubat	;wreg free
  2191  0000F2  C028  F097         	movff	?_read_Ubat,serial@j
  2192  0000F6  C029  F098         	movff	?_read_Ubat+1,serial@j+1
  2193  0000FA  C02A  F099         	movff	?_read_Ubat+2,serial@j+2
  2194  0000FE  C02B  F09A         	movff	?_read_Ubat+3,serial@j+3
  2195                           
  2196                           ;main.c: 111: sprintf(str_V, "%.1f", j);
  2197  000102  0E83               	movlw	low serial@str_V
  2198  000104  6E4D               	movwf	sprintf@sp,c
  2199  000106  0E00               	movlw	high serial@str_V
  2200  000108  6E4E               	movwf	sprintf@sp+1,c
  2201  00010A  0EA4               	movlw	low STR_2
  2202  00010C  6E4F               	movwf	sprintf@f,c
  2203  00010E  0E10               	movlw	high STR_2
  2204  000110  6E50               	movwf	sprintf@f+1,c
  2205  000112  C097  F051         	movff	serial@j,?_sprintf+4
  2206  000116  C098  F052         	movff	serial@j+1,?_sprintf+5
  2207  00011A  C099  F053         	movff	serial@j+2,?_sprintf+6
  2208  00011E  C09A  F054         	movff	serial@j+3,?_sprintf+7
  2209  000122  EC58  F008         	call	_sprintf	;wreg free
  2210                           
  2211                           ;main.c: 112: USARTWriteString(str_V);
  2212  000126  0E83               	movlw	low serial@str_V
  2213  000128  6E02               	movwf	USARTWriteString@str,c
  2214  00012A  0E00               	movlw	high serial@str_V
  2215  00012C  6E03               	movwf	USARTWriteString@str+1,c
  2216  00012E  EC43  F01A         	call	_USARTWriteString	;wreg free
  2217                           
  2218                           ;main.c: 113: break;
  2219  000132  D093               	goto	i2l71
  2220  000134                     i2l84:
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;main.c: 116: LATEbits.LE0=1;
  2224  000134  808D               	bsf	3981,0,c	;volatile
  2225                           
  2226                           ;main.c: 117: break;
  2227  000136  D091               	goto	i2l71
  2228  000138                     i2l4760:
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;main.c: 120: CCPR2L=CCPR1L=0;
  2232  000138  0E00               	movlw	0
  2233  00013A  6EBE               	movwf	4030,c	;volatile
  2234  00013C  CFBE FF67          	movff	4030,3943	;volatile
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;main.c: 121: LATDbits.LD0=1;
  2238  000140  808C               	bsf	3980,0,c	;volatile
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;main.c: 122: _delay((unsigned long)((2000)*(64000000/4000.0)));
  2242  000142  0EA3               	movlw	163
  2243  000144  0100               	movlb	0	; () banked
  2244  000146  6F7A               	movwf	(??_serial+1)& (0+255),b
  2245  000148  0E57               	movlw	87
  2246  00014A  6F79               	movwf	??_serial& (0+255),b
  2247  00014C  0E02               	movlw	2
  2248  00014E                     i2u477_47:
  2249  00014E  2EE8               	decfsz	wreg,f,c
  2250  000150  D7FE               	bra	i2u477_47
  2251  000152  2F79               	decfsz	??_serial& (0+255),f,b
  2252  000154  D7FC               	bra	i2u477_47
  2253  000156  2F7A               	decfsz	(??_serial+1)& (0+255),f,b
  2254  000158  D7FA               	bra	i2u477_47
  2255  00015A  F000               	nop	
  2256  00015C                     i2l4766:
  2257                           
  2258                           ;main.c: 123: CCPR2L=CCPR1L=30;
  2259  00015C  0E1E               	movlw	30
  2260  00015E  D040               	goto	L7
  2261  000160                     i2l4768:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;main.c: 127: CCPR2L=CCPR1L=0;
  2265  000160  0E00               	movlw	0
  2266  000162  6EBE               	movwf	4030,c	;volatile
  2267  000164  CFBE FF67          	movff	4030,3943	;volatile
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;main.c: 128: LATDbits.LD0=1;
  2271  000168  808C               	bsf	3980,0,c	;volatile
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;main.c: 129: _delay((unsigned long)((1000)*(64000000/4000.0)));
  2275  00016A  0E52               	movlw	82
  2276  00016C  0100               	movlb	0	; () banked
  2277  00016E  6F7A               	movwf	(??_serial+1)& (0+255),b
  2278  000170  0E2B               	movlw	43
  2279  000172  6F79               	movwf	??_serial& (0+255),b
  2280  000174  0E00               	movlw	0
  2281  000176                     i2u478_47:
  2282  000176  2EE8               	decfsz	wreg,f,c
  2283  000178  D7FE               	bra	i2u478_47
  2284  00017A  2F79               	decfsz	??_serial& (0+255),f,b
  2285  00017C  D7FC               	bra	i2u478_47
  2286  00017E  2F7A               	decfsz	(??_serial+1)& (0+255),f,b
  2287  000180  D7FA               	bra	i2u478_47
  2288  000182  F000               	nop	
  2289                           
  2290                           ;main.c: 130: CCPR2L=CCPR1L=30;
  2291  000184  0E1E               	movlw	30
  2292  000186  6EBE               	movwf	4030,c	;volatile
  2293  000188  CFBE FF67          	movff	4030,3943	;volatile
  2294  00018C                     i2l4776:
  2295                           
  2296                           ;main.c: 131: LATDbits.LD0=0;
  2297  00018C  908C               	bcf	3980,0,c	;volatile
  2298                           
  2299                           ;main.c: 132: break;
  2300  00018E  D065               	goto	i2l71
  2301  000190                     i2l4778:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;main.c: 135: CCPR2L=CCPR1L=0;
  2305  000190  0E00               	movlw	0
  2306  000192  6EBE               	movwf	4030,c	;volatile
  2307  000194  CFBE FF67          	movff	4030,3943	;volatile
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;main.c: 136: LATDbits.LD0=1;
  2311  000198  808C               	bsf	3980,0,c	;volatile
  2312  00019A                     i2l4782:
  2313                           
  2314                           ;main.c: 137: _delay((unsigned long)((2000)*(64000000/4000.0)));
  2315  00019A  0EA3               	movlw	163
  2316  00019C  0100               	movlb	0	; () banked
  2317  00019E  6F7A               	movwf	(??_serial+1)& (0+255),b
  2318  0001A0  0E57               	movlw	87
  2319  0001A2  6F79               	movwf	??_serial& (0+255),b
  2320  0001A4  0E02               	movlw	2
  2321  0001A6                     i2u479_47:
  2322  0001A6  2EE8               	decfsz	wreg,f,c
  2323  0001A8  D7FE               	bra	i2u479_47
  2324  0001AA  2F79               	decfsz	??_serial& (0+255),f,b
  2325  0001AC  D7FC               	bra	i2u479_47
  2326  0001AE  2F7A               	decfsz	(??_serial+1)& (0+255),f,b
  2327  0001B0  D7FA               	bra	i2u479_47
  2328  0001B2  F000               	nop	
  2329  0001B4  D7F2               	goto	i2l4782
  2330  0001B6                     i2l4786:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;main.c: 145: CCPR2L=CCPR1L=0;
  2334  0001B6  0E00               	movlw	0
  2335  0001B8  6EBE               	movwf	4030,c	;volatile
  2336  0001BA  CFBE FF67          	movff	4030,3943	;volatile
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;main.c: 146: LATDbits.LD0=1;
  2340  0001BE  808C               	bsf	3980,0,c	;volatile
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;main.c: 147: _delay((unsigned long)((3000)*(64000000/4000.0)));
  2344  0001C0  0EF4               	movlw	244
  2345  0001C2  0100               	movlb	0	; () banked
  2346  0001C4  6F7A               	movwf	(??_serial+1)& (0+255),b
  2347  0001C6  0E82               	movlw	130
  2348  0001C8  6F79               	movwf	??_serial& (0+255),b
  2349  0001CA  0E05               	movlw	5
  2350  0001CC                     i2u480_47:
  2351  0001CC  2EE8               	decfsz	wreg,f,c
  2352  0001CE  D7FE               	bra	i2u480_47
  2353  0001D0  2F79               	decfsz	??_serial& (0+255),f,b
  2354  0001D2  D7FC               	bra	i2u480_47
  2355  0001D4  2F7A               	decfsz	(??_serial+1)& (0+255),f,b
  2356  0001D6  D7FA               	bra	i2u480_47
  2357  0001D8  D7C1               	goto	i2l4766
  2358  0001DA                     i2l92:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;main.c: 152: LATDbits.LD1=1;
  2362  0001DA  828C               	bsf	3980,1,c	;volatile
  2363                           
  2364                           ;main.c: 153: LATDbits.LD2=0;
  2365  0001DC  948C               	bcf	3980,2,c	;volatile
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 154: CCPR2L=CCPR1L=140;
  2369  0001DE  0E8C               	movlw	140
  2370  0001E0                     L7:
  2371  0001E0  6EBE               	movwf	4030,c	;volatile
  2372  0001E2  CFBE FF67          	movff	4030,3943	;volatile
  2373                           
  2374                           ;main.c: 155: break;
  2375  0001E6  D039               	goto	i2l71
  2376  0001E8                     i2l4798:
  2377                           
  2378                           ; BSR set to: 0
  2379  0001E8  C09B  F079         	movff	serial@flag,??_serial
  2380  0001EC  C09C  F07A         	movff	serial@flag+1,??_serial+1
  2381                           
  2382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2383                           ; Switch size 1, requested type "simple"
  2384                           ; Number of cases is 1, Range of values is 0 to 0
  2385                           ; switch strategies available:
  2386                           ; Name         Instructions Cycles
  2387                           ; simple_byte            4     3 (average)
  2388                           ;	Chosen strategy is simple_byte
  2389  0001F0  517A               	movf	(??_serial+1)& (0+255),w,b
  2390  0001F2  0A00               	xorlw	0	; case 0
  2391  0001F4  A4D8               	btfss	status,2,c
  2392  0001F6  D031               	goto	i2l71
  2393                           
  2394                           ; BSR set to: 0
  2395                           ; Switch size 1, requested type "simple"
  2396                           ; Number of cases is 16, Range of values is 66 to 130
  2397                           ; switch strategies available:
  2398                           ; Name         Instructions Cycles
  2399                           ; simple_byte           49    25 (average)
  2400                           ;	Chosen strategy is simple_byte
  2401  0001F8  5179               	movf	??_serial& (0+255),w,b
  2402  0001FA  0A42               	xorlw	66	; case 66
  2403  0001FC  B4D8               	btfsc	status,2,c
  2404  0001FE  D733               	goto	i2l4714
  2405  000200  0A06               	xorlw	6	; case 68
  2406  000202  B4D8               	btfsc	status,2,c
  2407  000204  D7D8               	goto	i2l4786
  2408  000206  0A03               	xorlw	3	; case 71
  2409  000208  B4D8               	btfsc	status,2,c
  2410  00020A  D7E7               	goto	i2l92
  2411  00020C  0A0F               	xorlw	15	; case 72
  2412  00020E  B4D8               	btfsc	status,2,c
  2413  000210  D742               	goto	i2l4738
  2414  000212  0A01               	xorlw	1	; case 73
  2415  000214  B4D8               	btfsc	status,2,c
  2416  000216  D72E               	goto	i2l4720
  2417  000218  0A05               	xorlw	5	; case 76
  2418  00021A  B4D8               	btfsc	status,2,c
  2419  00021C  D71A               	goto	i2l4706
  2420  00021E  0A1E               	xorlw	30	; case 82
  2421  000220  B4D8               	btfsc	status,2,c
  2422  000222  D71C               	goto	i2l4710
  2423  000224  0A01               	xorlw	1	; case 83
  2424  000226  B4D8               	btfsc	status,2,c
  2425  000228  D70E               	goto	i2l4702
  2426  00022A  0A32               	xorlw	50	; case 97
  2427  00022C  B4D8               	btfsc	status,2,c
  2428  00022E  D73C               	goto	i2l4748
  2429  000230  0A07               	xorlw	7	; case 102
  2430  000232  B4D8               	btfsc	status,2,c
  2431  000234  D701               	goto	i2l4696
  2432  000236  0A09               	xorlw	9	; case 111
  2433  000238  B4D8               	btfsc	status,2,c
  2434  00023A  D77C               	goto	i2l84
  2435  00023C  0A19               	xorlw	25	; case 118
  2436  00023E  B4D8               	btfsc	status,2,c
  2437  000240  D756               	goto	i2l4754
  2438  000242  0A0C               	xorlw	12	; case 122
  2439  000244  B4D8               	btfsc	status,2,c
  2440  000246  D71E               	goto	i2l4728
  2441  000248  0AFA               	xorlw	250	; case 128
  2442  00024A  B4D8               	btfsc	status,2,c
  2443  00024C  D7A1               	goto	i2l4778
  2444  00024E  0A01               	xorlw	1	; case 129
  2445  000250  B4D8               	btfsc	status,2,c
  2446  000252  D786               	goto	i2l4768
  2447  000254  0A03               	xorlw	3	; case 130
  2448  000256  B4D8               	btfsc	status,2,c
  2449  000258  D76F               	goto	i2l4760
  2450  00025A                     i2l71:
  2451                           
  2452                           ;main.c: 159: };main.c: 160: RC1IF=0;
  2453  00025A  9A9E               	bcf	3998,5,c	;volatile
  2454  00025C  C082  FFF5         	movff	??_serial+9,tablat
  2455  000260  C081  FFF8         	movff	??_serial+8,tblptru
  2456  000264  C080  FFF7         	movff	??_serial+7,tblptrh
  2457  000268  C07F  FFF6         	movff	??_serial+6,tblptrl
  2458  00026C  C07E  FFF4         	movff	??_serial+5,prodh
  2459  000270  C07D  FFF3         	movff	??_serial+4,prodl
  2460  000274  C07C  FFDA         	movff	??_serial+3,fsr2h
  2461  000278  C07B  FFD9         	movff	??_serial+2,fsr2l
  2462  00027C  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2463  00027E  0011               	retfie		f
  2464  000280                     __end_of_serial:
  2465                           	opt callstack 0
  2466                           
  2467 ;; *************** function _sprintf *****************
  2468 ;; Defined at:
  2469 ;;		line 500 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  sp              2   76[COMRAM] PTR unsigned char 
  2472 ;;		 -> serial@str_V(8), serial@str_A(8), 
  2473 ;;  f               2   78[COMRAM] PTR const unsigned char 
  2474 ;;		 -> STR_2(5), STR_1(5), 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
  2477 ;;  tmpval          4   14[BANK0 ] struct .
  2478 ;;  val             4    8[BANK0 ] unsigned long 
  2479 ;;  cp              3    0        PTR const unsigned char 
  2480 ;;  prec            2   18[BANK0 ] int 
  2481 ;;  eexp            2   12[BANK0 ] int 
  2482 ;;  flag            2    6[BANK0 ] unsigned short 
  2483 ;;  ap              2    4[BANK0 ] PTR void [1]
  2484 ;;		 -> ?_sprintf(2), 
  2485 ;;  len             2    0        unsigned int 
  2486 ;;  width           2    0        int 
  2487 ;;  c               1   24[BANK0 ] unsigned char 
  2488 ;;  d               1    0        unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  2   76[COMRAM] int 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2498 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Totals:        11      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;Total ram usage:       36 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    2
  2505 ;; This function calls:
  2506 ;;		___awdiv
  2507 ;;		___fladd
  2508 ;;		___fleq
  2509 ;;		___flge
  2510 ;;		___flmul
  2511 ;;		___flneg
  2512 ;;		___flsub
  2513 ;;		___fltol
  2514 ;;		___lldiv
  2515 ;;		___llmod
  2516 ;;		___wmul
  2517 ;;		___xxtofl
  2518 ;;		__div_to_l_
  2519 ;;		__tdiv_to_l_
  2520 ;;		_fround
  2521 ;;		_isdigit
  2522 ;;		_scale
  2523 ;; This function is called by:
  2524 ;;		_serial
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text11
  2529  0010B0                     __ptext11:
  2530                           	opt callstack 0
  2531  0010B0                     _sprintf:
  2532                           	opt callstack 24
  2533                           
  2534                           ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          12: int prec;;doprnt.c: 520: unsigned short flag;;doprnt.c: 527: char d;;doprnt.c: 528: 
      +                          double fval;;doprnt.c: 529: int eexp;;doprnt.c: 535: union {;doprnt.c: 536: unsigned lon
      +                          g vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned long
      +                           val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = 
      +                          __va_start();
  2535                           
  2536                           ;incstack = 0
  2537  0010B0  0E51               	movlw	low (?_sprintf+4)
  2538  0010B2  0100               	movlb	0	; () banked
  2539  0010B4  6F64               	movwf	sprintf@ap& (0+255),b
  2540  0010B6  0E00               	movlw	high (?_sprintf+4)
  2541  0010B8  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  2542                           
  2543                           ;doprnt.c: 548: while((c = *f++)) {
  2544  0010BA  D3A8               	goto	i2l4594
  2545  0010BC                     i2l4396:
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;doprnt.c: 550: if(c != '%')
  2549  0010BC  0E25               	movlw	37
  2550  0010BE  1978               	xorwf	sprintf@c& (0+255),w,b
  2551  0010C0  B4D8               	btfsc	status,2,c
  2552  0010C2  D009               	goto	i2l4402
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  2556  0010C4  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2557  0010C8  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2558  0010CC  C078  FFDF         	movff	sprintf@c,indf2
  2559  0010D0                     i2l4400:
  2560                           
  2561                           ; BSR set to: 0
  2562  0010D0  4A4D               	infsnz	sprintf@sp,f,c
  2563  0010D2  2A4E               	incf	sprintf@sp+1,f,c
  2564                           
  2565                           ;doprnt.c: 554: continue;
  2566  0010D4  D39B               	goto	i2l4594
  2567  0010D6                     i2l4402:
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;doprnt.c: 555: };doprnt.c: 560: flag = 0;
  2571  0010D6  0E00               	movlw	0
  2572  0010D8  6F67               	movwf	(sprintf@flag+1)& (0+255),b
  2573  0010DA  0E00               	movlw	0
  2574  0010DC  6F66               	movwf	sprintf@flag& (0+255),b
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;doprnt.c: 623: if(*f == '.') {
  2578  0010DE  C04F  FFF6         	movff	sprintf@f,tblptrl
  2579  0010E2  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2580  0010E6                     	if	0	;tblptru may be non-zero
  2581  0010E6                     	endif
  2582  0010E6                     	if	0	;tblptru may be non-zero
  2583  0010E6                     	endif
  2584  0010E6  0008               	tblrd		*
  2585  0010E8  50F5               	movf	tablat,w,c
  2586  0010EA  0A2E               	xorlw	46
  2587  0010EC  A4D8               	btfss	status,2,c
  2588  0010EE  D02F               	goto	i2l4416
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;doprnt.c: 624: flag |= 0x4000;
  2592  0010F0  8D67               	bsf	(sprintf@flag+1)& (0+255),6,b
  2593                           
  2594                           ;doprnt.c: 625: f++;
  2595  0010F2  4A4F               	infsnz	sprintf@f,f,c
  2596  0010F4  2A50               	incf	sprintf@f+1,f,c
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  2600  0010F6  0E00               	movlw	0
  2601  0010F8  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  2602  0010FA  0E00               	movlw	0
  2603  0010FC  6F72               	movwf	sprintf@prec& (0+255),b
  2604                           
  2605                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  2606  0010FE  D01C               	goto	i2l4414
  2607  001100                     i2l4410:
  2608                           
  2609                           ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  2610  001100  C072  F001         	movff	sprintf@prec,___wmul@multiplier
  2611  001104  C073  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  2612  001108  0E00               	movlw	0
  2613  00110A  6E04               	movwf	___wmul@multiplicand+1,c
  2614  00110C  0E0A               	movlw	10
  2615  00110E  6E03               	movwf	___wmul@multiplicand,c
  2616  001110  EC30  F01A         	call	___wmul	;wreg free
  2617  001114  C04F  FFF6         	movff	sprintf@f,tblptrl
  2618  001118  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2619  00111C                     	if	0	;tblptru may be non-zero
  2620  00111C                     	endif
  2621  00111C                     	if	0	;tblptru may be non-zero
  2622  00111C                     	endif
  2623  00111C  0008               	tblrd		*
  2624  00111E  50F5               	movf	tablat,w,c
  2625  001120  2601               	addwf	?___wmul,f,c
  2626  001122  0E00               	movlw	0
  2627  001124  2202               	addwfc	?___wmul+1,f,c
  2628  001126  0ED0               	movlw	208
  2629  001128  2401               	addwf	?___wmul,w,c
  2630  00112A  0100               	movlb	0	; () banked
  2631  00112C  6F72               	movwf	sprintf@prec& (0+255),b
  2632  00112E  0EFF               	movlw	255
  2633  001130  2002               	addwfc	?___wmul+1,w,c
  2634  001132  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  2635                           
  2636                           ; BSR set to: 0
  2637  001134  4A4F               	infsnz	sprintf@f,f,c
  2638  001136  2A50               	incf	sprintf@f+1,f,c
  2639  001138                     i2l4414:
  2640                           
  2641                           ; BSR set to: 0
  2642  001138  C04F  FFF6         	movff	sprintf@f,tblptrl
  2643  00113C  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2644  001140                     	if	0	;tblptru may be non-zero
  2645  001140                     	endif
  2646  001140                     	if	0	;tblptru may be non-zero
  2647  001140                     	endif
  2648  001140  0008               	tblrd		*
  2649  001142  50F5               	movf	tablat,w,c
  2650  001144  EC55  F01A         	call	_isdigit
  2651  001148  A0D8               	btfss	status,0,c
  2652  00114A  D009               	goto	i2l4424
  2653  00114C  D7D9               	goto	i2l4410
  2654  00114E                     i2l4416:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;doprnt.c: 645: prec = 0;
  2658  00114E  0E00               	movlw	0
  2659  001150  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  2660  001152  0E00               	movlw	0
  2661  001154  6F72               	movwf	sprintf@prec& (0+255),b
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;doprnt.c: 647: flag |= 0x1000;
  2665  001156  8967               	bsf	(sprintf@flag+1)& (0+255),4,b
  2666  001158  D002               	goto	i2l4424
  2667  00115A                     i2l4420:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;doprnt.c: 682: flag |= 0x400;
  2671  00115A  8567               	bsf	(sprintf@flag+1)& (0+255),2,b
  2672                           
  2673                           ;doprnt.c: 683: break;
  2674  00115C  D012               	goto	i2l4426
  2675  00115E                     i2l4424:
  2676  00115E  C04F  FFF6         	movff	sprintf@f,tblptrl
  2677  001162  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2678  001166  4A4F               	infsnz	sprintf@f,f,c
  2679  001168  2A50               	incf	sprintf@f+1,f,c
  2680  00116A                     	if	0	;tblptru may be non-zero
  2681  00116A                     	endif
  2682  00116A                     	if	0	;tblptru may be non-zero
  2683  00116A                     	endif
  2684  00116A  0008               	tblrd		*
  2685  00116C  CFF5 F078          	movff	tablat,sprintf@c
  2686  001170  0100               	movlb	0	; () banked
  2687  001172  5178               	movf	sprintf@c& (0+255),w,b
  2688                           
  2689                           ; Switch size 1, requested type "simple"
  2690                           ; Number of cases is 2, Range of values is 0 to 102
  2691                           ; switch strategies available:
  2692                           ; Name         Instructions Cycles
  2693                           ; simple_byte            7     4 (average)
  2694                           ;	Chosen strategy is simple_byte
  2695  001174  0A00               	xorlw	0	; case 0
  2696  001176  B4D8               	btfsc	status,2,c
  2697  001178  D355               	goto	i2u423_40
  2698  00117A  0A66               	xorlw	102	; case 102
  2699  00117C  B4D8               	btfsc	status,2,c
  2700  00117E  D7ED               	goto	i2l4420
  2701  001180  D345               	goto	i2l4594
  2702  001182                     i2l4426:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;doprnt.c: 844: if(flag & (0x700)) {
  2706  001182  0E07               	movlw	7
  2707  001184  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  2708  001186  B4D8               	btfsc	status,2,c
  2709  001188  D30C               	goto	i2l4574
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;doprnt.c: 846: if(flag & 0x1000)
  2713  00118A  A967               	btfss	(sprintf@flag+1)& (0+255),4,b
  2714  00118C  D004               	goto	i2l4432
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;doprnt.c: 848: prec = 6;
  2718  00118E  0E00               	movlw	0
  2719  001190  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  2720  001192  0E06               	movlw	6
  2721  001194  6F72               	movwf	sprintf@prec& (0+255),b
  2722  001196                     i2l4432:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;doprnt.c: 849: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2726  001196  C064  FFD9         	movff	sprintf@ap,fsr2l
  2727  00119A  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  2728  00119E  CFDE F074          	movff	postinc2,sprintf@fval
  2729  0011A2  CFDE F075          	movff	postinc2,sprintf@fval+1
  2730  0011A6  CFDE F076          	movff	postinc2,sprintf@fval+2
  2731  0011AA  CFDE F077          	movff	postinc2,sprintf@fval+3
  2732                           
  2733                           ; BSR set to: 0
  2734  0011AE  0E04               	movlw	4
  2735  0011B0  2764               	addwf	sprintf@ap& (0+255),f,b
  2736  0011B2  0E00               	movlw	0
  2737  0011B4  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;doprnt.c: 850: if(fval < 0.0) {
  2741  0011B6  AF77               	btfss	(sprintf@fval+3)& (0+255),7,b
  2742  0011B8  D015               	goto	i2l4442
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;doprnt.c: 851: fval = -fval;
  2746  0011BA  C074  F001         	movff	sprintf@fval,___flneg@f1
  2747  0011BE  C075  F002         	movff	sprintf@fval+1,___flneg@f1+1
  2748  0011C2  C076  F003         	movff	sprintf@fval+2,___flneg@f1+2
  2749  0011C6  C077  F004         	movff	sprintf@fval+3,___flneg@f1+3
  2750  0011CA  EC03  F01A         	call	___flneg	;wreg free
  2751  0011CE  C001  F074         	movff	?___flneg,sprintf@fval
  2752  0011D2  C002  F075         	movff	?___flneg+1,sprintf@fval+1
  2753  0011D6  C003  F076         	movff	?___flneg+2,sprintf@fval+2
  2754  0011DA  C004  F077         	movff	?___flneg+3,sprintf@fval+3
  2755                           
  2756                           ;doprnt.c: 852: flag |= 0x03;
  2757  0011DE  0E03               	movlw	3
  2758  0011E0  0100               	movlb	0	; () banked
  2759  0011E2  1366               	iorwf	sprintf@flag& (0+255),f,b
  2760  0011E4                     i2l4442:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;doprnt.c: 853: };doprnt.c: 854: eexp = 0;
  2764  0011E4  0E00               	movlw	0
  2765  0011E6  6F6D               	movwf	(sprintf@eexp+1)& (0+255),b
  2766  0011E8  0E00               	movlw	0
  2767  0011EA  6F6C               	movwf	sprintf@eexp& (0+255),b
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;doprnt.c: 855: if( fval!=0) {
  2771  0011EC  C074  F001         	movff	sprintf@fval,___fleq@ff1
  2772  0011F0  C075  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  2773  0011F4  C076  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  2774  0011F8  C077  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  2775  0011FC  0E00               	movlw	0
  2776  0011FE  6E05               	movwf	___fleq@ff2,c
  2777  001200  0E00               	movlw	0
  2778  001202  6E06               	movwf	___fleq@ff2+1,c
  2779  001204  0E00               	movlw	0
  2780  001206  6E07               	movwf	___fleq@ff2+2,c
  2781  001208  0E00               	movlw	0
  2782  00120A  6E08               	movwf	___fleq@ff2+3,c
  2783  00120C  EC2D  F017         	call	___fleq	;wreg free
  2784  001210  B0D8               	btfsc	status,0,c
  2785  001212  D083               	goto	i2l4470
  2786                           
  2787                           ;doprnt.c: 856: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  2788  001214  0100               	movlb	0	; () banked
  2789  001216  3576               	rlcf	(sprintf@fval+2)& (0+255),w,b
  2790  001218  3577               	rlcf	(sprintf@fval+3)& (0+255),w,b
  2791  00121A  0F82               	addlw	130
  2792  00121C  6F6C               	movwf	sprintf@eexp& (0+255),b
  2793  00121E  6B6D               	clrf	(sprintf@eexp+1)& (0+255),b
  2794  001220  0EFF               	movlw	255
  2795  001222  236D               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;doprnt.c: 857: eexp--;
  2799  001224  076C               	decf	sprintf@eexp& (0+255),f,b
  2800  001226  A0D8               	btfss	status,0,c
  2801  001228  076D               	decf	(sprintf@eexp+1)& (0+255),f,b
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;doprnt.c: 858: eexp *= 3;
  2805  00122A  C06C  F001         	movff	sprintf@eexp,___wmul@multiplier
  2806  00122E  C06D  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  2807  001232  0E00               	movlw	0
  2808  001234  6E04               	movwf	___wmul@multiplicand+1,c
  2809  001236  0E03               	movlw	3
  2810  001238  6E03               	movwf	___wmul@multiplicand,c
  2811  00123A  EC30  F01A         	call	___wmul	;wreg free
  2812  00123E  C001  F06C         	movff	?___wmul,sprintf@eexp
  2813  001242  C002  F06D         	movff	?___wmul+1,sprintf@eexp+1
  2814                           
  2815                           ;doprnt.c: 859: eexp /= 10;
  2816  001246  C06C  F007         	movff	sprintf@eexp,___awdiv@dividend
  2817  00124A  C06D  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  2818  00124E  0E00               	movlw	0
  2819  001250  6E0A               	movwf	___awdiv@divisor+1,c
  2820  001252  0E0A               	movlw	10
  2821  001254  6E09               	movwf	___awdiv@divisor,c
  2822  001256  ECB4  F017         	call	___awdiv	;wreg free
  2823  00125A  C007  F06C         	movff	?___awdiv,sprintf@eexp
  2824  00125E  C008  F06D         	movff	?___awdiv+1,sprintf@eexp+1
  2825                           
  2826                           ;doprnt.c: 860: if(eexp < 0)
  2827  001262  0100               	movlb	0	; () banked
  2828  001264  AF6D               	btfss	(sprintf@eexp+1)& (0+255),7,b
  2829  001266  D003               	goto	i2l4458
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;doprnt.c: 861: eexp--;
  2833  001268  076C               	decf	sprintf@eexp& (0+255),f,b
  2834  00126A  A0D8               	btfss	status,0,c
  2835  00126C  076D               	decf	(sprintf@eexp+1)& (0+255),f,b
  2836  00126E                     i2l4458:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;doprnt.c: 865: tmpval.integ = scale(-eexp);
  2840  00126E  516C               	movf	sprintf@eexp& (0+255),w,b
  2841  001270  0800               	sublw	0
  2842  001272  EC19  F00C         	call	_scale
  2843  001276  C028  F06E         	movff	?_scale,sprintf@tmpval
  2844  00127A  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  2845  00127E  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  2846  001282  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  2847                           
  2848                           ;doprnt.c: 866: tmpval.integ *= fval;
  2849  001286  C06E  F00F         	movff	sprintf@tmpval,___flmul@b
  2850  00128A  C06F  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  2851  00128E  C070  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  2852  001292  C071  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  2853  001296  C074  F013         	movff	sprintf@fval,___flmul@a
  2854  00129A  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  2855  00129E  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  2856  0012A2  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  2857  0012A6  EC01  F00E         	call	___flmul	;wreg free
  2858  0012AA  C00F  F06E         	movff	?___flmul,sprintf@tmpval
  2859  0012AE  C010  F06F         	movff	?___flmul+1,sprintf@tmpval+1
  2860  0012B2  C011  F070         	movff	?___flmul+2,sprintf@tmpval+2
  2861  0012B6  C012  F071         	movff	?___flmul+3,sprintf@tmpval+3
  2862                           
  2863                           ;doprnt.c: 867: if(tmpval.integ < 1.0)
  2864  0012BA  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  2865  0012BE  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2866  0012C2  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2867  0012C6  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2868  0012CA  0E00               	movlw	0
  2869  0012CC  6E05               	movwf	___flge@ff2,c
  2870  0012CE  0E00               	movlw	0
  2871  0012D0  6E06               	movwf	___flge@ff2+1,c
  2872  0012D2  0E80               	movlw	128
  2873  0012D4  6E07               	movwf	___flge@ff2+2,c
  2874  0012D6  0E3F               	movlw	63
  2875  0012D8  6E08               	movwf	___flge@ff2+3,c
  2876  0012DA  EC68  F016         	call	___flge	;wreg free
  2877  0012DE  B0D8               	btfsc	status,0,c
  2878  0012E0  D005               	goto	i2l4466
  2879                           
  2880                           ;doprnt.c: 868: eexp--;
  2881  0012E2  0100               	movlb	0	; () banked
  2882  0012E4  076C               	decf	sprintf@eexp& (0+255),f,b
  2883  0012E6  A0D8               	btfss	status,0,c
  2884  0012E8  076D               	decf	(sprintf@eexp+1)& (0+255),f,b
  2885  0012EA  D017               	goto	i2l4470
  2886  0012EC                     i2l4466:
  2887                           
  2888                           ;doprnt.c: 869: else if(tmpval.integ >= 10.0)
  2889  0012EC  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  2890  0012F0  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2891  0012F4  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2892  0012F8  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2893  0012FC  0E00               	movlw	0
  2894  0012FE  6E05               	movwf	___flge@ff2,c
  2895  001300  0E00               	movlw	0
  2896  001302  6E06               	movwf	___flge@ff2+1,c
  2897  001304  0E20               	movlw	32
  2898  001306  6E07               	movwf	___flge@ff2+2,c
  2899  001308  0E41               	movlw	65
  2900  00130A  6E08               	movwf	___flge@ff2+3,c
  2901  00130C  EC68  F016         	call	___flge	;wreg free
  2902  001310  A0D8               	btfss	status,0,c
  2903  001312  D003               	goto	i2l4470
  2904                           
  2905                           ;doprnt.c: 870: eexp++;
  2906  001314  0100               	movlb	0	; () banked
  2907  001316  4B6C               	infsnz	sprintf@eexp& (0+255),f,b
  2908  001318  2B6D               	incf	(sprintf@eexp+1)& (0+255),f,b
  2909  00131A                     i2l4470:
  2910                           
  2911                           ;doprnt.c: 871: };doprnt.c: 1131: if(prec <= 12)
  2912  00131A  0100               	movlb	0	; () banked
  2913  00131C  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2914  00131E  D006               	goto	i2u403_40
  2915  001320  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2916  001322  E121               	bnz	i2l4474
  2917  001324  0E0D               	movlw	13
  2918  001326  5D72               	subwf	sprintf@prec& (0+255),w,b
  2919  001328  B0D8               	btfsc	status,0,c
  2920  00132A  D01D               	goto	i2l4474
  2921  00132C                     i2u403_40:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;doprnt.c: 1132: fval += fround((unsigned int)prec);
  2925  00132C  C074  F035         	movff	sprintf@fval,___fladd@b
  2926  001330  C075  F036         	movff	sprintf@fval+1,___fladd@b+1
  2927  001334  C076  F037         	movff	sprintf@fval+2,___fladd@b+2
  2928  001338  C077  F038         	movff	sprintf@fval+3,___fladd@b+3
  2929  00133C  5172               	movf	sprintf@prec& (0+255),w,b
  2930  00133E  EC30  F011         	call	_fround
  2931  001342  C028  F039         	movff	?_fround,___fladd@a
  2932  001346  C029  F03A         	movff	?_fround+1,___fladd@a+1
  2933  00134A  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  2934  00134E  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  2935  001352  ECAA  F00F         	call	___fladd	;wreg free
  2936  001356  C035  F074         	movff	?___fladd,sprintf@fval
  2937  00135A  C036  F075         	movff	?___fladd+1,sprintf@fval+1
  2938  00135E  C037  F076         	movff	?___fladd+2,sprintf@fval+2
  2939  001362  C038  F077         	movff	?___fladd+3,sprintf@fval+3
  2940  001366                     i2l4474:
  2941                           
  2942                           ;doprnt.c: 1135: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2943  001366  0100               	movlb	0	; () banked
  2944  001368  BF6D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2945  00136A  D006               	goto	i2u404_40
  2946  00136C  516D               	movf	(sprintf@eexp+1)& (0+255),w,b
  2947  00136E  E131               	bnz	i2l4482
  2948  001370  0E0A               	movlw	10
  2949  001372  5D6C               	subwf	sprintf@eexp& (0+255),w,b
  2950  001374  B0D8               	btfsc	status,0,c
  2951  001376  D02D               	goto	i2u407_40
  2952  001378                     i2u404_40:
  2953                           
  2954                           ; BSR set to: 0
  2955  001378  C074  F001         	movff	sprintf@fval,___fleq@ff1
  2956  00137C  C075  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  2957  001380  C076  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  2958  001384  C077  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  2959  001388  0E00               	movlw	0
  2960  00138A  6E05               	movwf	___fleq@ff2,c
  2961  00138C  0E00               	movlw	0
  2962  00138E  6E06               	movwf	___fleq@ff2+1,c
  2963  001390  0E00               	movlw	0
  2964  001392  6E07               	movwf	___fleq@ff2+2,c
  2965  001394  0E00               	movlw	0
  2966  001396  6E08               	movwf	___fleq@ff2+3,c
  2967  001398  EC2D  F017         	call	___fleq	;wreg free
  2968  00139C  B0D8               	btfsc	status,0,c
  2969  00139E  D064               	goto	i2l4496
  2970  0013A0  C074  F028         	movff	sprintf@fval,___fltol@f1
  2971  0013A4  C075  F029         	movff	sprintf@fval+1,___fltol@f1+1
  2972  0013A8  C076  F02A         	movff	sprintf@fval+2,___fltol@f1+2
  2973  0013AC  C077  F02B         	movff	sprintf@fval+3,___fltol@f1+3
  2974  0013B0  ECD0  F016         	call	___fltol	;wreg free
  2975  0013B4  5028               	movf	?___fltol,w,c
  2976  0013B6  1029               	iorwf	?___fltol+1,w,c
  2977  0013B8  102A               	iorwf	?___fltol+2,w,c
  2978  0013BA  102B               	iorwf	?___fltol+3,w,c
  2979  0013BC  A4D8               	btfss	status,2,c
  2980  0013BE  D054               	goto	i2l4496
  2981  0013C0  0100               	movlb	0	; () banked
  2982  0013C2  BF6D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2983  0013C4  D051               	goto	i2l4496
  2984  0013C6  516D               	movf	(sprintf@eexp+1)& (0+255),w,b
  2985  0013C8  E104               	bnz	i2u407_40
  2986  0013CA  0E02               	movlw	2
  2987  0013CC  5D6C               	subwf	sprintf@eexp& (0+255),w,b
  2988  0013CE  A0D8               	btfss	status,0,c
  2989  0013D0  D04B               	goto	i2l4496
  2990  0013D2                     i2u407_40:
  2991  0013D2                     i2l4482:
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;doprnt.c: 1139: if(tmpval.integ < 4.294967296){
  2995  0013D2  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  2996  0013D6  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  2997  0013DA  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  2998  0013DE  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  2999  0013E2  0E5F               	movlw	95
  3000  0013E4  6E05               	movwf	___flge@ff2,c
  3001  0013E6  0E70               	movlw	112
  3002  0013E8  6E06               	movwf	___flge@ff2+1,c
  3003  0013EA  0E89               	movlw	137
  3004  0013EC  6E07               	movwf	___flge@ff2+2,c
  3005  0013EE  0E40               	movlw	64
  3006  0013F0  6E08               	movwf	___flge@ff2+3,c
  3007  0013F2  EC68  F016         	call	___flge	;wreg free
  3008  0013F6  B0D8               	btfsc	status,0,c
  3009  0013F8  D003               	goto	i2l4486
  3010                           
  3011                           ;doprnt.c: 1140: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3012  0013FA  0100               	movlb	0	; () banked
  3013  0013FC  0EF7               	movlw	247
  3014  0013FE  D002               	goto	L8
  3015  001400                     i2l4486:
  3016                           
  3017                           ;doprnt.c: 1142: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3018  001400  0100               	movlb	0	; () banked
  3019  001402  0EF8               	movlw	248
  3020  001404                     L8:
  3021  001404  276C               	addwf	sprintf@eexp& (0+255),f,b
  3022  001406  0EFF               	movlw	255
  3023  001408  236D               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;doprnt.c: 1145: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3027  00140A  516C               	movf	sprintf@eexp& (0+255),w,b
  3028  00140C  EC19  F00C         	call	_scale
  3029  001410  C028  F06E         	movff	?_scale,sprintf@tmpval
  3030  001414  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  3031  001418  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  3032  00141C  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  3033  001420  C074  F001         	movff	sprintf@fval,__div_to_l_@f1
  3034  001424  C075  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3035  001428  C076  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3036  00142C  C077  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3037  001430  C06E  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  3038  001434  C06F  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3039  001438  C070  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3040  00143C  C071  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3041  001440  EC76  F015         	call	__div_to_l_	;wreg free
  3042  001444  C001  F068         	movff	?__div_to_l_,sprintf@val
  3043  001448  C002  F069         	movff	?__div_to_l_+1,sprintf@val+1
  3044  00144C  C003  F06A         	movff	?__div_to_l_+2,sprintf@val+2
  3045  001450  C004  F06B         	movff	?__div_to_l_+3,sprintf@val+3
  3046                           
  3047                           ;doprnt.c: 1148: fval = 0.0;
  3048  001454  0E00               	movlw	0
  3049  001456  0100               	movlb	0	; () banked
  3050  001458  6F74               	movwf	sprintf@fval& (0+255),b
  3051  00145A  0E00               	movlw	0
  3052  00145C  6F75               	movwf	(sprintf@fval+1)& (0+255),b
  3053  00145E  0E00               	movlw	0
  3054  001460  6F76               	movwf	(sprintf@fval+2)& (0+255),b
  3055  001462  0E00               	movlw	0
  3056  001464  6F77               	movwf	(sprintf@fval+3)& (0+255),b
  3057                           
  3058                           ;doprnt.c: 1149: } else {
  3059  001466  D03C               	goto	i2l4500
  3060  001468                     i2l4496:
  3061                           
  3062                           ;doprnt.c: 1150: val = (unsigned long)fval;
  3063  001468  C074  F028         	movff	sprintf@fval,___fltol@f1
  3064  00146C  C075  F029         	movff	sprintf@fval+1,___fltol@f1+1
  3065  001470  C076  F02A         	movff	sprintf@fval+2,___fltol@f1+2
  3066  001474  C077  F02B         	movff	sprintf@fval+3,___fltol@f1+3
  3067  001478  ECD0  F016         	call	___fltol	;wreg free
  3068  00147C  C028  F068         	movff	?___fltol,sprintf@val
  3069  001480  C029  F069         	movff	?___fltol+1,sprintf@val+1
  3070  001484  C02A  F06A         	movff	?___fltol+2,sprintf@val+2
  3071  001488  C02B  F06B         	movff	?___fltol+3,sprintf@val+3
  3072                           
  3073                           ;doprnt.c: 1151: fval -= (double)val;
  3074  00148C  C074  F045         	movff	sprintf@fval,___flsub@b
  3075  001490  C075  F046         	movff	sprintf@fval+1,___flsub@b+1
  3076  001494  C076  F047         	movff	sprintf@fval+2,___flsub@b+2
  3077  001498  C077  F048         	movff	sprintf@fval+3,___flsub@b+3
  3078  00149C  C068  F001         	movff	sprintf@val,___xxtofl@val
  3079  0014A0  C069  F002         	movff	sprintf@val+1,___xxtofl@val+1
  3080  0014A4  C06A  F003         	movff	sprintf@val+2,___xxtofl@val+2
  3081  0014A8  C06B  F004         	movff	sprintf@val+3,___xxtofl@val+3
  3082  0014AC  0E00               	movlw	0
  3083  0014AE  ECB9  F013         	call	___xxtofl
  3084  0014B2  C001  F049         	movff	?___xxtofl,___flsub@a
  3085  0014B6  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  3086  0014BA  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  3087  0014BE  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  3088  0014C2  EC72  F019         	call	___flsub	;wreg free
  3089  0014C6  C045  F074         	movff	?___flsub,sprintf@fval
  3090  0014CA  C046  F075         	movff	?___flsub+1,sprintf@fval+1
  3091  0014CE  C047  F076         	movff	?___flsub+2,sprintf@fval+2
  3092  0014D2  C048  F077         	movff	?___flsub+3,sprintf@fval+3
  3093                           
  3094                           ;doprnt.c: 1152: eexp = 0;
  3095  0014D6  0E00               	movlw	0
  3096  0014D8  0100               	movlb	0	; () banked
  3097  0014DA  6F6D               	movwf	(sprintf@eexp+1)& (0+255),b
  3098  0014DC  0E00               	movlw	0
  3099  0014DE  6F6C               	movwf	sprintf@eexp& (0+255),b
  3100  0014E0                     i2l4500:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;doprnt.c: 1153: };doprnt.c: 1155: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  3104  0014E0  0E01               	movlw	1
  3105  0014E2  6F78               	movwf	sprintf@c& (0+255),b
  3106  0014E4                     i2l4506:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;doprnt.c: 1156: if(val < dpowers[c])
  3110  0014E4  5178               	movf	sprintf@c& (0+255),w,b
  3111  0014E6  0D04               	mullw	4
  3112  0014E8  0E69               	movlw	low _dpowers
  3113  0014EA  24F3               	addwf	prodl,w,c
  3114  0014EC  6EF6               	movwf	tblptrl,c
  3115  0014EE  0E10               	movlw	high _dpowers
  3116  0014F0  20F4               	addwfc	prodh,w,c
  3117  0014F2  6EF7               	movwf	tblptrh,c
  3118  0014F4                     	if	0	;There are less than 3 active tblptr bytes
  3119  0014F4                     	endif
  3120  0014F4  0009               	tblrd		*+
  3121  0014F6  50F5               	movf	tablat,w,c
  3122  0014F8  5D68               	subwf	sprintf@val& (0+255),w,b
  3123  0014FA  0009               	tblrd		*+
  3124  0014FC  50F5               	movf	tablat,w,c
  3125  0014FE  5969               	subwfb	(sprintf@val+1)& (0+255),w,b
  3126  001500  0009               	tblrd		*+
  3127  001502  50F5               	movf	tablat,w,c
  3128  001504  596A               	subwfb	(sprintf@val+2)& (0+255),w,b
  3129  001506  0009               	tblrd		*+
  3130  001508  50F5               	movf	tablat,w,c
  3131  00150A  596B               	subwfb	(sprintf@val+3)& (0+255),w,b
  3132  00150C  A0D8               	btfss	status,0,c
  3133  00150E  D005               	goto	i2u410_40
  3134                           
  3135                           ; BSR set to: 0
  3136  001510  2B78               	incf	sprintf@c& (0+255),f,b
  3137                           
  3138                           ; BSR set to: 0
  3139  001512  0E0A               	movlw	10
  3140  001514  1978               	xorwf	sprintf@c& (0+255),w,b
  3141  001516  A4D8               	btfss	status,2,c
  3142  001518  D7E5               	goto	i2l4506
  3143  00151A                     i2u410_40:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;doprnt.c: 1194: {;doprnt.c: 1207: if(flag & 0x03)
  3147  00151A  0E03               	movlw	3
  3148  00151C  1566               	andwf	sprintf@flag& (0+255),w,b
  3149  00151E  6E55               	movwf	??_sprintf& (0+255),c
  3150  001520  0E00               	movlw	0
  3151  001522  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  3152  001524  6E56               	movwf	(??_sprintf+1)& (0+255),c
  3153  001526  5055               	movf	??_sprintf,w,c
  3154  001528  1056               	iorwf	??_sprintf+1,w,c
  3155  00152A  B4D8               	btfsc	status,2,c
  3156  00152C  D051               	goto	i2l4528
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;doprnt.c: 1209: ((*sp++ = ('-')));
  3160  00152E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3161  001532  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3162  001536  0E2D               	movlw	45
  3163  001538  6EDF               	movwf	indf2,c
  3164                           
  3165                           ; BSR set to: 0
  3166  00153A  4A4D               	infsnz	sprintf@sp,f,c
  3167  00153C  2A4E               	incf	sprintf@sp+1,f,c
  3168  00153E  D048               	goto	i2l4528
  3169  001540                     i2l4520:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;doprnt.c: 1219: {;doprnt.c: 1220: tmpval.vd = val/dpowers[c];
  3173  001540  C068  F001         	movff	sprintf@val,___lldiv@dividend
  3174  001544  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  3175  001548  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  3176  00154C  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  3177  001550  5178               	movf	sprintf@c& (0+255),w,b
  3178  001552  0D04               	mullw	4
  3179  001554  0E69               	movlw	low _dpowers
  3180  001556  24F3               	addwf	prodl,w,c
  3181  001558  6EF6               	movwf	tblptrl,c
  3182  00155A  0E10               	movlw	high _dpowers
  3183  00155C  20F4               	addwfc	prodh,w,c
  3184  00155E  6EF7               	movwf	tblptrh,c
  3185  001560                     	if	0	;There are less than 3 active tblptr bytes
  3186  001560                     	endif
  3187  001560  0009               	tblrd		*+
  3188  001562  CFF5 F005          	movff	tablat,___lldiv@divisor
  3189  001566  0009               	tblrd		*+
  3190  001568  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3191  00156C  0009               	tblrd		*+
  3192  00156E  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3193  001572  000A               	tblrd		*-
  3194  001574  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3195  001578  ECF6  F017         	call	___lldiv	;wreg free
  3196  00157C  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  3197  001580  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  3198  001584  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  3199  001588  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  3200                           
  3201                           ;doprnt.c: 1221: tmpval.vd %= 10;
  3202  00158C  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  3203  001590  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3204  001594  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3205  001598  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3206  00159C  0E0A               	movlw	10
  3207  00159E  6E05               	movwf	___llmod@divisor,c
  3208  0015A0  0E00               	movlw	0
  3209  0015A2  6E06               	movwf	___llmod@divisor+1,c
  3210  0015A4  0E00               	movlw	0
  3211  0015A6  6E07               	movwf	___llmod@divisor+2,c
  3212  0015A8  0E00               	movlw	0
  3213  0015AA  6E08               	movwf	___llmod@divisor+3,c
  3214  0015AC  ECE8  F018         	call	___llmod	;wreg free
  3215  0015B0  C001  F06E         	movff	?___llmod,sprintf@tmpval
  3216  0015B4  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  3217  0015B8  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  3218  0015BC  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  3219                           
  3220                           ;doprnt.c: 1222: ((*sp++ = ('0' + tmpval.vd)));
  3221  0015C0  0100               	movlb	0	; () banked
  3222  0015C2  516E               	movf	sprintf@tmpval& (0+255),w,b
  3223  0015C4  0F30               	addlw	48
  3224  0015C6  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3225  0015CA  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3226  0015CE  D7B4               	goto	L9
  3227  0015D0                     i2l4528:
  3228                           
  3229                           ; BSR set to: 0
  3230  0015D0  0778               	decf	sprintf@c& (0+255),f,b
  3231  0015D2  2978               	incf	sprintf@c& (0+255),w,b
  3232  0015D4  B4D8               	btfsc	status,2,c
  3233  0015D6  D00C               	goto	i2l4536
  3234  0015D8  D7B3               	goto	i2l4520
  3235  0015DA                     i2l4530:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;doprnt.c: 1227: ((*sp++ = ('0')));
  3239  0015DA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3240  0015DE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3241  0015E2  0E30               	movlw	48
  3242  0015E4  6EDF               	movwf	indf2,c
  3243                           
  3244                           ; BSR set to: 0
  3245  0015E6  4A4D               	infsnz	sprintf@sp,f,c
  3246  0015E8  2A4E               	incf	sprintf@sp+1,f,c
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;doprnt.c: 1228: eexp--;
  3250  0015EA  076C               	decf	sprintf@eexp& (0+255),f,b
  3251  0015EC  A0D8               	btfss	status,0,c
  3252  0015EE  076D               	decf	(sprintf@eexp+1)& (0+255),f,b
  3253  0015F0                     i2l4536:
  3254                           
  3255                           ; BSR set to: 0
  3256  0015F0  BF6D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  3257  0015F2  D005               	goto	i2u413_40
  3258  0015F4  516D               	movf	(sprintf@eexp+1)& (0+255),w,b
  3259  0015F6  E1F1               	bnz	i2l4530
  3260  0015F8  056C               	decf	sprintf@eexp& (0+255),w,b
  3261  0015FA  B0D8               	btfsc	status,0,c
  3262  0015FC  D7EE               	goto	i2l4530
  3263  0015FE                     i2u413_40:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;doprnt.c: 1229: };doprnt.c: 1230: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  3267  0015FE  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3268  001600  D009               	goto	i2l510
  3269  001602  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  3270  001604  E104               	bnz	i2u414_40
  3271  001606  0E09               	movlw	9
  3272  001608  5D72               	subwf	sprintf@prec& (0+255),w,b
  3273  00160A  A0D8               	btfss	status,0,c
  3274  00160C  D003               	goto	i2l510
  3275  00160E                     i2u414_40:
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;doprnt.c: 1231: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3279  00160E  0E08               	movlw	8
  3280  001610  6F78               	movwf	sprintf@c& (0+255),b
  3281  001612  D002               	goto	i2l4542
  3282  001614                     i2l510:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;doprnt.c: 1232: else;doprnt.c: 1233: c = (char)prec;
  3286  001614  C072  F078         	movff	sprintf@prec,sprintf@c
  3287  001618                     i2l4542:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;doprnt.c: 1234: prec -= (int)c;
  3291  001618  5178               	movf	sprintf@c& (0+255),w,b
  3292  00161A  5F72               	subwf	sprintf@prec& (0+255),f,b
  3293  00161C  0E00               	movlw	0
  3294  00161E  5B73               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;doprnt.c: 1238: if(c)
  3298  001620  5178               	movf	sprintf@c& (0+255),w,b
  3299  001622  B4D8               	btfsc	status,2,c
  3300  001624  D008               	goto	i2l4550
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;doprnt.c: 1240: ((*sp++ = ('.')));
  3304  001626  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3305  00162A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3306  00162E  0E2E               	movlw	46
  3307  001630  6EDF               	movwf	indf2,c
  3308                           
  3309                           ; BSR set to: 0
  3310  001632  4A4D               	infsnz	sprintf@sp,f,c
  3311  001634  2A4E               	incf	sprintf@sp+1,f,c
  3312  001636                     i2l4550:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  3316  001636  5178               	movf	sprintf@c& (0+255),w,b
  3317  001638  EC19  F00C         	call	_scale
  3318  00163C  C028  F060         	movff	?_scale,_sprintf$2198
  3319  001640  C029  F061         	movff	?_scale+1,_sprintf$2198+1
  3320  001644  C02A  F062         	movff	?_scale+2,_sprintf$2198+2
  3321  001648  C02B  F063         	movff	?_scale+3,_sprintf$2198+3
  3322                           
  3323                           ;doprnt.c: 1246: val = (unsigned long)(fval * scale((signed char)c));
  3324  00164C  C074  F013         	movff	sprintf@fval,___flmul@a
  3325  001650  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  3326  001654  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  3327  001658  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  3328  00165C  C060  F00F         	movff	_sprintf$2198,___flmul@b
  3329  001660  C061  F010         	movff	_sprintf$2198+1,___flmul@b+1
  3330  001664  C062  F011         	movff	_sprintf$2198+2,___flmul@b+2
  3331  001668  C063  F012         	movff	_sprintf$2198+3,___flmul@b+3
  3332  00166C  EC01  F00E         	call	___flmul	;wreg free
  3333  001670  C00F  F028         	movff	?___flmul,___fltol@f1
  3334  001674  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  3335  001678  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  3336  00167C  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  3337  001680  ECD0  F016         	call	___fltol	;wreg free
  3338  001684  C028  F068         	movff	?___fltol,sprintf@val
  3339  001688  C029  F069         	movff	?___fltol+1,sprintf@val+1
  3340  00168C  C02A  F06A         	movff	?___fltol+2,sprintf@val+2
  3341  001690  C02B  F06B         	movff	?___fltol+3,sprintf@val+3
  3342                           
  3343                           ;doprnt.c: 1247: while(c--) {
  3344  001694  D070               	goto	i2l4564
  3345  001696                     i2l4554:
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;doprnt.c: 1248: tmpval.vd = val/dpowers[c];
  3349  001696  C068  F001         	movff	sprintf@val,___lldiv@dividend
  3350  00169A  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  3351  00169E  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  3352  0016A2  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  3353  0016A6  5178               	movf	sprintf@c& (0+255),w,b
  3354  0016A8  0D04               	mullw	4
  3355  0016AA  0E69               	movlw	low _dpowers
  3356  0016AC  24F3               	addwf	prodl,w,c
  3357  0016AE  6EF6               	movwf	tblptrl,c
  3358  0016B0  0E10               	movlw	high _dpowers
  3359  0016B2  20F4               	addwfc	prodh,w,c
  3360  0016B4  6EF7               	movwf	tblptrh,c
  3361  0016B6                     	if	0	;There are less than 3 active tblptr bytes
  3362  0016B6                     	endif
  3363  0016B6  0009               	tblrd		*+
  3364  0016B8  CFF5 F005          	movff	tablat,___lldiv@divisor
  3365  0016BC  0009               	tblrd		*+
  3366  0016BE  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3367  0016C2  0009               	tblrd		*+
  3368  0016C4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3369  0016C8  000A               	tblrd		*-
  3370  0016CA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3371  0016CE  ECF6  F017         	call	___lldiv	;wreg free
  3372  0016D2  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  3373  0016D6  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  3374  0016DA  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  3375  0016DE  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  3376                           
  3377                           ;doprnt.c: 1249: tmpval.vd %= 10;
  3378  0016E2  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  3379  0016E6  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3380  0016EA  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3381  0016EE  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3382  0016F2  0E0A               	movlw	10
  3383  0016F4  6E05               	movwf	___llmod@divisor,c
  3384  0016F6  0E00               	movlw	0
  3385  0016F8  6E06               	movwf	___llmod@divisor+1,c
  3386  0016FA  0E00               	movlw	0
  3387  0016FC  6E07               	movwf	___llmod@divisor+2,c
  3388  0016FE  0E00               	movlw	0
  3389  001700  6E08               	movwf	___llmod@divisor+3,c
  3390  001702  ECE8  F018         	call	___llmod	;wreg free
  3391  001706  C001  F06E         	movff	?___llmod,sprintf@tmpval
  3392  00170A  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  3393  00170E  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  3394  001712  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  3395                           
  3396                           ;doprnt.c: 1250: ((*sp++ = ('0' + tmpval.vd)));
  3397  001716  0100               	movlb	0	; () banked
  3398  001718  516E               	movf	sprintf@tmpval& (0+255),w,b
  3399  00171A  0F30               	addlw	48
  3400  00171C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3401  001720  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3402  001724  6EDF               	movwf	indf2,c
  3403                           
  3404                           ; BSR set to: 0
  3405  001726  4A4D               	infsnz	sprintf@sp,f,c
  3406  001728  2A4E               	incf	sprintf@sp+1,f,c
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;doprnt.c: 1251: val %= dpowers[c];
  3410  00172A  C068  F001         	movff	sprintf@val,___llmod@dividend
  3411  00172E  C069  F002         	movff	sprintf@val+1,___llmod@dividend+1
  3412  001732  C06A  F003         	movff	sprintf@val+2,___llmod@dividend+2
  3413  001736  C06B  F004         	movff	sprintf@val+3,___llmod@dividend+3
  3414  00173A  5178               	movf	sprintf@c& (0+255),w,b
  3415  00173C  0D04               	mullw	4
  3416  00173E  0E69               	movlw	low _dpowers
  3417  001740  24F3               	addwf	prodl,w,c
  3418  001742  6EF6               	movwf	tblptrl,c
  3419  001744  0E10               	movlw	high _dpowers
  3420  001746  20F4               	addwfc	prodh,w,c
  3421  001748  6EF7               	movwf	tblptrh,c
  3422  00174A                     	if	0	;There are less than 3 active tblptr bytes
  3423  00174A                     	endif
  3424  00174A  0009               	tblrd		*+
  3425  00174C  CFF5 F005          	movff	tablat,___llmod@divisor
  3426  001750  0009               	tblrd		*+
  3427  001752  CFF5 F006          	movff	tablat,___llmod@divisor+1
  3428  001756  0009               	tblrd		*+
  3429  001758  CFF5 F007          	movff	tablat,___llmod@divisor+2
  3430  00175C  000A               	tblrd		*-
  3431  00175E  CFF5 F008          	movff	tablat,___llmod@divisor+3
  3432  001762  ECE8  F018         	call	___llmod	;wreg free
  3433  001766  C001  F068         	movff	?___llmod,sprintf@val
  3434  00176A  C002  F069         	movff	?___llmod+1,sprintf@val+1
  3435  00176E  C003  F06A         	movff	?___llmod+2,sprintf@val+2
  3436  001772  C004  F06B         	movff	?___llmod+3,sprintf@val+3
  3437  001776                     i2l4564:
  3438  001776  0100               	movlb	0	; () banked
  3439  001778  0778               	decf	sprintf@c& (0+255),f,b
  3440  00177A  2978               	incf	sprintf@c& (0+255),w,b
  3441  00177C  B4D8               	btfsc	status,2,c
  3442  00177E  D00C               	goto	i2l4572
  3443  001780  D78A               	goto	i2l4554
  3444  001782                     i2l4566:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;doprnt.c: 1255: ((*sp++ = ('0')));
  3448  001782  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3449  001786  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3450  00178A  0E30               	movlw	48
  3451  00178C  6EDF               	movwf	indf2,c
  3452                           
  3453                           ; BSR set to: 0
  3454  00178E  4A4D               	infsnz	sprintf@sp,f,c
  3455  001790  2A4E               	incf	sprintf@sp+1,f,c
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;doprnt.c: 1256: prec--;
  3459  001792  0772               	decf	sprintf@prec& (0+255),f,b
  3460  001794  A0D8               	btfss	status,0,c
  3461  001796  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  3462  001798                     i2l4572:
  3463                           
  3464                           ; BSR set to: 0
  3465  001798  5172               	movf	sprintf@prec& (0+255),w,b
  3466  00179A  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3467  00179C  B4D8               	btfsc	status,2,c
  3468  00179E  D036               	goto	i2l4594
  3469  0017A0  D7F0               	goto	i2l4566
  3470  0017A2                     i2l4574:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;doprnt.c: 1265: };doprnt.c: 1309: if(prec == 0 && val == 0)
  3474  0017A2  5172               	movf	sprintf@prec& (0+255),w,b
  3475  0017A4  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3476  0017A6  A4D8               	btfss	status,2,c
  3477  0017A8  D008               	goto	i2l4580
  3478                           
  3479                           ; BSR set to: 0
  3480  0017AA  5168               	movf	sprintf@val& (0+255),w,b
  3481  0017AC  1169               	iorwf	(sprintf@val+1)& (0+255),w,b
  3482  0017AE  116A               	iorwf	(sprintf@val+2)& (0+255),w,b
  3483  0017B0  116B               	iorwf	(sprintf@val+3)& (0+255),w,b
  3484  0017B2  A4D8               	btfss	status,2,c
  3485  0017B4  D002               	goto	i2l4580
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;doprnt.c: 1310: prec++;
  3489  0017B6  4B72               	infsnz	sprintf@prec& (0+255),f,b
  3490  0017B8  2B73               	incf	(sprintf@prec+1)& (0+255),f,b
  3491  0017BA                     i2l4580:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;doprnt.c: 1358: if(c < prec)
  3495  0017BA  5178               	movf	sprintf@c& (0+255),w,b
  3496  0017BC  6E55               	movwf	??_sprintf& (0+255),c
  3497  0017BE  6A56               	clrf	(??_sprintf+1)& (0+255),c
  3498  0017C0  5172               	movf	sprintf@prec& (0+255),w,b
  3499  0017C2  5C55               	subwf	??_sprintf,w,c
  3500  0017C4  5056               	movf	??_sprintf+1,w,c
  3501  0017C6  0A80               	xorlw	128
  3502  0017C8  6E57               	movwf	(??_sprintf+2)& (0+255),c
  3503  0017CA  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  3504  0017CC  0A80               	xorlw	128
  3505  0017CE  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  3506  0017D0  A0D8               	btfss	status,0,c
  3507  0017D2  D00B               	goto	i2u421_41
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;doprnt.c: 1360: else if(prec < c)
  3511                           
  3512                           ; BSR set to: 0
  3513  0017D4  5178               	movf	sprintf@c& (0+255),w,b
  3514  0017D6  6E55               	movwf	??_sprintf& (0+255),c
  3515  0017D8  6A56               	clrf	(??_sprintf+1)& (0+255),c
  3516  0017DA  5055               	movf	??_sprintf,w,c
  3517  0017DC  5D72               	subwf	sprintf@prec& (0+255),w,b
  3518  0017DE  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  3519  0017E0  0A80               	xorlw	128
  3520  0017E2  6E57               	movwf	(??_sprintf+2)& (0+255),c
  3521  0017E4  5056               	movf	??_sprintf+1,w,c
  3522  0017E6  0A80               	xorlw	128
  3523  0017E8  5857               	subwfb	(??_sprintf+2)& (0+255),w,c
  3524  0017EA                     i2u421_41:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;doprnt.c: 1441: {;doprnt.c: 1457: if(flag & 0x03)
  3528                           
  3529                           ; BSR set to: 0
  3530  0017EA  0E03               	movlw	3
  3531  0017EC  1566               	andwf	sprintf@flag& (0+255),w,b
  3532  0017EE  6E55               	movwf	??_sprintf& (0+255),c
  3533  0017F0  0E00               	movlw	0
  3534  0017F2  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  3535  0017F4  6E56               	movwf	(??_sprintf+1)& (0+255),c
  3536  0017F6  5055               	movf	??_sprintf,w,c
  3537  0017F8  1056               	iorwf	??_sprintf+1,w,c
  3538  0017FA  B4D8               	btfsc	status,2,c
  3539  0017FC  D007               	goto	i2l4594
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;doprnt.c: 1458: ((*sp++ = ('-')));
  3543  0017FE  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3544  001802  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3545  001806  0E2D               	movlw	45
  3546  001808  6EDF               	movwf	indf2,c
  3547  00180A  D462               	goto	i2l4400
  3548  00180C                     i2l4594:
  3549                           
  3550                           ; BSR set to: 0
  3551  00180C  C04F  FFF6         	movff	sprintf@f,tblptrl
  3552  001810  C050  FFF7         	movff	sprintf@f+1,tblptrh
  3553  001814  4A4F               	infsnz	sprintf@f,f,c
  3554  001816  2A50               	incf	sprintf@f+1,f,c
  3555  001818                     	if	0	;tblptru may be non-zero
  3556  001818                     	endif
  3557  001818                     	if	0	;tblptru may be non-zero
  3558  001818                     	endif
  3559  001818  0008               	tblrd		*
  3560  00181A  CFF5 F078          	movff	tablat,sprintf@c
  3561  00181E  5178               	movf	sprintf@c& (0+255),w,b
  3562  001820  A4D8               	btfss	status,2,c
  3563  001822  D44C               	goto	i2l4396
  3564  001824                     i2u423_40:
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;doprnt.c: 1557: *sp = 0;
  3568  001824  C04D  FFD9         	movff	sprintf@sp,fsr2l
  3569  001828  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  3570  00182C  0E00               	movlw	0
  3571  00182E  6EDF               	movwf	indf2,c
  3572                           
  3573                           ; BSR set to: 0
  3574  001830  0012               	return		;funcret
  3575  001832                     __end_of_sprintf:
  3576                           	opt callstack 0
  3577                           
  3578 ;; *************** function _scale *****************
  3579 ;; Defined at:
  3580 ;;		line 433 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  scl             1    wreg     char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  scl             1   47[COMRAM] char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  4   39[COMRAM] char 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;Total ram usage:        9 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    1
  3601 ;; This function calls:
  3602 ;;		___awdiv
  3603 ;;		___awmod
  3604 ;;		___flmul
  3605 ;; This function is called by:
  3606 ;;		_sprintf
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text12
  3611  001832                     __ptext12:
  3612                           	opt callstack 0
  3613  001832                     _scale:
  3614                           	opt callstack 24
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;incstack = 0
  3618                           ;scale@scl stored from wreg
  3619  001832  6E30               	movwf	scale@scl,c
  3620                           
  3621                           ;doprnt.c: 436: if(scl < 0) {
  3622  001834  AE30               	btfss	scale@scl,7,c
  3623  001836  D0F3               	goto	i2l3902
  3624                           
  3625                           ;doprnt.c: 437: scl = -scl;
  3626  001838  6C30               	negf	scale@scl,c
  3627                           
  3628                           ;doprnt.c: 438: if(scl>=110)
  3629  00183A  5030               	movf	scale@scl,w,c
  3630  00183C  0A80               	xorlw	128
  3631  00183E  0F12               	addlw	-238
  3632  001840  A0D8               	btfss	status,0,c
  3633  001842  D088               	goto	i2l3892
  3634                           
  3635                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3636  001844  0E00               	movlw	0
  3637  001846  6E0A               	movwf	___awdiv@divisor+1,c
  3638  001848  0E0A               	movlw	10
  3639  00184A  6E09               	movwf	___awdiv@divisor,c
  3640  00184C  0E00               	movlw	0
  3641  00184E  6E04               	movwf	___awmod@divisor+1,c
  3642  001850  0E64               	movlw	100
  3643  001852  6E03               	movwf	___awmod@divisor,c
  3644  001854  5030               	movf	scale@scl,w,c
  3645  001856  6E01               	movwf	___awmod@dividend,c
  3646  001858  6A02               	clrf	___awmod@dividend+1,c
  3647  00185A  BE01               	btfsc	___awmod@dividend,7,c
  3648  00185C  0602               	decf	___awmod@dividend+1,f,c
  3649  00185E  ECB0  F018         	call	___awmod	;wreg free
  3650  001862  C001  F007         	movff	?___awmod,___awdiv@dividend
  3651  001866  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3652  00186A  ECB4  F017         	call	___awdiv	;wreg free
  3653  00186E  0E09               	movlw	9
  3654  001870  2607               	addwf	?___awdiv,f,c
  3655  001872  5007               	movf	?___awdiv,w,c
  3656  001874  0D04               	mullw	4
  3657  001876  0E35               	movlw	low __npowers_
  3658  001878  24F3               	addwf	prodl,w,c
  3659  00187A  6EF6               	movwf	tblptrl,c
  3660  00187C  0E10               	movlw	high __npowers_
  3661  00187E  20F4               	addwfc	prodh,w,c
  3662  001880  6EF7               	movwf	tblptrh,c
  3663  001882                     	if	0	;There are less than 3 active tblptr bytes
  3664  001882                     	endif
  3665  001882  0009               	tblrd		*+
  3666  001884  CFF5 F013          	movff	tablat,___flmul@a
  3667  001888  0009               	tblrd		*+
  3668  00188A  CFF5 F014          	movff	tablat,___flmul@a+1
  3669  00188E  0009               	tblrd		*+
  3670  001890  CFF5 F015          	movff	tablat,___flmul@a+2
  3671  001894  000A               	tblrd		*-
  3672  001896  CFF5 F016          	movff	tablat,___flmul@a+3
  3673  00189A  0E00               	movlw	0
  3674  00189C  6E0A               	movwf	___awdiv@divisor+1,c
  3675  00189E  0E64               	movlw	100
  3676  0018A0  6E09               	movwf	___awdiv@divisor,c
  3677  0018A2  5030               	movf	scale@scl,w,c
  3678  0018A4  6E07               	movwf	___awdiv@dividend,c
  3679  0018A6  6A08               	clrf	___awdiv@dividend+1,c
  3680  0018A8  BE07               	btfsc	___awdiv@dividend,7,c
  3681  0018AA  0608               	decf	___awdiv@dividend+1,f,c
  3682  0018AC  ECB4  F017         	call	___awdiv	;wreg free
  3683  0018B0  0E12               	movlw	18
  3684  0018B2  2607               	addwf	?___awdiv,f,c
  3685  0018B4  5007               	movf	?___awdiv,w,c
  3686  0018B6  0D04               	mullw	4
  3687  0018B8  0E35               	movlw	low __npowers_
  3688  0018BA  24F3               	addwf	prodl,w,c
  3689  0018BC  6EF6               	movwf	tblptrl,c
  3690  0018BE  0E10               	movlw	high __npowers_
  3691  0018C0  20F4               	addwfc	prodh,w,c
  3692  0018C2  6EF7               	movwf	tblptrh,c
  3693  0018C4                     	if	0	;There are less than 3 active tblptr bytes
  3694  0018C4                     	endif
  3695  0018C4  0009               	tblrd		*+
  3696  0018C6  CFF5 F00F          	movff	tablat,___flmul@b
  3697  0018CA  0009               	tblrd		*+
  3698  0018CC  CFF5 F010          	movff	tablat,___flmul@b+1
  3699  0018D0  0009               	tblrd		*+
  3700  0018D2  CFF5 F011          	movff	tablat,___flmul@b+2
  3701  0018D6  000A               	tblrd		*-
  3702  0018D8  CFF5 F012          	movff	tablat,___flmul@b+3
  3703  0018DC  EC01  F00E         	call	___flmul	;wreg free
  3704  0018E0  C00F  F02C         	movff	?___flmul,_scale$2197
  3705  0018E4  C010  F02D         	movff	?___flmul+1,_scale$2197+1
  3706  0018E8  C011  F02E         	movff	?___flmul+2,_scale$2197+2
  3707  0018EC  C012  F02F         	movff	?___flmul+3,_scale$2197+3
  3708                           
  3709                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3710  0018F0  C02C  F00F         	movff	_scale$2197,___flmul@b
  3711  0018F4  C02D  F010         	movff	_scale$2197+1,___flmul@b+1
  3712  0018F8  C02E  F011         	movff	_scale$2197+2,___flmul@b+2
  3713  0018FC  C02F  F012         	movff	_scale$2197+3,___flmul@b+3
  3714  001900  0E00               	movlw	0
  3715  001902  6E04               	movwf	___awmod@divisor+1,c
  3716  001904  0E0A               	movlw	10
  3717  001906  6E03               	movwf	___awmod@divisor,c
  3718  001908  5030               	movf	scale@scl,w,c
  3719  00190A  6E01               	movwf	___awmod@dividend,c
  3720  00190C  6A02               	clrf	___awmod@dividend+1,c
  3721  00190E  BE01               	btfsc	___awmod@dividend,7,c
  3722  001910  0602               	decf	___awmod@dividend+1,f,c
  3723  001912  ECB0  F018         	call	___awmod	;wreg free
  3724  001916  5001               	movf	?___awmod,w,c
  3725  001918  0D04               	mullw	4
  3726  00191A  0E35               	movlw	low __npowers_
  3727  00191C  24F3               	addwf	prodl,w,c
  3728  00191E  6EF6               	movwf	tblptrl,c
  3729  001920  0E10               	movlw	high __npowers_
  3730  001922  20F4               	addwfc	prodh,w,c
  3731  001924  6EF7               	movwf	tblptrh,c
  3732  001926                     	if	0	;There are less than 3 active tblptr bytes
  3733  001926                     	endif
  3734  001926  0009               	tblrd		*+
  3735  001928  CFF5 F013          	movff	tablat,___flmul@a
  3736  00192C  0009               	tblrd		*+
  3737  00192E  CFF5 F014          	movff	tablat,___flmul@a+1
  3738  001932  0009               	tblrd		*+
  3739  001934  CFF5 F015          	movff	tablat,___flmul@a+2
  3740  001938  000A               	tblrd		*-
  3741  00193A  CFF5 F016          	movff	tablat,___flmul@a+3
  3742  00193E  EC01  F00E         	call	___flmul	;wreg free
  3743  001942  C00F  F028         	movff	?___flmul,?_scale
  3744  001946  C010  F029         	movff	?___flmul+1,?_scale+1
  3745  00194A  C011  F02A         	movff	?___flmul+2,?_scale+2
  3746  00194E  C012  F02B         	movff	?___flmul+3,?_scale+3
  3747  001952  0012               	return	
  3748  001954                     i2l3892:
  3749                           
  3750                           ;doprnt.c: 440: else if(scl > 10)
  3751  001954  5030               	movf	scale@scl,w,c
  3752  001956  0A80               	xorlw	128
  3753  001958  0F75               	addlw	-139
  3754  00195A  A0D8               	btfss	status,0,c
  3755  00195C  D04B               	goto	i2l3898
  3756                           
  3757                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3758  00195E  0E00               	movlw	0
  3759  001960  6E0A               	movwf	___awdiv@divisor+1,c
  3760  001962  0E0A               	movlw	10
  3761  001964  6E09               	movwf	___awdiv@divisor,c
  3762  001966  5030               	movf	scale@scl,w,c
  3763  001968  6E07               	movwf	___awdiv@dividend,c
  3764  00196A  6A08               	clrf	___awdiv@dividend+1,c
  3765  00196C  BE07               	btfsc	___awdiv@dividend,7,c
  3766  00196E  0608               	decf	___awdiv@dividend+1,f,c
  3767  001970  ECB4  F017         	call	___awdiv	;wreg free
  3768  001974  0E09               	movlw	9
  3769  001976  2607               	addwf	?___awdiv,f,c
  3770  001978  5007               	movf	?___awdiv,w,c
  3771  00197A  0D04               	mullw	4
  3772  00197C  0E35               	movlw	low __npowers_
  3773  00197E  24F3               	addwf	prodl,w,c
  3774  001980  6EF6               	movwf	tblptrl,c
  3775  001982  0E10               	movlw	high __npowers_
  3776  001984  20F4               	addwfc	prodh,w,c
  3777  001986  6EF7               	movwf	tblptrh,c
  3778  001988                     	if	0	;There are less than 3 active tblptr bytes
  3779  001988                     	endif
  3780  001988  0009               	tblrd		*+
  3781  00198A  CFF5 F00F          	movff	tablat,___flmul@b
  3782  00198E  0009               	tblrd		*+
  3783  001990  CFF5 F010          	movff	tablat,___flmul@b+1
  3784  001994  0009               	tblrd		*+
  3785  001996  CFF5 F011          	movff	tablat,___flmul@b+2
  3786  00199A  000A               	tblrd		*-
  3787  00199C  CFF5 F012          	movff	tablat,___flmul@b+3
  3788  0019A0  0E00               	movlw	0
  3789  0019A2  6E04               	movwf	___awmod@divisor+1,c
  3790  0019A4  0E0A               	movlw	10
  3791  0019A6  6E03               	movwf	___awmod@divisor,c
  3792  0019A8  5030               	movf	scale@scl,w,c
  3793  0019AA  6E01               	movwf	___awmod@dividend,c
  3794  0019AC  6A02               	clrf	___awmod@dividend+1,c
  3795  0019AE  BE01               	btfsc	___awmod@dividend,7,c
  3796  0019B0  0602               	decf	___awmod@dividend+1,f,c
  3797  0019B2  ECB0  F018         	call	___awmod	;wreg free
  3798  0019B6  5001               	movf	?___awmod,w,c
  3799  0019B8  0D04               	mullw	4
  3800  0019BA  0E35               	movlw	low __npowers_
  3801  0019BC  24F3               	addwf	prodl,w,c
  3802  0019BE  6EF6               	movwf	tblptrl,c
  3803  0019C0  0E10               	movlw	high __npowers_
  3804  0019C2  20F4               	addwfc	prodh,w,c
  3805  0019C4  6EF7               	movwf	tblptrh,c
  3806  0019C6                     	if	0	;There are less than 3 active tblptr bytes
  3807  0019C6                     	endif
  3808  0019C6  0009               	tblrd		*+
  3809  0019C8  CFF5 F013          	movff	tablat,___flmul@a
  3810  0019CC  0009               	tblrd		*+
  3811  0019CE  CFF5 F014          	movff	tablat,___flmul@a+1
  3812  0019D2  0009               	tblrd		*+
  3813  0019D4  CFF5 F015          	movff	tablat,___flmul@a+2
  3814  0019D8  000A               	tblrd		*-
  3815  0019DA  CFF5 F016          	movff	tablat,___flmul@a+3
  3816  0019DE  EC01  F00E         	call	___flmul	;wreg free
  3817  0019E2  C00F  F028         	movff	?___flmul,?_scale
  3818  0019E6  C010  F029         	movff	?___flmul+1,?_scale+1
  3819  0019EA  C011  F02A         	movff	?___flmul+2,?_scale+2
  3820  0019EE  C012  F02B         	movff	?___flmul+3,?_scale+3
  3821  0019F2  0012               	return	
  3822  0019F4                     i2l3898:
  3823                           
  3824                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3825  0019F4  5030               	movf	scale@scl,w,c
  3826  0019F6  0D04               	mullw	4
  3827  0019F8  0E35               	movlw	low __npowers_
  3828  0019FA  24F3               	addwf	prodl,w,c
  3829  0019FC  6EF6               	movwf	tblptrl,c
  3830  0019FE  0E10               	movlw	high __npowers_
  3831  001A00  20F4               	addwfc	prodh,w,c
  3832  001A02  6EF7               	movwf	tblptrh,c
  3833  001A04                     	if	0	;There are less than 3 active tblptr bytes
  3834  001A04                     	endif
  3835  001A04  0009               	tblrd		*+
  3836  001A06  CFF5 F028          	movff	tablat,?_scale
  3837  001A0A  0009               	tblrd		*+
  3838  001A0C  CFF5 F029          	movff	tablat,?_scale+1
  3839  001A10  0009               	tblrd		*+
  3840  001A12  CFF5 F02A          	movff	tablat,?_scale+2
  3841  001A16  000A               	tblrd		*-
  3842  001A18  CFF5 F02B          	movff	tablat,?_scale+3
  3843  001A1C  0012               	return	
  3844  001A1E                     i2l3902:
  3845                           
  3846                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3847  001A1E  5030               	movf	scale@scl,w,c
  3848  001A20  0A80               	xorlw	128
  3849  001A22  0F12               	addlw	-238
  3850  001A24  A0D8               	btfss	status,0,c
  3851  001A26  D088               	goto	i2l3910
  3852                           
  3853                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3854  001A28  0E00               	movlw	0
  3855  001A2A  6E0A               	movwf	___awdiv@divisor+1,c
  3856  001A2C  0E0A               	movlw	10
  3857  001A2E  6E09               	movwf	___awdiv@divisor,c
  3858  001A30  0E00               	movlw	0
  3859  001A32  6E04               	movwf	___awmod@divisor+1,c
  3860  001A34  0E64               	movlw	100
  3861  001A36  6E03               	movwf	___awmod@divisor,c
  3862  001A38  5030               	movf	scale@scl,w,c
  3863  001A3A  6E01               	movwf	___awmod@dividend,c
  3864  001A3C  6A02               	clrf	___awmod@dividend+1,c
  3865  001A3E  BE01               	btfsc	___awmod@dividend,7,c
  3866  001A40  0602               	decf	___awmod@dividend+1,f,c
  3867  001A42  ECB0  F018         	call	___awmod	;wreg free
  3868  001A46  C001  F007         	movff	?___awmod,___awdiv@dividend
  3869  001A4A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3870  001A4E  ECB4  F017         	call	___awdiv	;wreg free
  3871  001A52  0E09               	movlw	9
  3872  001A54  2607               	addwf	?___awdiv,f,c
  3873  001A56  5007               	movf	?___awdiv,w,c
  3874  001A58  0D04               	mullw	4
  3875  001A5A  0E01               	movlw	low __powers_
  3876  001A5C  24F3               	addwf	prodl,w,c
  3877  001A5E  6EF6               	movwf	tblptrl,c
  3878  001A60  0E10               	movlw	high __powers_
  3879  001A62  20F4               	addwfc	prodh,w,c
  3880  001A64  6EF7               	movwf	tblptrh,c
  3881  001A66                     	if	0	;There are less than 3 active tblptr bytes
  3882  001A66                     	endif
  3883  001A66  0009               	tblrd		*+
  3884  001A68  CFF5 F013          	movff	tablat,___flmul@a
  3885  001A6C  0009               	tblrd		*+
  3886  001A6E  CFF5 F014          	movff	tablat,___flmul@a+1
  3887  001A72  0009               	tblrd		*+
  3888  001A74  CFF5 F015          	movff	tablat,___flmul@a+2
  3889  001A78  000A               	tblrd		*-
  3890  001A7A  CFF5 F016          	movff	tablat,___flmul@a+3
  3891  001A7E  0E00               	movlw	0
  3892  001A80  6E0A               	movwf	___awdiv@divisor+1,c
  3893  001A82  0E64               	movlw	100
  3894  001A84  6E09               	movwf	___awdiv@divisor,c
  3895  001A86  5030               	movf	scale@scl,w,c
  3896  001A88  6E07               	movwf	___awdiv@dividend,c
  3897  001A8A  6A08               	clrf	___awdiv@dividend+1,c
  3898  001A8C  BE07               	btfsc	___awdiv@dividend,7,c
  3899  001A8E  0608               	decf	___awdiv@dividend+1,f,c
  3900  001A90  ECB4  F017         	call	___awdiv	;wreg free
  3901  001A94  0E12               	movlw	18
  3902  001A96  2607               	addwf	?___awdiv,f,c
  3903  001A98  5007               	movf	?___awdiv,w,c
  3904  001A9A  0D04               	mullw	4
  3905  001A9C  0E01               	movlw	low __powers_
  3906  001A9E  24F3               	addwf	prodl,w,c
  3907  001AA0  6EF6               	movwf	tblptrl,c
  3908  001AA2  0E10               	movlw	high __powers_
  3909  001AA4  20F4               	addwfc	prodh,w,c
  3910  001AA6  6EF7               	movwf	tblptrh,c
  3911  001AA8                     	if	0	;There are less than 3 active tblptr bytes
  3912  001AA8                     	endif
  3913  001AA8  0009               	tblrd		*+
  3914  001AAA  CFF5 F00F          	movff	tablat,___flmul@b
  3915  001AAE  0009               	tblrd		*+
  3916  001AB0  CFF5 F010          	movff	tablat,___flmul@b+1
  3917  001AB4  0009               	tblrd		*+
  3918  001AB6  CFF5 F011          	movff	tablat,___flmul@b+2
  3919  001ABA  000A               	tblrd		*-
  3920  001ABC  CFF5 F012          	movff	tablat,___flmul@b+3
  3921  001AC0  EC01  F00E         	call	___flmul	;wreg free
  3922  001AC4  C00F  F02C         	movff	?___flmul,_scale$2197
  3923  001AC8  C010  F02D         	movff	?___flmul+1,_scale$2197+1
  3924  001ACC  C011  F02E         	movff	?___flmul+2,_scale$2197+2
  3925  001AD0  C012  F02F         	movff	?___flmul+3,_scale$2197+3
  3926                           
  3927                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3928  001AD4  C02C  F00F         	movff	_scale$2197,___flmul@b
  3929  001AD8  C02D  F010         	movff	_scale$2197+1,___flmul@b+1
  3930  001ADC  C02E  F011         	movff	_scale$2197+2,___flmul@b+2
  3931  001AE0  C02F  F012         	movff	_scale$2197+3,___flmul@b+3
  3932  001AE4  0E00               	movlw	0
  3933  001AE6  6E04               	movwf	___awmod@divisor+1,c
  3934  001AE8  0E0A               	movlw	10
  3935  001AEA  6E03               	movwf	___awmod@divisor,c
  3936  001AEC  5030               	movf	scale@scl,w,c
  3937  001AEE  6E01               	movwf	___awmod@dividend,c
  3938  001AF0  6A02               	clrf	___awmod@dividend+1,c
  3939  001AF2  BE01               	btfsc	___awmod@dividend,7,c
  3940  001AF4  0602               	decf	___awmod@dividend+1,f,c
  3941  001AF6  ECB0  F018         	call	___awmod	;wreg free
  3942  001AFA  5001               	movf	?___awmod,w,c
  3943  001AFC  0D04               	mullw	4
  3944  001AFE  0E01               	movlw	low __powers_
  3945  001B00  24F3               	addwf	prodl,w,c
  3946  001B02  6EF6               	movwf	tblptrl,c
  3947  001B04  0E10               	movlw	high __powers_
  3948  001B06  20F4               	addwfc	prodh,w,c
  3949  001B08  6EF7               	movwf	tblptrh,c
  3950  001B0A                     	if	0	;There are less than 3 active tblptr bytes
  3951  001B0A                     	endif
  3952  001B0A  0009               	tblrd		*+
  3953  001B0C  CFF5 F013          	movff	tablat,___flmul@a
  3954  001B10  0009               	tblrd		*+
  3955  001B12  CFF5 F014          	movff	tablat,___flmul@a+1
  3956  001B16  0009               	tblrd		*+
  3957  001B18  CFF5 F015          	movff	tablat,___flmul@a+2
  3958  001B1C  000A               	tblrd		*-
  3959  001B1E  CFF5 F016          	movff	tablat,___flmul@a+3
  3960  001B22  EC01  F00E         	call	___flmul	;wreg free
  3961  001B26  C00F  F028         	movff	?___flmul,?_scale
  3962  001B2A  C010  F029         	movff	?___flmul+1,?_scale+1
  3963  001B2E  C011  F02A         	movff	?___flmul+2,?_scale+2
  3964  001B32  C012  F02B         	movff	?___flmul+3,?_scale+3
  3965  001B36  0012               	return	
  3966  001B38                     i2l3910:
  3967                           
  3968                           ;doprnt.c: 446: else if(scl > 10)
  3969  001B38  5030               	movf	scale@scl,w,c
  3970  001B3A  0A80               	xorlw	128
  3971  001B3C  0F75               	addlw	-139
  3972  001B3E  A0D8               	btfss	status,0,c
  3973  001B40  D04B               	goto	i2l3916
  3974                           
  3975                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3976  001B42  0E00               	movlw	0
  3977  001B44  6E0A               	movwf	___awdiv@divisor+1,c
  3978  001B46  0E0A               	movlw	10
  3979  001B48  6E09               	movwf	___awdiv@divisor,c
  3980  001B4A  5030               	movf	scale@scl,w,c
  3981  001B4C  6E07               	movwf	___awdiv@dividend,c
  3982  001B4E  6A08               	clrf	___awdiv@dividend+1,c
  3983  001B50  BE07               	btfsc	___awdiv@dividend,7,c
  3984  001B52  0608               	decf	___awdiv@dividend+1,f,c
  3985  001B54  ECB4  F017         	call	___awdiv	;wreg free
  3986  001B58  0E09               	movlw	9
  3987  001B5A  2607               	addwf	?___awdiv,f,c
  3988  001B5C  5007               	movf	?___awdiv,w,c
  3989  001B5E  0D04               	mullw	4
  3990  001B60  0E01               	movlw	low __powers_
  3991  001B62  24F3               	addwf	prodl,w,c
  3992  001B64  6EF6               	movwf	tblptrl,c
  3993  001B66  0E10               	movlw	high __powers_
  3994  001B68  20F4               	addwfc	prodh,w,c
  3995  001B6A  6EF7               	movwf	tblptrh,c
  3996  001B6C                     	if	0	;There are less than 3 active tblptr bytes
  3997  001B6C                     	endif
  3998  001B6C  0009               	tblrd		*+
  3999  001B6E  CFF5 F00F          	movff	tablat,___flmul@b
  4000  001B72  0009               	tblrd		*+
  4001  001B74  CFF5 F010          	movff	tablat,___flmul@b+1
  4002  001B78  0009               	tblrd		*+
  4003  001B7A  CFF5 F011          	movff	tablat,___flmul@b+2
  4004  001B7E  000A               	tblrd		*-
  4005  001B80  CFF5 F012          	movff	tablat,___flmul@b+3
  4006  001B84  0E00               	movlw	0
  4007  001B86  6E04               	movwf	___awmod@divisor+1,c
  4008  001B88  0E0A               	movlw	10
  4009  001B8A  6E03               	movwf	___awmod@divisor,c
  4010  001B8C  5030               	movf	scale@scl,w,c
  4011  001B8E  6E01               	movwf	___awmod@dividend,c
  4012  001B90  6A02               	clrf	___awmod@dividend+1,c
  4013  001B92  BE01               	btfsc	___awmod@dividend,7,c
  4014  001B94  0602               	decf	___awmod@dividend+1,f,c
  4015  001B96  ECB0  F018         	call	___awmod	;wreg free
  4016  001B9A  5001               	movf	?___awmod,w,c
  4017  001B9C  0D04               	mullw	4
  4018  001B9E  0E01               	movlw	low __powers_
  4019  001BA0  24F3               	addwf	prodl,w,c
  4020  001BA2  6EF6               	movwf	tblptrl,c
  4021  001BA4  0E10               	movlw	high __powers_
  4022  001BA6  20F4               	addwfc	prodh,w,c
  4023  001BA8  6EF7               	movwf	tblptrh,c
  4024  001BAA                     	if	0	;There are less than 3 active tblptr bytes
  4025  001BAA                     	endif
  4026  001BAA  0009               	tblrd		*+
  4027  001BAC  CFF5 F013          	movff	tablat,___flmul@a
  4028  001BB0  0009               	tblrd		*+
  4029  001BB2  CFF5 F014          	movff	tablat,___flmul@a+1
  4030  001BB6  0009               	tblrd		*+
  4031  001BB8  CFF5 F015          	movff	tablat,___flmul@a+2
  4032  001BBC  000A               	tblrd		*-
  4033  001BBE  CFF5 F016          	movff	tablat,___flmul@a+3
  4034  001BC2  EC01  F00E         	call	___flmul	;wreg free
  4035  001BC6  C00F  F028         	movff	?___flmul,?_scale
  4036  001BCA  C010  F029         	movff	?___flmul+1,?_scale+1
  4037  001BCE  C011  F02A         	movff	?___flmul+2,?_scale+2
  4038  001BD2  C012  F02B         	movff	?___flmul+3,?_scale+3
  4039  001BD6  0012               	return	
  4040  001BD8                     i2l3916:
  4041                           
  4042                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  4043  001BD8  5030               	movf	scale@scl,w,c
  4044  001BDA  0D04               	mullw	4
  4045  001BDC  0E01               	movlw	low __powers_
  4046  001BDE  24F3               	addwf	prodl,w,c
  4047  001BE0  6EF6               	movwf	tblptrl,c
  4048  001BE2  0E10               	movlw	high __powers_
  4049  001BE4  20F4               	addwfc	prodh,w,c
  4050  001BE6  6EF7               	movwf	tblptrh,c
  4051  001BE8                     	if	0	;There are less than 3 active tblptr bytes
  4052  001BE8                     	endif
  4053  001BE8  0009               	tblrd		*+
  4054  001BEA  CFF5 F028          	movff	tablat,?_scale
  4055  001BEE  0009               	tblrd		*+
  4056  001BF0  CFF5 F029          	movff	tablat,?_scale+1
  4057  001BF4  0009               	tblrd		*+
  4058  001BF6  CFF5 F02A          	movff	tablat,?_scale+2
  4059  001BFA  000A               	tblrd		*-
  4060  001BFC  CFF5 F02B          	movff	tablat,?_scale+3
  4061  001C00  0012               	return		;funcret
  4062  001C02                     __end_of_scale:
  4063                           	opt callstack 0
  4064                           
  4065 ;; *************** function ___awmod *****************
  4066 ;; Defined at:
  4067 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  dividend        2    0[COMRAM] int 
  4070 ;;  divisor         2    2[COMRAM] int 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  sign            1    5[COMRAM] unsigned char 
  4073 ;;  counter         1    4[COMRAM] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  2    0[COMRAM] int 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;Total ram usage:        6 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_scale
  4093 ;;		_USARTWriteInt
  4094 ;;		_USART2WriteInt
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text13
  4099  003160                     __ptext13:
  4100                           	opt callstack 0
  4101  003160                     ___awmod:
  4102                           	opt callstack 24
  4103                           
  4104                           ;incstack = 0
  4105  003160  0E00               	movlw	0
  4106  003162  6E06               	movwf	___awmod@sign,c
  4107  003164  AE02               	btfss	___awmod@dividend+1,7,c
  4108  003166  D006               	goto	i2l3708
  4109  003168  6C01               	negf	___awmod@dividend,c
  4110  00316A  1E02               	comf	___awmod@dividend+1,f,c
  4111  00316C  B0D8               	btfsc	status,0,c
  4112  00316E  2A02               	incf	___awmod@dividend+1,f,c
  4113  003170  0E01               	movlw	1
  4114  003172  6E06               	movwf	___awmod@sign,c
  4115  003174                     i2l3708:
  4116  003174  AE04               	btfss	___awmod@divisor+1,7,c
  4117  003176  D004               	goto	i2l3712
  4118  003178  6C03               	negf	___awmod@divisor,c
  4119  00317A  1E04               	comf	___awmod@divisor+1,f,c
  4120  00317C  B0D8               	btfsc	status,0,c
  4121  00317E  2A04               	incf	___awmod@divisor+1,f,c
  4122  003180                     i2l3712:
  4123  003180  5003               	movf	___awmod@divisor,w,c
  4124  003182  1004               	iorwf	___awmod@divisor+1,w,c
  4125  003184  B4D8               	btfsc	status,2,c
  4126  003186  D018               	goto	i2l3728
  4127  003188  0E01               	movlw	1
  4128  00318A  6E05               	movwf	___awmod@counter,c
  4129  00318C  D004               	goto	i2l3718
  4130  00318E                     i2l3716:
  4131  00318E  90D8               	bcf	status,0,c
  4132  003190  3603               	rlcf	___awmod@divisor,f,c
  4133  003192  3604               	rlcf	___awmod@divisor+1,f,c
  4134  003194  2A05               	incf	___awmod@counter,f,c
  4135  003196                     i2l3718:
  4136  003196  AE04               	btfss	___awmod@divisor+1,7,c
  4137  003198  D7FA               	goto	i2l3716
  4138  00319A                     i2u301_40:
  4139  00319A  5003               	movf	___awmod@divisor,w,c
  4140  00319C  5C01               	subwf	___awmod@dividend,w,c
  4141  00319E  5004               	movf	___awmod@divisor+1,w,c
  4142  0031A0  5802               	subwfb	___awmod@dividend+1,w,c
  4143  0031A2  A0D8               	btfss	status,0,c
  4144  0031A4  D004               	goto	i2l3724
  4145  0031A6  5003               	movf	___awmod@divisor,w,c
  4146  0031A8  5E01               	subwf	___awmod@dividend,f,c
  4147  0031AA  5004               	movf	___awmod@divisor+1,w,c
  4148  0031AC  5A02               	subwfb	___awmod@dividend+1,f,c
  4149  0031AE                     i2l3724:
  4150  0031AE  90D8               	bcf	status,0,c
  4151  0031B0  3204               	rrcf	___awmod@divisor+1,f,c
  4152  0031B2  3203               	rrcf	___awmod@divisor,f,c
  4153  0031B4  2E05               	decfsz	___awmod@counter,f,c
  4154  0031B6  D7F1               	goto	i2u301_40
  4155  0031B8                     i2l3728:
  4156  0031B8  5006               	movf	___awmod@sign,w,c
  4157  0031BA  B4D8               	btfsc	status,2,c
  4158  0031BC  D004               	goto	i2l3732
  4159  0031BE  6C01               	negf	___awmod@dividend,c
  4160  0031C0  1E02               	comf	___awmod@dividend+1,f,c
  4161  0031C2  B0D8               	btfsc	status,0,c
  4162  0031C4  2A02               	incf	___awmod@dividend+1,f,c
  4163  0031C6                     i2l3732:
  4164  0031C6  C001  F001         	movff	___awmod@dividend,?___awmod
  4165  0031CA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4166  0031CE  0012               	return		;funcret
  4167  0031D0                     __end_of___awmod:
  4168                           	opt callstack 0
  4169                           
  4170 ;; *************** function ___awdiv *****************
  4171 ;; Defined at:
  4172 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  dividend        2    6[COMRAM] int 
  4175 ;;  divisor         2    8[COMRAM] int 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  quotient        2   12[COMRAM] int 
  4178 ;;  sign            1   11[COMRAM] unsigned char 
  4179 ;;  counter         1   10[COMRAM] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  2    6[COMRAM] int 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;Total ram usage:        8 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; This function calls:
  4196 ;;		Nothing
  4197 ;; This function is called by:
  4198 ;;		_scale
  4199 ;;		_sprintf
  4200 ;;		_USARTWriteInt
  4201 ;;		_USART2WriteInt
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text14
  4206  002F68                     __ptext14:
  4207                           	opt callstack 0
  4208  002F68                     ___awdiv:
  4209                           	opt callstack 24
  4210                           
  4211                           ;incstack = 0
  4212  002F68  0E00               	movlw	0
  4213  002F6A  6E0C               	movwf	___awdiv@sign,c
  4214  002F6C  AE0A               	btfss	___awdiv@divisor+1,7,c
  4215  002F6E  D006               	goto	i2l3664
  4216  002F70  6C09               	negf	___awdiv@divisor,c
  4217  002F72  1E0A               	comf	___awdiv@divisor+1,f,c
  4218  002F74  B0D8               	btfsc	status,0,c
  4219  002F76  2A0A               	incf	___awdiv@divisor+1,f,c
  4220  002F78  0E01               	movlw	1
  4221  002F7A  6E0C               	movwf	___awdiv@sign,c
  4222  002F7C                     i2l3664:
  4223  002F7C  AE08               	btfss	___awdiv@dividend+1,7,c
  4224  002F7E  D006               	goto	i2l3670
  4225  002F80  6C07               	negf	___awdiv@dividend,c
  4226  002F82  1E08               	comf	___awdiv@dividend+1,f,c
  4227  002F84  B0D8               	btfsc	status,0,c
  4228  002F86  2A08               	incf	___awdiv@dividend+1,f,c
  4229  002F88  0E01               	movlw	1
  4230  002F8A  1A0C               	xorwf	___awdiv@sign,f,c
  4231  002F8C                     i2l3670:
  4232  002F8C  0E00               	movlw	0
  4233  002F8E  6E0E               	movwf	___awdiv@quotient+1,c
  4234  002F90  0E00               	movlw	0
  4235  002F92  6E0D               	movwf	___awdiv@quotient,c
  4236  002F94  5009               	movf	___awdiv@divisor,w,c
  4237  002F96  100A               	iorwf	___awdiv@divisor+1,w,c
  4238  002F98  B4D8               	btfsc	status,2,c
  4239  002F9A  D01C               	goto	i2l3692
  4240  002F9C  0E01               	movlw	1
  4241  002F9E  6E0B               	movwf	___awdiv@counter,c
  4242  002FA0  D004               	goto	i2l3678
  4243  002FA2                     i2l3676:
  4244  002FA2  90D8               	bcf	status,0,c
  4245  002FA4  3609               	rlcf	___awdiv@divisor,f,c
  4246  002FA6  360A               	rlcf	___awdiv@divisor+1,f,c
  4247  002FA8  2A0B               	incf	___awdiv@counter,f,c
  4248  002FAA                     i2l3678:
  4249  002FAA  AE0A               	btfss	___awdiv@divisor+1,7,c
  4250  002FAC  D7FA               	goto	i2l3676
  4251  002FAE                     i2u295_40:
  4252  002FAE  90D8               	bcf	status,0,c
  4253  002FB0  360D               	rlcf	___awdiv@quotient,f,c
  4254  002FB2  360E               	rlcf	___awdiv@quotient+1,f,c
  4255  002FB4  5009               	movf	___awdiv@divisor,w,c
  4256  002FB6  5C07               	subwf	___awdiv@dividend,w,c
  4257  002FB8  500A               	movf	___awdiv@divisor+1,w,c
  4258  002FBA  5808               	subwfb	___awdiv@dividend+1,w,c
  4259  002FBC  A0D8               	btfss	status,0,c
  4260  002FBE  D005               	goto	i2l3688
  4261  002FC0  5009               	movf	___awdiv@divisor,w,c
  4262  002FC2  5E07               	subwf	___awdiv@dividend,f,c
  4263  002FC4  500A               	movf	___awdiv@divisor+1,w,c
  4264  002FC6  5A08               	subwfb	___awdiv@dividend+1,f,c
  4265  002FC8  800D               	bsf	___awdiv@quotient,0,c
  4266  002FCA                     i2l3688:
  4267  002FCA  90D8               	bcf	status,0,c
  4268  002FCC  320A               	rrcf	___awdiv@divisor+1,f,c
  4269  002FCE  3209               	rrcf	___awdiv@divisor,f,c
  4270  002FD0  2E0B               	decfsz	___awdiv@counter,f,c
  4271  002FD2  D7ED               	goto	i2u295_40
  4272  002FD4                     i2l3692:
  4273  002FD4  500C               	movf	___awdiv@sign,w,c
  4274  002FD6  B4D8               	btfsc	status,2,c
  4275  002FD8  D004               	goto	i2l3696
  4276  002FDA  6C0D               	negf	___awdiv@quotient,c
  4277  002FDC  1E0E               	comf	___awdiv@quotient+1,f,c
  4278  002FDE  B0D8               	btfsc	status,0,c
  4279  002FE0  2A0E               	incf	___awdiv@quotient+1,f,c
  4280  002FE2                     i2l3696:
  4281  002FE2  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  4282  002FE6  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  4283  002FEA  0012               	return		;funcret
  4284  002FEC                     __end_of___awdiv:
  4285                           	opt callstack 0
  4286                           
  4287 ;; *************** function _isdigit *****************
  4288 ;; Defined at:
  4289 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  c               1    wreg     unsigned char 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  c               1    2[COMRAM] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;		None               void
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;Total ram usage:        3 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_sprintf
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text15
  4317  0034AA                     __ptext15:
  4318                           	opt callstack 0
  4319  0034AA                     _isdigit:
  4320                           	opt callstack 25
  4321                           
  4322                           ;incstack = 0
  4323                           ;isdigit@c stored from wreg
  4324  0034AA  6E03               	movwf	isdigit@c,c
  4325  0034AC  0E00               	movlw	0
  4326  0034AE  6E02               	movwf	_isdigit$1981,c
  4327  0034B0  0E3A               	movlw	58
  4328  0034B2  6003               	cpfslt	isdigit@c,c
  4329  0034B4  D005               	goto	i2l3928
  4330  0034B6  0E2F               	movlw	47
  4331  0034B8  6403               	cpfsgt	isdigit@c,c
  4332  0034BA  D002               	goto	i2l3928
  4333  0034BC  0E01               	movlw	1
  4334  0034BE  6E02               	movwf	_isdigit$1981,c
  4335  0034C0                     i2l3928:
  4336  0034C0  C002  F001         	movff	_isdigit$1981,??_isdigit
  4337  0034C4  3001               	rrcf	??_isdigit,w,c
  4338  0034C6  0012               	return		;funcret
  4339  0034C8                     __end_of_isdigit:
  4340                           	opt callstack 0
  4341                           
  4342 ;; *************** function _fround *****************
  4343 ;; Defined at:
  4344 ;;		line 417 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  prec            1    wreg     unsigned char 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  prec            1   51[COMRAM] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  4   39[COMRAM] unsigned char 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;Total ram usage:       13 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    1
  4365 ;; This function calls:
  4366 ;;		___flmul
  4367 ;;		___lwdiv
  4368 ;;		___lwmod
  4369 ;; This function is called by:
  4370 ;;		_sprintf
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text16
  4375  002260                     __ptext16:
  4376                           	opt callstack 0
  4377  002260                     _fround:
  4378                           	opt callstack 24
  4379                           
  4380                           ;incstack = 0
  4381                           ;fround@prec stored from wreg
  4382  002260  6E34               	movwf	fround@prec,c
  4383                           
  4384                           ;doprnt.c: 421: if(prec>=110)
  4385  002262  0E6D               	movlw	109
  4386  002264  6434               	cpfsgt	fround@prec,c
  4387  002266  D0AC               	goto	i2l3872
  4388                           
  4389                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4390  002268  0E00               	movlw	0
  4391  00226A  6E13               	movwf	___flmul@a,c
  4392  00226C  0E00               	movlw	0
  4393  00226E  6E14               	movwf	___flmul@a+1,c
  4394  002270  0E00               	movlw	0
  4395  002272  6E15               	movwf	___flmul@a+2,c
  4396  002274  0E3F               	movlw	63
  4397  002276  6E16               	movwf	___flmul@a+3,c
  4398  002278  0E00               	movlw	0
  4399  00227A  6E09               	movwf	___lwdiv@divisor+1,c
  4400  00227C  0E64               	movlw	100
  4401  00227E  6E08               	movwf	___lwdiv@divisor,c
  4402  002280  C034  F006         	movff	fround@prec,___lwdiv@dividend
  4403  002284  6A07               	clrf	___lwdiv@dividend+1,c
  4404  002286  EC49  F019         	call	___lwdiv	;wreg free
  4405  00228A  90D8               	bcf	status,0,c
  4406  00228C  3606               	rlcf	?___lwdiv,f,c
  4407  00228E  3607               	rlcf	?___lwdiv+1,f,c
  4408  002290  90D8               	bcf	status,0,c
  4409  002292  3606               	rlcf	?___lwdiv,f,c
  4410  002294  3607               	rlcf	?___lwdiv+1,f,c
  4411  002296  0E48               	movlw	72
  4412  002298  2606               	addwf	?___lwdiv,f,c
  4413  00229A  0E00               	movlw	0
  4414  00229C  2207               	addwfc	?___lwdiv+1,f,c
  4415  00229E  0E35               	movlw	low __npowers_
  4416  0022A0  2406               	addwf	?___lwdiv,w,c
  4417  0022A2  6EF6               	movwf	tblptrl,c
  4418  0022A4  0E10               	movlw	high __npowers_
  4419  0022A6  2007               	addwfc	?___lwdiv+1,w,c
  4420  0022A8  6EF7               	movwf	tblptrh,c
  4421  0022AA                     	if	0	;There are less than 3 active tblptr bytes
  4422  0022AA                     	endif
  4423  0022AA  0009               	tblrd		*+
  4424  0022AC  CFF5 F00F          	movff	tablat,___flmul@b
  4425  0022B0  0009               	tblrd		*+
  4426  0022B2  CFF5 F010          	movff	tablat,___flmul@b+1
  4427  0022B6  0009               	tblrd		*+
  4428  0022B8  CFF5 F011          	movff	tablat,___flmul@b+2
  4429  0022BC  000A               	tblrd		*-
  4430  0022BE  CFF5 F012          	movff	tablat,___flmul@b+3
  4431  0022C2  EC01  F00E         	call	___flmul	;wreg free
  4432  0022C6  C00F  F030         	movff	?___flmul,_fround$2195
  4433  0022CA  C010  F031         	movff	?___flmul+1,_fround$2195+1
  4434  0022CE  C011  F032         	movff	?___flmul+2,_fround$2195+2
  4435  0022D2  C012  F033         	movff	?___flmul+3,_fround$2195+3
  4436                           
  4437                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4438  0022D6  0E00               	movlw	0
  4439  0022D8  6E09               	movwf	___lwdiv@divisor+1,c
  4440  0022DA  0E0A               	movlw	10
  4441  0022DC  6E08               	movwf	___lwdiv@divisor,c
  4442  0022DE  0E00               	movlw	0
  4443  0022E0  6E04               	movwf	___lwmod@divisor+1,c
  4444  0022E2  0E64               	movlw	100
  4445  0022E4  6E03               	movwf	___lwmod@divisor,c
  4446  0022E6  C034  F001         	movff	fround@prec,___lwmod@dividend
  4447  0022EA  6A02               	clrf	___lwmod@dividend+1,c
  4448  0022EC  EC95  F019         	call	___lwmod	;wreg free
  4449  0022F0  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  4450  0022F4  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  4451  0022F8  EC49  F019         	call	___lwdiv	;wreg free
  4452  0022FC  90D8               	bcf	status,0,c
  4453  0022FE  3606               	rlcf	?___lwdiv,f,c
  4454  002300  3607               	rlcf	?___lwdiv+1,f,c
  4455  002302  90D8               	bcf	status,0,c
  4456  002304  3606               	rlcf	?___lwdiv,f,c
  4457  002306  3607               	rlcf	?___lwdiv+1,f,c
  4458  002308  0E24               	movlw	36
  4459  00230A  2606               	addwf	?___lwdiv,f,c
  4460  00230C  0E00               	movlw	0
  4461  00230E  2207               	addwfc	?___lwdiv+1,f,c
  4462  002310  0E35               	movlw	low __npowers_
  4463  002312  2406               	addwf	?___lwdiv,w,c
  4464  002314  6EF6               	movwf	tblptrl,c
  4465  002316  0E10               	movlw	high __npowers_
  4466  002318  2007               	addwfc	?___lwdiv+1,w,c
  4467  00231A  6EF7               	movwf	tblptrh,c
  4468  00231C                     	if	0	;There are less than 3 active tblptr bytes
  4469  00231C                     	endif
  4470  00231C  0009               	tblrd		*+
  4471  00231E  CFF5 F013          	movff	tablat,___flmul@a
  4472  002322  0009               	tblrd		*+
  4473  002324  CFF5 F014          	movff	tablat,___flmul@a+1
  4474  002328  0009               	tblrd		*+
  4475  00232A  CFF5 F015          	movff	tablat,___flmul@a+2
  4476  00232E  000A               	tblrd		*-
  4477  002330  CFF5 F016          	movff	tablat,___flmul@a+3
  4478  002334  C030  F00F         	movff	_fround$2195,___flmul@b
  4479  002338  C031  F010         	movff	_fround$2195+1,___flmul@b+1
  4480  00233C  C032  F011         	movff	_fround$2195+2,___flmul@b+2
  4481  002340  C033  F012         	movff	_fround$2195+3,___flmul@b+3
  4482  002344  EC01  F00E         	call	___flmul	;wreg free
  4483  002348  C00F  F02C         	movff	?___flmul,_fround$2196
  4484  00234C  C010  F02D         	movff	?___flmul+1,_fround$2196+1
  4485  002350  C011  F02E         	movff	?___flmul+2,_fround$2196+2
  4486  002354  C012  F02F         	movff	?___flmul+3,_fround$2196+3
  4487                           
  4488                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  4489  002358  C02C  F00F         	movff	_fround$2196,___flmul@b
  4490  00235C  C02D  F010         	movff	_fround$2196+1,___flmul@b+1
  4491  002360  C02E  F011         	movff	_fround$2196+2,___flmul@b+2
  4492  002364  C02F  F012         	movff	_fround$2196+3,___flmul@b+3
  4493  002368  0E00               	movlw	0
  4494  00236A  6E04               	movwf	___lwmod@divisor+1,c
  4495  00236C  0E0A               	movlw	10
  4496  00236E  6E03               	movwf	___lwmod@divisor,c
  4497  002370  C034  F001         	movff	fround@prec,___lwmod@dividend
  4498  002374  6A02               	clrf	___lwmod@dividend+1,c
  4499  002376  EC95  F019         	call	___lwmod	;wreg free
  4500  00237A  90D8               	bcf	status,0,c
  4501  00237C  3601               	rlcf	?___lwmod,f,c
  4502  00237E  3602               	rlcf	?___lwmod+1,f,c
  4503  002380  90D8               	bcf	status,0,c
  4504  002382  3601               	rlcf	?___lwmod,f,c
  4505  002384  3602               	rlcf	?___lwmod+1,f,c
  4506  002386  0E35               	movlw	low __npowers_
  4507  002388  2401               	addwf	?___lwmod,w,c
  4508  00238A  6EF6               	movwf	tblptrl,c
  4509  00238C  0E10               	movlw	high __npowers_
  4510  00238E  2002               	addwfc	?___lwmod+1,w,c
  4511  002390  6EF7               	movwf	tblptrh,c
  4512  002392                     	if	0	;There are less than 3 active tblptr bytes
  4513  002392                     	endif
  4514  002392  0009               	tblrd		*+
  4515  002394  CFF5 F013          	movff	tablat,___flmul@a
  4516  002398  0009               	tblrd		*+
  4517  00239A  CFF5 F014          	movff	tablat,___flmul@a+1
  4518  00239E  0009               	tblrd		*+
  4519  0023A0  CFF5 F015          	movff	tablat,___flmul@a+2
  4520  0023A4  000A               	tblrd		*-
  4521  0023A6  CFF5 F016          	movff	tablat,___flmul@a+3
  4522  0023AA  EC01  F00E         	call	___flmul	;wreg free
  4523  0023AE  C00F  F028         	movff	?___flmul,?_fround
  4524  0023B2  C010  F029         	movff	?___flmul+1,?_fround+1
  4525  0023B6  C011  F02A         	movff	?___flmul+2,?_fround+2
  4526  0023BA  C012  F02B         	movff	?___flmul+3,?_fround+3
  4527  0023BE  0012               	return	
  4528  0023C0                     i2l3872:
  4529                           
  4530                           ;doprnt.c: 423: else if(prec > 10)
  4531  0023C0  0E0A               	movlw	10
  4532  0023C2  6434               	cpfsgt	fround@prec,c
  4533  0023C4  D06B               	goto	i2l3878
  4534                           
  4535                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4536  0023C6  0E00               	movlw	0
  4537  0023C8  6E13               	movwf	___flmul@a,c
  4538  0023CA  0E00               	movlw	0
  4539  0023CC  6E14               	movwf	___flmul@a+1,c
  4540  0023CE  0E00               	movlw	0
  4541  0023D0  6E15               	movwf	___flmul@a+2,c
  4542  0023D2  0E3F               	movlw	63
  4543  0023D4  6E16               	movwf	___flmul@a+3,c
  4544  0023D6  0E00               	movlw	0
  4545  0023D8  6E09               	movwf	___lwdiv@divisor+1,c
  4546  0023DA  0E0A               	movlw	10
  4547  0023DC  6E08               	movwf	___lwdiv@divisor,c
  4548  0023DE  C034  F006         	movff	fround@prec,___lwdiv@dividend
  4549  0023E2  6A07               	clrf	___lwdiv@dividend+1,c
  4550  0023E4  EC49  F019         	call	___lwdiv	;wreg free
  4551  0023E8  90D8               	bcf	status,0,c
  4552  0023EA  3606               	rlcf	?___lwdiv,f,c
  4553  0023EC  3607               	rlcf	?___lwdiv+1,f,c
  4554  0023EE  90D8               	bcf	status,0,c
  4555  0023F0  3606               	rlcf	?___lwdiv,f,c
  4556  0023F2  3607               	rlcf	?___lwdiv+1,f,c
  4557  0023F4  0E24               	movlw	36
  4558  0023F6  2606               	addwf	?___lwdiv,f,c
  4559  0023F8  0E00               	movlw	0
  4560  0023FA  2207               	addwfc	?___lwdiv+1,f,c
  4561  0023FC  0E35               	movlw	low __npowers_
  4562  0023FE  2406               	addwf	?___lwdiv,w,c
  4563  002400  6EF6               	movwf	tblptrl,c
  4564  002402  0E10               	movlw	high __npowers_
  4565  002404  2007               	addwfc	?___lwdiv+1,w,c
  4566  002406  6EF7               	movwf	tblptrh,c
  4567  002408                     	if	0	;There are less than 3 active tblptr bytes
  4568  002408                     	endif
  4569  002408  0009               	tblrd		*+
  4570  00240A  CFF5 F00F          	movff	tablat,___flmul@b
  4571  00240E  0009               	tblrd		*+
  4572  002410  CFF5 F010          	movff	tablat,___flmul@b+1
  4573  002414  0009               	tblrd		*+
  4574  002416  CFF5 F011          	movff	tablat,___flmul@b+2
  4575  00241A  000A               	tblrd		*-
  4576  00241C  CFF5 F012          	movff	tablat,___flmul@b+3
  4577  002420  EC01  F00E         	call	___flmul	;wreg free
  4578  002424  C00F  F030         	movff	?___flmul,_fround$2195
  4579  002428  C010  F031         	movff	?___flmul+1,_fround$2195+1
  4580  00242C  C011  F032         	movff	?___flmul+2,_fround$2195+2
  4581  002430  C012  F033         	movff	?___flmul+3,_fround$2195+3
  4582                           
  4583                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4584  002434  C030  F00F         	movff	_fround$2195,___flmul@b
  4585  002438  C031  F010         	movff	_fround$2195+1,___flmul@b+1
  4586  00243C  C032  F011         	movff	_fround$2195+2,___flmul@b+2
  4587  002440  C033  F012         	movff	_fround$2195+3,___flmul@b+3
  4588  002444  0E00               	movlw	0
  4589  002446  6E04               	movwf	___lwmod@divisor+1,c
  4590  002448  0E0A               	movlw	10
  4591  00244A  6E03               	movwf	___lwmod@divisor,c
  4592  00244C  C034  F001         	movff	fround@prec,___lwmod@dividend
  4593  002450  6A02               	clrf	___lwmod@dividend+1,c
  4594  002452  EC95  F019         	call	___lwmod	;wreg free
  4595  002456  90D8               	bcf	status,0,c
  4596  002458  3601               	rlcf	?___lwmod,f,c
  4597  00245A  3602               	rlcf	?___lwmod+1,f,c
  4598  00245C  90D8               	bcf	status,0,c
  4599  00245E  3601               	rlcf	?___lwmod,f,c
  4600  002460  3602               	rlcf	?___lwmod+1,f,c
  4601  002462  0E35               	movlw	low __npowers_
  4602  002464  2401               	addwf	?___lwmod,w,c
  4603  002466  6EF6               	movwf	tblptrl,c
  4604  002468  0E10               	movlw	high __npowers_
  4605  00246A  2002               	addwfc	?___lwmod+1,w,c
  4606  00246C  6EF7               	movwf	tblptrh,c
  4607  00246E                     	if	0	;There are less than 3 active tblptr bytes
  4608  00246E                     	endif
  4609  00246E  0009               	tblrd		*+
  4610  002470  CFF5 F013          	movff	tablat,___flmul@a
  4611  002474  0009               	tblrd		*+
  4612  002476  CFF5 F014          	movff	tablat,___flmul@a+1
  4613  00247A  0009               	tblrd		*+
  4614  00247C  CFF5 F015          	movff	tablat,___flmul@a+2
  4615  002480  000A               	tblrd		*-
  4616  002482  CFF5 F016          	movff	tablat,___flmul@a+3
  4617  002486  EC01  F00E         	call	___flmul	;wreg free
  4618  00248A  C00F  F028         	movff	?___flmul,?_fround
  4619  00248E  C010  F029         	movff	?___flmul+1,?_fround+1
  4620  002492  C011  F02A         	movff	?___flmul+2,?_fround+2
  4621  002496  C012  F02B         	movff	?___flmul+3,?_fround+3
  4622  00249A  0012               	return	
  4623  00249C                     i2l3878:
  4624                           
  4625                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4626  00249C  5034               	movf	fround@prec,w,c
  4627  00249E  0D04               	mullw	4
  4628  0024A0  0E35               	movlw	low __npowers_
  4629  0024A2  24F3               	addwf	prodl,w,c
  4630  0024A4  6EF6               	movwf	tblptrl,c
  4631  0024A6  0E10               	movlw	high __npowers_
  4632  0024A8  20F4               	addwfc	prodh,w,c
  4633  0024AA  6EF7               	movwf	tblptrh,c
  4634  0024AC                     	if	0	;There are less than 3 active tblptr bytes
  4635  0024AC                     	endif
  4636  0024AC  0009               	tblrd		*+
  4637  0024AE  CFF5 F00F          	movff	tablat,___flmul@b
  4638  0024B2  0009               	tblrd		*+
  4639  0024B4  CFF5 F010          	movff	tablat,___flmul@b+1
  4640  0024B8  0009               	tblrd		*+
  4641  0024BA  CFF5 F011          	movff	tablat,___flmul@b+2
  4642  0024BE  000A               	tblrd		*-
  4643  0024C0  CFF5 F012          	movff	tablat,___flmul@b+3
  4644  0024C4  0E00               	movlw	0
  4645  0024C6  6E13               	movwf	___flmul@a,c
  4646  0024C8  0E00               	movlw	0
  4647  0024CA  6E14               	movwf	___flmul@a+1,c
  4648  0024CC  0E00               	movlw	0
  4649  0024CE  6E15               	movwf	___flmul@a+2,c
  4650  0024D0  0E3F               	movlw	63
  4651  0024D2  6E16               	movwf	___flmul@a+3,c
  4652  0024D4  EC01  F00E         	call	___flmul	;wreg free
  4653  0024D8  C00F  F028         	movff	?___flmul,?_fround
  4654  0024DC  C010  F029         	movff	?___flmul+1,?_fround+1
  4655  0024E0  C011  F02A         	movff	?___flmul+2,?_fround+2
  4656  0024E4  C012  F02B         	movff	?___flmul+3,?_fround+3
  4657  0024E8  0012               	return		;funcret
  4658  0024EA                     __end_of_fround:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function ___lwmod *****************
  4662 ;; Defined at:
  4663 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  dividend        2    0[COMRAM] unsigned int 
  4666 ;;  divisor         2    2[COMRAM] unsigned int 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  counter         1    4[COMRAM] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  2    0[COMRAM] unsigned int 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;Total ram usage:        5 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_fround
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text17
  4692  00332A                     __ptext17:
  4693                           	opt callstack 0
  4694  00332A                     ___lwmod:
  4695                           	opt callstack 24
  4696                           
  4697                           ;incstack = 0
  4698  00332A  5003               	movf	___lwmod@divisor,w,c
  4699  00332C  1004               	iorwf	___lwmod@divisor+1,w,c
  4700  00332E  B4D8               	btfsc	status,2,c
  4701  003330  D018               	goto	i2l1051
  4702  003332  0E01               	movlw	1
  4703  003334  6E05               	movwf	___lwmod@counter,c
  4704  003336  D004               	goto	i2l3764
  4705  003338                     i2l3762:
  4706  003338  90D8               	bcf	status,0,c
  4707  00333A  3603               	rlcf	___lwmod@divisor,f,c
  4708  00333C  3604               	rlcf	___lwmod@divisor+1,f,c
  4709  00333E  2A05               	incf	___lwmod@counter,f,c
  4710  003340                     i2l3764:
  4711  003340  AE04               	btfss	___lwmod@divisor+1,7,c
  4712  003342  D7FA               	goto	i2l3762
  4713  003344                     i2u308_40:
  4714  003344  5003               	movf	___lwmod@divisor,w,c
  4715  003346  5C01               	subwf	___lwmod@dividend,w,c
  4716  003348  5004               	movf	___lwmod@divisor+1,w,c
  4717  00334A  5802               	subwfb	___lwmod@dividend+1,w,c
  4718  00334C  A0D8               	btfss	status,0,c
  4719  00334E  D004               	goto	i2l3770
  4720  003350  5003               	movf	___lwmod@divisor,w,c
  4721  003352  5E01               	subwf	___lwmod@dividend,f,c
  4722  003354  5004               	movf	___lwmod@divisor+1,w,c
  4723  003356  5A02               	subwfb	___lwmod@dividend+1,f,c
  4724  003358                     i2l3770:
  4725  003358  90D8               	bcf	status,0,c
  4726  00335A  3204               	rrcf	___lwmod@divisor+1,f,c
  4727  00335C  3203               	rrcf	___lwmod@divisor,f,c
  4728  00335E  2E05               	decfsz	___lwmod@counter,f,c
  4729  003360  D7F1               	goto	i2u308_40
  4730  003362                     i2l1051:
  4731  003362  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4732  003366  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4733  00336A  0012               	return		;funcret
  4734  00336C                     __end_of___lwmod:
  4735                           	opt callstack 0
  4736                           
  4737 ;; *************** function ___lwdiv *****************
  4738 ;; Defined at:
  4739 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  dividend        2    5[COMRAM] unsigned int 
  4742 ;;  divisor         2    7[COMRAM] unsigned int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  quotient        2    9[COMRAM] unsigned int 
  4745 ;;  counter         1   11[COMRAM] unsigned char 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  2    5[COMRAM] unsigned int 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, status,0
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;Total ram usage:        7 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_fround
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text18
  4769  003292                     __ptext18:
  4770                           	opt callstack 0
  4771  003292                     ___lwdiv:
  4772                           	opt callstack 24
  4773                           
  4774                           ;incstack = 0
  4775  003292  0E00               	movlw	0
  4776  003294  6E0B               	movwf	___lwdiv@quotient+1,c
  4777  003296  0E00               	movlw	0
  4778  003298  6E0A               	movwf	___lwdiv@quotient,c
  4779  00329A  5008               	movf	___lwdiv@divisor,w,c
  4780  00329C  1009               	iorwf	___lwdiv@divisor+1,w,c
  4781  00329E  B4D8               	btfsc	status,2,c
  4782  0032A0  D01C               	goto	i2l1041
  4783  0032A2  0E01               	movlw	1
  4784  0032A4  6E0C               	movwf	___lwdiv@counter,c
  4785  0032A6  D004               	goto	i2l3744
  4786  0032A8                     i2l3742:
  4787  0032A8  90D8               	bcf	status,0,c
  4788  0032AA  3608               	rlcf	___lwdiv@divisor,f,c
  4789  0032AC  3609               	rlcf	___lwdiv@divisor+1,f,c
  4790  0032AE  2A0C               	incf	___lwdiv@counter,f,c
  4791  0032B0                     i2l3744:
  4792  0032B0  AE09               	btfss	___lwdiv@divisor+1,7,c
  4793  0032B2  D7FA               	goto	i2l3742
  4794  0032B4                     i2u305_40:
  4795  0032B4  90D8               	bcf	status,0,c
  4796  0032B6  360A               	rlcf	___lwdiv@quotient,f,c
  4797  0032B8  360B               	rlcf	___lwdiv@quotient+1,f,c
  4798  0032BA  5008               	movf	___lwdiv@divisor,w,c
  4799  0032BC  5C06               	subwf	___lwdiv@dividend,w,c
  4800  0032BE  5009               	movf	___lwdiv@divisor+1,w,c
  4801  0032C0  5807               	subwfb	___lwdiv@dividend+1,w,c
  4802  0032C2  A0D8               	btfss	status,0,c
  4803  0032C4  D005               	goto	i2l3754
  4804  0032C6  5008               	movf	___lwdiv@divisor,w,c
  4805  0032C8  5E06               	subwf	___lwdiv@dividend,f,c
  4806  0032CA  5009               	movf	___lwdiv@divisor+1,w,c
  4807  0032CC  5A07               	subwfb	___lwdiv@dividend+1,f,c
  4808  0032CE  800A               	bsf	___lwdiv@quotient,0,c
  4809  0032D0                     i2l3754:
  4810  0032D0  90D8               	bcf	status,0,c
  4811  0032D2  3209               	rrcf	___lwdiv@divisor+1,f,c
  4812  0032D4  3208               	rrcf	___lwdiv@divisor,f,c
  4813  0032D6  2E0C               	decfsz	___lwdiv@counter,f,c
  4814  0032D8  D7ED               	goto	i2u305_40
  4815  0032DA                     i2l1041:
  4816  0032DA  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4817  0032DE  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4818  0032E2  0012               	return		;funcret
  4819  0032E4                     __end_of___lwdiv:
  4820                           	opt callstack 0
  4821                           
  4822 ;; *************** function __tdiv_to_l_ *****************
  4823 ;; Defined at:
  4824 ;;		line 60 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  f1              4    0[COMRAM] float 
  4827 ;;  f2              4    4[COMRAM] float 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  quot            4   11[COMRAM] unsigned long 
  4830 ;;  exp1            1   16[COMRAM] unsigned char 
  4831 ;;  cntr            1   15[COMRAM] unsigned char 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  4    0[COMRAM] unsigned long 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4841 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;Total ram usage:       17 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_sprintf
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text19
  4855  0029EE                     __ptext19:
  4856                           	opt callstack 0
  4857  0029EE                     __tdiv_to_l_:
  4858                           	opt callstack 25
  4859                           
  4860                           ;incstack = 0
  4861  0029EE  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4862  0029F2  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4863  0029F4  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4864  0029F6  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  4865  0029F8  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4866  0029FA  E301               	bnc	u321_41
  4867  0029FC  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4868  0029FE                     u321_41:
  4869  0029FE  5009               	movf	??__tdiv_to_l_,w,c
  4870  002A00  6E11               	movwf	__tdiv_to_l_@exp1,c
  4871  002A02  5011               	movf	__tdiv_to_l_@exp1,w,c
  4872  002A04  A4D8               	btfss	status,2,c
  4873  002A06  D009               	goto	i2l3938
  4874  002A08                     i2u322_40:
  4875  002A08  0E00               	movlw	0
  4876  002A0A  6E01               	movwf	?__tdiv_to_l_,c
  4877  002A0C  0E00               	movlw	0
  4878  002A0E  6E02               	movwf	?__tdiv_to_l_+1,c
  4879  002A10  0E00               	movlw	0
  4880  002A12  6E03               	movwf	?__tdiv_to_l_+2,c
  4881  002A14  0E00               	movlw	0
  4882  002A16  6E04               	movwf	?__tdiv_to_l_+3,c
  4883  002A18  0012               	return	
  4884  002A1A                     i2l3938:
  4885  002A1A  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4886  002A1E  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  4887  002A20  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  4888  002A22  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  4889  002A24  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  4890  002A26  E301               	bnc	u323_41
  4891  002A28  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  4892  002A2A                     u323_41:
  4893  002A2A  5009               	movf	??__tdiv_to_l_,w,c
  4894  002A2C  6E10               	movwf	__tdiv_to_l_@cntr,c
  4895  002A2E  5010               	movf	__tdiv_to_l_@cntr,w,c
  4896  002A30  B4D8               	btfsc	status,2,c
  4897  002A32  D7EA               	goto	i2u322_40
  4898  002A34  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  4899  002A36  0EFF               	movlw	255
  4900  002A38  1601               	andwf	__tdiv_to_l_@f1,f,c
  4901  002A3A  0EFF               	movlw	255
  4902  002A3C  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  4903  002A3E  0E00               	movlw	0
  4904  002A40  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  4905  002A42  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  4906  002A44  0EFF               	movlw	255
  4907  002A46  1605               	andwf	__tdiv_to_l_@f2,f,c
  4908  002A48  0EFF               	movlw	255
  4909  002A4A  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  4910  002A4C  0E00               	movlw	0
  4911  002A4E  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  4912  002A50  0E00               	movlw	0
  4913  002A52  6E0C               	movwf	__tdiv_to_l_@quot,c
  4914  002A54  0E00               	movlw	0
  4915  002A56  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  4916  002A58  0E00               	movlw	0
  4917  002A5A  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  4918  002A5C  0E00               	movlw	0
  4919  002A5E  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  4920  002A60  0E7F               	movlw	127
  4921  002A62  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4922  002A64  5010               	movf	__tdiv_to_l_@cntr,w,c
  4923  002A66  0F98               	addlw	152
  4924  002A68  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  4925  002A6A  0E18               	movlw	24
  4926  002A6C  6E10               	movwf	__tdiv_to_l_@cntr,c
  4927  002A6E                     i2l893:
  4928  002A6E  90D8               	bcf	status,0,c
  4929  002A70  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4930  002A72  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4931  002A74  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4932  002A76  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4933  002A78  5005               	movf	__tdiv_to_l_@f2,w,c
  4934  002A7A  5C01               	subwf	__tdiv_to_l_@f1,w,c
  4935  002A7C  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4936  002A7E  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  4937  002A80  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4938  002A82  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  4939  002A84  A0D8               	btfss	status,0,c
  4940  002A86  D007               	goto	i2l894
  4941  002A88  5005               	movf	__tdiv_to_l_@f2,w,c
  4942  002A8A  5E01               	subwf	__tdiv_to_l_@f1,f,c
  4943  002A8C  5006               	movf	__tdiv_to_l_@f2+1,w,c
  4944  002A8E  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  4945  002A90  5007               	movf	__tdiv_to_l_@f2+2,w,c
  4946  002A92  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  4947  002A94  800C               	bsf	__tdiv_to_l_@quot,0,c
  4948  002A96                     i2l894:
  4949  002A96  90D8               	bcf	status,0,c
  4950  002A98  3601               	rlcf	__tdiv_to_l_@f1,f,c
  4951  002A9A  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  4952  002A9C  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  4953  002A9E  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  4954  002AA0  D7E6               	goto	i2l893
  4955  002AA2  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  4956  002AA4  D00D               	goto	i2l3978
  4957  002AA6  5011               	movf	__tdiv_to_l_@exp1,w,c
  4958  002AA8  0A80               	xorlw	128
  4959  002AAA  0F97               	addlw	151
  4960  002AAC  A0D8               	btfss	status,0,c
  4961  002AAE  D7AC               	goto	i2u322_40
  4962  002AB0                     i2l3974:
  4963  002AB0  90D8               	bcf	status,0,c
  4964  002AB2  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  4965  002AB4  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  4966  002AB6  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  4967  002AB8  320C               	rrcf	__tdiv_to_l_@quot,f,c
  4968  002ABA  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  4969  002ABC  D7F9               	goto	i2l3974
  4970  002ABE  D00D               	goto	i2u329_40
  4971  002AC0                     i2l3978:
  4972  002AC0  0E17               	movlw	23
  4973  002AC2  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  4974  002AC4  D007               	goto	i2l3986
  4975  002AC6  D7A0               	goto	i2u322_40
  4976  002AC8                     i2l3984:
  4977  002AC8  90D8               	bcf	status,0,c
  4978  002ACA  360C               	rlcf	__tdiv_to_l_@quot,f,c
  4979  002ACC  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  4980  002ACE  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  4981  002AD0  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  4982  002AD2  0611               	decf	__tdiv_to_l_@exp1,f,c
  4983  002AD4                     i2l3986:
  4984  002AD4  5011               	movf	__tdiv_to_l_@exp1,w,c
  4985  002AD6  A4D8               	btfss	status,2,c
  4986  002AD8  D7F7               	goto	i2l3984
  4987  002ADA                     i2u329_40:
  4988  002ADA  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4989  002ADE  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4990  002AE2  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4991  002AE6  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4992  002AEA  0012               	return		;funcret
  4993  002AEC                     __end_of__tdiv_to_l_:
  4994                           	opt callstack 0
  4995                           
  4996 ;; *************** function __div_to_l_ *****************
  4997 ;; Defined at:
  4998 ;;		line 60 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  f1              4    0[COMRAM] unsigned long 
  5001 ;;  f2              4    4[COMRAM] unsigned long 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  quot            4    8[COMRAM] unsigned long 
  5004 ;;  exp1            1   13[COMRAM] unsigned char 
  5005 ;;  cntr            1   12[COMRAM] unsigned char 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  4    0[COMRAM] unsigned long 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5015 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;Total ram usage:       14 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_sprintf
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text20
  5029  002AEC                     __ptext20:
  5030                           	opt callstack 0
  5031  002AEC                     __div_to_l_:
  5032                           	opt callstack 25
  5033                           
  5034                           ;incstack = 0
  5035  002AEC  3403               	rlcf	__div_to_l_@f1+2,w,c
  5036  002AEE  3404               	rlcf	__div_to_l_@f1+3,w,c
  5037  002AF0  6E0E               	movwf	__div_to_l_@exp1,c
  5038  002AF2  500E               	movf	__div_to_l_@exp1,w,c
  5039  002AF4  A4D8               	btfss	status,2,c
  5040  002AF6  D009               	goto	i2l3994
  5041  002AF8                     i2u330_40:
  5042  002AF8  0E00               	movlw	0
  5043  002AFA  6E01               	movwf	?__div_to_l_,c
  5044  002AFC  0E00               	movlw	0
  5045  002AFE  6E02               	movwf	?__div_to_l_+1,c
  5046  002B00  0E00               	movlw	0
  5047  002B02  6E03               	movwf	?__div_to_l_+2,c
  5048  002B04  0E00               	movlw	0
  5049  002B06  6E04               	movwf	?__div_to_l_+3,c
  5050  002B08  0012               	return	
  5051  002B0A                     i2l3994:
  5052  002B0A  3407               	rlcf	__div_to_l_@f2+2,w,c
  5053  002B0C  3408               	rlcf	__div_to_l_@f2+3,w,c
  5054  002B0E  6E0D               	movwf	__div_to_l_@cntr,c
  5055  002B10  500D               	movf	__div_to_l_@cntr,w,c
  5056  002B12  B4D8               	btfsc	status,2,c
  5057  002B14  D7F1               	goto	i2u330_40
  5058  002B16  8E03               	bsf	__div_to_l_@f1+2,7,c
  5059  002B18  0EFF               	movlw	255
  5060  002B1A  1601               	andwf	__div_to_l_@f1,f,c
  5061  002B1C  0EFF               	movlw	255
  5062  002B1E  1602               	andwf	__div_to_l_@f1+1,f,c
  5063  002B20  0EFF               	movlw	255
  5064  002B22  1603               	andwf	__div_to_l_@f1+2,f,c
  5065  002B24  0E00               	movlw	0
  5066  002B26  1604               	andwf	__div_to_l_@f1+3,f,c
  5067  002B28  8E07               	bsf	__div_to_l_@f2+2,7,c
  5068  002B2A  0EFF               	movlw	255
  5069  002B2C  1605               	andwf	__div_to_l_@f2,f,c
  5070  002B2E  0EFF               	movlw	255
  5071  002B30  1606               	andwf	__div_to_l_@f2+1,f,c
  5072  002B32  0EFF               	movlw	255
  5073  002B34  1607               	andwf	__div_to_l_@f2+2,f,c
  5074  002B36  0E00               	movlw	0
  5075  002B38  1608               	andwf	__div_to_l_@f2+3,f,c
  5076  002B3A  0E00               	movlw	0
  5077  002B3C  6E09               	movwf	__div_to_l_@quot,c
  5078  002B3E  0E00               	movlw	0
  5079  002B40  6E0A               	movwf	__div_to_l_@quot+1,c
  5080  002B42  0E00               	movlw	0
  5081  002B44  6E0B               	movwf	__div_to_l_@quot+2,c
  5082  002B46  0E00               	movlw	0
  5083  002B48  6E0C               	movwf	__div_to_l_@quot+3,c
  5084  002B4A  0E7F               	movlw	127
  5085  002B4C  5E0E               	subwf	__div_to_l_@exp1,f,c
  5086  002B4E  500D               	movf	__div_to_l_@cntr,w,c
  5087  002B50  0FA0               	addlw	160
  5088  002B52  5E0E               	subwf	__div_to_l_@exp1,f,c
  5089  002B54  0E20               	movlw	32
  5090  002B56  6E0D               	movwf	__div_to_l_@cntr,c
  5091  002B58                     i2l4014:
  5092  002B58  90D8               	bcf	status,0,c
  5093  002B5A  3609               	rlcf	__div_to_l_@quot,f,c
  5094  002B5C  360A               	rlcf	__div_to_l_@quot+1,f,c
  5095  002B5E  360B               	rlcf	__div_to_l_@quot+2,f,c
  5096  002B60  360C               	rlcf	__div_to_l_@quot+3,f,c
  5097  002B62  5005               	movf	__div_to_l_@f2,w,c
  5098  002B64  5C01               	subwf	__div_to_l_@f1,w,c
  5099  002B66  5006               	movf	__div_to_l_@f2+1,w,c
  5100  002B68  5802               	subwfb	__div_to_l_@f1+1,w,c
  5101  002B6A  5007               	movf	__div_to_l_@f2+2,w,c
  5102  002B6C  5803               	subwfb	__div_to_l_@f1+2,w,c
  5103  002B6E  5008               	movf	__div_to_l_@f2+3,w,c
  5104  002B70  5804               	subwfb	__div_to_l_@f1+3,w,c
  5105  002B72  A0D8               	btfss	status,0,c
  5106  002B74  D009               	goto	i2l4022
  5107  002B76  5005               	movf	__div_to_l_@f2,w,c
  5108  002B78  5E01               	subwf	__div_to_l_@f1,f,c
  5109  002B7A  5006               	movf	__div_to_l_@f2+1,w,c
  5110  002B7C  5A02               	subwfb	__div_to_l_@f1+1,f,c
  5111  002B7E  5007               	movf	__div_to_l_@f2+2,w,c
  5112  002B80  5A03               	subwfb	__div_to_l_@f1+2,f,c
  5113  002B82  5008               	movf	__div_to_l_@f2+3,w,c
  5114  002B84  5A04               	subwfb	__div_to_l_@f1+3,f,c
  5115  002B86  8009               	bsf	__div_to_l_@quot,0,c
  5116  002B88                     i2l4022:
  5117  002B88  90D8               	bcf	status,0,c
  5118  002B8A  3601               	rlcf	__div_to_l_@f1,f,c
  5119  002B8C  3602               	rlcf	__div_to_l_@f1+1,f,c
  5120  002B8E  3603               	rlcf	__div_to_l_@f1+2,f,c
  5121  002B90  3604               	rlcf	__div_to_l_@f1+3,f,c
  5122  002B92  2E0D               	decfsz	__div_to_l_@cntr,f,c
  5123  002B94  D7E1               	goto	i2l4014
  5124  002B96  AE0E               	btfss	__div_to_l_@exp1,7,c
  5125  002B98  D00D               	goto	i2l4038
  5126  002B9A  500E               	movf	__div_to_l_@exp1,w,c
  5127  002B9C  0A80               	xorlw	128
  5128  002B9E  0F9F               	addlw	159
  5129  002BA0  A0D8               	btfss	status,0,c
  5130  002BA2  D7AA               	goto	i2u330_40
  5131  002BA4                     i2l4034:
  5132  002BA4  90D8               	bcf	status,0,c
  5133  002BA6  320C               	rrcf	__div_to_l_@quot+3,f,c
  5134  002BA8  320B               	rrcf	__div_to_l_@quot+2,f,c
  5135  002BAA  320A               	rrcf	__div_to_l_@quot+1,f,c
  5136  002BAC  3209               	rrcf	__div_to_l_@quot,f,c
  5137  002BAE  3E0E               	incfsz	__div_to_l_@exp1,f,c
  5138  002BB0  D7F9               	goto	i2l4034
  5139  002BB2  D00D               	goto	i2u336_40
  5140  002BB4                     i2l4038:
  5141  002BB4  0E1F               	movlw	31
  5142  002BB6  640E               	cpfsgt	__div_to_l_@exp1,c
  5143  002BB8  D007               	goto	i2l4046
  5144  002BBA  D79E               	goto	i2u330_40
  5145  002BBC                     i2l4044:
  5146  002BBC  90D8               	bcf	status,0,c
  5147  002BBE  3609               	rlcf	__div_to_l_@quot,f,c
  5148  002BC0  360A               	rlcf	__div_to_l_@quot+1,f,c
  5149  002BC2  360B               	rlcf	__div_to_l_@quot+2,f,c
  5150  002BC4  360C               	rlcf	__div_to_l_@quot+3,f,c
  5151  002BC6  060E               	decf	__div_to_l_@exp1,f,c
  5152  002BC8                     i2l4046:
  5153  002BC8  500E               	movf	__div_to_l_@exp1,w,c
  5154  002BCA  A4D8               	btfss	status,2,c
  5155  002BCC  D7F7               	goto	i2l4044
  5156  002BCE                     i2u336_40:
  5157  002BCE  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  5158  002BD2  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5159  002BD6  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5160  002BDA  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5161  002BDE  0012               	return		;funcret
  5162  002BE0                     __end_of__div_to_l_:
  5163                           	opt callstack 0
  5164                           
  5165 ;; *************** function ___wmul *****************
  5166 ;; Defined at:
  5167 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  multiplier      2    0[COMRAM] unsigned int 
  5170 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  product         2    4[COMRAM] unsigned int 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  2    0[COMRAM] unsigned int 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0, prodl, prodh
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;Total ram usage:        6 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_sprintf
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text21
  5196  003460                     __ptext21:
  5197                           	opt callstack 0
  5198  003460                     ___wmul:
  5199                           	opt callstack 25
  5200                           
  5201                           ;incstack = 0
  5202  003460  5001               	movf	___wmul@multiplier,w,c
  5203  003462  0203               	mulwf	___wmul@multiplicand,c
  5204  003464  CFF3 F005          	movff	prodl,___wmul@product
  5205  003468  CFF4 F006          	movff	prodh,___wmul@product+1
  5206  00346C  5001               	movf	___wmul@multiplier,w,c
  5207  00346E  0204               	mulwf	___wmul@multiplicand+1,c
  5208  003470  50F3               	movf	prodl,w,c
  5209  003472  2606               	addwf	___wmul@product+1,f,c
  5210  003474  5002               	movf	___wmul@multiplier+1,w,c
  5211  003476  0203               	mulwf	___wmul@multiplicand,c
  5212  003478  50F3               	movf	prodl,w,c
  5213  00347A  2606               	addwf	___wmul@product+1,f,c
  5214  00347C  C005  F001         	movff	___wmul@product,?___wmul
  5215  003480  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5216  003484  0012               	return		;funcret
  5217  003486                     __end_of___wmul:
  5218                           	opt callstack 0
  5219                           
  5220 ;; *************** function ___llmod *****************
  5221 ;; Defined at:
  5222 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  dividend        4    0[COMRAM] unsigned long 
  5225 ;;  divisor         4    4[COMRAM] unsigned long 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  counter         1    8[COMRAM] unsigned char 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  4    0[COMRAM] unsigned long 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5237 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;Total ram usage:        9 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_sprintf
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text22
  5251  0031D0                     __ptext22:
  5252                           	opt callstack 0
  5253  0031D0                     ___llmod:
  5254                           	opt callstack 25
  5255                           
  5256                           ;incstack = 0
  5257  0031D0  5005               	movf	___llmod@divisor,w,c
  5258  0031D2  1006               	iorwf	___llmod@divisor+1,w,c
  5259  0031D4  1007               	iorwf	___llmod@divisor+2,w,c
  5260  0031D6  1008               	iorwf	___llmod@divisor+3,w,c
  5261  0031D8  B4D8               	btfsc	status,2,c
  5262  0031DA  D024               	goto	i2l970
  5263  0031DC  0E01               	movlw	1
  5264  0031DE  6E09               	movwf	___llmod@counter,c
  5265  0031E0  D006               	goto	i2l4316
  5266  0031E2                     i2l4314:
  5267  0031E2  90D8               	bcf	status,0,c
  5268  0031E4  3605               	rlcf	___llmod@divisor,f,c
  5269  0031E6  3606               	rlcf	___llmod@divisor+1,f,c
  5270  0031E8  3607               	rlcf	___llmod@divisor+2,f,c
  5271  0031EA  3608               	rlcf	___llmod@divisor+3,f,c
  5272  0031EC  2A09               	incf	___llmod@counter,f,c
  5273  0031EE                     i2l4316:
  5274  0031EE  AE08               	btfss	___llmod@divisor+3,7,c
  5275  0031F0  D7F8               	goto	i2l4314
  5276  0031F2                     i2u380_40:
  5277  0031F2  5005               	movf	___llmod@divisor,w,c
  5278  0031F4  5C01               	subwf	___llmod@dividend,w,c
  5279  0031F6  5006               	movf	___llmod@divisor+1,w,c
  5280  0031F8  5802               	subwfb	___llmod@dividend+1,w,c
  5281  0031FA  5007               	movf	___llmod@divisor+2,w,c
  5282  0031FC  5803               	subwfb	___llmod@dividend+2,w,c
  5283  0031FE  5008               	movf	___llmod@divisor+3,w,c
  5284  003200  5804               	subwfb	___llmod@dividend+3,w,c
  5285  003202  A0D8               	btfss	status,0,c
  5286  003204  D008               	goto	i2l4322
  5287  003206  5005               	movf	___llmod@divisor,w,c
  5288  003208  5E01               	subwf	___llmod@dividend,f,c
  5289  00320A  5006               	movf	___llmod@divisor+1,w,c
  5290  00320C  5A02               	subwfb	___llmod@dividend+1,f,c
  5291  00320E  5007               	movf	___llmod@divisor+2,w,c
  5292  003210  5A03               	subwfb	___llmod@dividend+2,f,c
  5293  003212  5008               	movf	___llmod@divisor+3,w,c
  5294  003214  5A04               	subwfb	___llmod@dividend+3,f,c
  5295  003216                     i2l4322:
  5296  003216  90D8               	bcf	status,0,c
  5297  003218  3208               	rrcf	___llmod@divisor+3,f,c
  5298  00321A  3207               	rrcf	___llmod@divisor+2,f,c
  5299  00321C  3206               	rrcf	___llmod@divisor+1,f,c
  5300  00321E  3205               	rrcf	___llmod@divisor,f,c
  5301  003220  2E09               	decfsz	___llmod@counter,f,c
  5302  003222  D7E7               	goto	i2u380_40
  5303  003224                     i2l970:
  5304  003224  C001  F001         	movff	___llmod@dividend,?___llmod
  5305  003228  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  5306  00322C  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  5307  003230  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  5308  003234  0012               	return		;funcret
  5309  003236                     __end_of___llmod:
  5310                           	opt callstack 0
  5311                           
  5312 ;; *************** function ___lldiv *****************
  5313 ;; Defined at:
  5314 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  dividend        4    0[COMRAM] unsigned long 
  5317 ;;  divisor         4    4[COMRAM] unsigned long 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  quotient        4    8[COMRAM] unsigned long 
  5320 ;;  counter         1   12[COMRAM] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  4    0[COMRAM] unsigned long 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5330 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;Total ram usage:       13 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_sprintf
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text23
  5344  002FEC                     __ptext23:
  5345                           	opt callstack 0
  5346  002FEC                     ___lldiv:
  5347                           	opt callstack 25
  5348                           
  5349                           ;incstack = 0
  5350  002FEC  0E00               	movlw	0
  5351  002FEE  6E09               	movwf	___lldiv@quotient,c
  5352  002FF0  0E00               	movlw	0
  5353  002FF2  6E0A               	movwf	___lldiv@quotient+1,c
  5354  002FF4  0E00               	movlw	0
  5355  002FF6  6E0B               	movwf	___lldiv@quotient+2,c
  5356  002FF8  0E00               	movlw	0
  5357  002FFA  6E0C               	movwf	___lldiv@quotient+3,c
  5358  002FFC  5005               	movf	___lldiv@divisor,w,c
  5359  002FFE  1006               	iorwf	___lldiv@divisor+1,w,c
  5360  003000  1007               	iorwf	___lldiv@divisor+2,w,c
  5361  003002  1008               	iorwf	___lldiv@divisor+3,w,c
  5362  003004  B4D8               	btfsc	status,2,c
  5363  003006  D02A               	goto	i2l555
  5364  003008  0E01               	movlw	1
  5365  00300A  6E0D               	movwf	___lldiv@counter,c
  5366  00300C  D006               	goto	i2l4062
  5367  00300E                     i2l4060:
  5368  00300E  90D8               	bcf	status,0,c
  5369  003010  3605               	rlcf	___lldiv@divisor,f,c
  5370  003012  3606               	rlcf	___lldiv@divisor+1,f,c
  5371  003014  3607               	rlcf	___lldiv@divisor+2,f,c
  5372  003016  3608               	rlcf	___lldiv@divisor+3,f,c
  5373  003018  2A0D               	incf	___lldiv@counter,f,c
  5374  00301A                     i2l4062:
  5375  00301A  AE08               	btfss	___lldiv@divisor+3,7,c
  5376  00301C  D7F8               	goto	i2l4060
  5377  00301E                     i2u338_40:
  5378  00301E  90D8               	bcf	status,0,c
  5379  003020  3609               	rlcf	___lldiv@quotient,f,c
  5380  003022  360A               	rlcf	___lldiv@quotient+1,f,c
  5381  003024  360B               	rlcf	___lldiv@quotient+2,f,c
  5382  003026  360C               	rlcf	___lldiv@quotient+3,f,c
  5383  003028  5005               	movf	___lldiv@divisor,w,c
  5384  00302A  5C01               	subwf	___lldiv@dividend,w,c
  5385  00302C  5006               	movf	___lldiv@divisor+1,w,c
  5386  00302E  5802               	subwfb	___lldiv@dividend+1,w,c
  5387  003030  5007               	movf	___lldiv@divisor+2,w,c
  5388  003032  5803               	subwfb	___lldiv@dividend+2,w,c
  5389  003034  5008               	movf	___lldiv@divisor+3,w,c
  5390  003036  5804               	subwfb	___lldiv@dividend+3,w,c
  5391  003038  A0D8               	btfss	status,0,c
  5392  00303A  D009               	goto	i2l4072
  5393  00303C  5005               	movf	___lldiv@divisor,w,c
  5394  00303E  5E01               	subwf	___lldiv@dividend,f,c
  5395  003040  5006               	movf	___lldiv@divisor+1,w,c
  5396  003042  5A02               	subwfb	___lldiv@dividend+1,f,c
  5397  003044  5007               	movf	___lldiv@divisor+2,w,c
  5398  003046  5A03               	subwfb	___lldiv@dividend+2,f,c
  5399  003048  5008               	movf	___lldiv@divisor+3,w,c
  5400  00304A  5A04               	subwfb	___lldiv@dividend+3,f,c
  5401  00304C  8009               	bsf	___lldiv@quotient,0,c
  5402  00304E                     i2l4072:
  5403  00304E  90D8               	bcf	status,0,c
  5404  003050  3208               	rrcf	___lldiv@divisor+3,f,c
  5405  003052  3207               	rrcf	___lldiv@divisor+2,f,c
  5406  003054  3206               	rrcf	___lldiv@divisor+1,f,c
  5407  003056  3205               	rrcf	___lldiv@divisor,f,c
  5408  003058  2E0D               	decfsz	___lldiv@counter,f,c
  5409  00305A  D7E1               	goto	i2u338_40
  5410  00305C                     i2l555:
  5411  00305C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5412  003060  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5413  003064  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5414  003068  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5415  00306C  0012               	return		;funcret
  5416  00306E                     __end_of___lldiv:
  5417                           	opt callstack 0
  5418                           
  5419 ;; *************** function ___fltol *****************
  5420 ;; Defined at:
  5421 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  f1              4   39[COMRAM] unsigned long 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  exp1            1   48[COMRAM] unsigned char 
  5426 ;;  sign1           1   47[COMRAM] unsigned char 
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  4   39[COMRAM] long 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;Total ram usage:       10 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_sprintf
  5446 ;;		_left
  5447 ;;		_right
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text24
  5452  002DA0                     __ptext24:
  5453                           	opt callstack 0
  5454  002DA0                     ___fltol:
  5455                           	opt callstack 25
  5456                           
  5457                           ;incstack = 0
  5458  002DA0  342A               	rlcf	___fltol@f1+2,w,c
  5459  002DA2  342B               	rlcf	___fltol@f1+3,w,c
  5460  002DA4  6E31               	movwf	___fltol@exp1,c
  5461  002DA6  5031               	movf	___fltol@exp1,w,c
  5462  002DA8  A4D8               	btfss	status,2,c
  5463  002DAA  D009               	goto	i2l4272
  5464  002DAC                     i2u372_40:
  5465  002DAC  0E00               	movlw	0
  5466  002DAE  6E28               	movwf	?___fltol,c
  5467  002DB0  0E00               	movlw	0
  5468  002DB2  6E29               	movwf	?___fltol+1,c
  5469  002DB4  0E00               	movlw	0
  5470  002DB6  6E2A               	movwf	?___fltol+2,c
  5471  002DB8  0E00               	movlw	0
  5472  002DBA  6E2B               	movwf	?___fltol+3,c
  5473  002DBC  0012               	return	
  5474  002DBE                     i2l4272:
  5475  002DBE  C028  F02C         	movff	___fltol@f1,??___fltol
  5476  002DC2  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  5477  002DC6  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  5478  002DCA  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  5479  002DCE  0E20               	movlw	32
  5480  002DD0  D005               	goto	i2u373_40
  5481  002DD2                     i2u373_45:
  5482  002DD2  90D8               	bcf	status,0,c
  5483  002DD4  322F               	rrcf	??___fltol+3,f,c
  5484  002DD6  322E               	rrcf	??___fltol+2,f,c
  5485  002DD8  322D               	rrcf	??___fltol+1,f,c
  5486  002DDA  322C               	rrcf	??___fltol,f,c
  5487  002DDC                     i2u373_40:
  5488  002DDC  2EE8               	decfsz	wreg,f,c
  5489  002DDE  D7F9               	goto	i2u373_45
  5490  002DE0  502C               	movf	??___fltol,w,c
  5491  002DE2  6E30               	movwf	___fltol@sign1,c
  5492  002DE4  8E2A               	bsf	___fltol@f1+2,7,c
  5493  002DE6  0EFF               	movlw	255
  5494  002DE8  1628               	andwf	___fltol@f1,f,c
  5495  002DEA  0EFF               	movlw	255
  5496  002DEC  1629               	andwf	___fltol@f1+1,f,c
  5497  002DEE  0EFF               	movlw	255
  5498  002DF0  162A               	andwf	___fltol@f1+2,f,c
  5499  002DF2  0E00               	movlw	0
  5500  002DF4  162B               	andwf	___fltol@f1+3,f,c
  5501  002DF6  0E96               	movlw	150
  5502  002DF8  5E31               	subwf	___fltol@exp1,f,c
  5503  002DFA  AE31               	btfss	___fltol@exp1,7,c
  5504  002DFC  D00D               	goto	i2l4292
  5505  002DFE  5031               	movf	___fltol@exp1,w,c
  5506  002E00  0A80               	xorlw	128
  5507  002E02  0F97               	addlw	151
  5508  002E04  A0D8               	btfss	status,0,c
  5509  002E06  D7D2               	goto	i2u372_40
  5510  002E08                     i2l4288:
  5511  002E08  90D8               	bcf	status,0,c
  5512  002E0A  322B               	rrcf	___fltol@f1+3,f,c
  5513  002E0C  322A               	rrcf	___fltol@f1+2,f,c
  5514  002E0E  3229               	rrcf	___fltol@f1+1,f,c
  5515  002E10  3228               	rrcf	___fltol@f1,f,c
  5516  002E12  3E31               	incfsz	___fltol@exp1,f,c
  5517  002E14  D7F9               	goto	i2l4288
  5518  002E16  D00D               	goto	i2u377_40
  5519  002E18                     i2l4292:
  5520  002E18  0E1F               	movlw	31
  5521  002E1A  6431               	cpfsgt	___fltol@exp1,c
  5522  002E1C  D007               	goto	i2l4300
  5523  002E1E  D7C6               	goto	i2u372_40
  5524  002E20                     i2l4298:
  5525  002E20  90D8               	bcf	status,0,c
  5526  002E22  3628               	rlcf	___fltol@f1,f,c
  5527  002E24  3629               	rlcf	___fltol@f1+1,f,c
  5528  002E26  362A               	rlcf	___fltol@f1+2,f,c
  5529  002E28  362B               	rlcf	___fltol@f1+3,f,c
  5530  002E2A  0631               	decf	___fltol@exp1,f,c
  5531  002E2C                     i2l4300:
  5532  002E2C  5031               	movf	___fltol@exp1,w,c
  5533  002E2E  A4D8               	btfss	status,2,c
  5534  002E30  D7F7               	goto	i2l4298
  5535  002E32                     i2u377_40:
  5536  002E32  5030               	movf	___fltol@sign1,w,c
  5537  002E34  B4D8               	btfsc	status,2,c
  5538  002E36  D008               	goto	i2l4306
  5539  002E38  1E2B               	comf	___fltol@f1+3,f,c
  5540  002E3A  1E2A               	comf	___fltol@f1+2,f,c
  5541  002E3C  1E29               	comf	___fltol@f1+1,f,c
  5542  002E3E  6C28               	negf	___fltol@f1,c
  5543  002E40  0E00               	movlw	0
  5544  002E42  2229               	addwfc	___fltol@f1+1,f,c
  5545  002E44  222A               	addwfc	___fltol@f1+2,f,c
  5546  002E46  222B               	addwfc	___fltol@f1+3,f,c
  5547  002E48                     i2l4306:
  5548  002E48  C028  F028         	movff	___fltol@f1,?___fltol
  5549  002E4C  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  5550  002E50  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  5551  002E54  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  5552  002E58  0012               	return		;funcret
  5553  002E5A                     __end_of___fltol:
  5554                           	opt callstack 0
  5555                           
  5556 ;; *************** function ___flsub *****************
  5557 ;; Defined at:
  5558 ;;		line 245 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  b               4   68[COMRAM] long 
  5561 ;;  a               4   72[COMRAM] long 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  4   68[COMRAM] long 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, cstack
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5573 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;Total ram usage:        8 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    1
  5580 ;; This function calls:
  5581 ;;		___fladd
  5582 ;; This function is called by:
  5583 ;;		_sprintf
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text25
  5588  0032E4                     __ptext25:
  5589                           	opt callstack 0
  5590  0032E4                     ___flsub:
  5591                           	opt callstack 24
  5592                           
  5593                           ;incstack = 0
  5594  0032E4  0E00               	movlw	0
  5595  0032E6  1A49               	xorwf	___flsub@a,f,c
  5596  0032E8  0E00               	movlw	0
  5597  0032EA  1A4A               	xorwf	___flsub@a+1,f,c
  5598  0032EC  0E00               	movlw	0
  5599  0032EE  1A4B               	xorwf	___flsub@a+2,f,c
  5600  0032F0  0E80               	movlw	128
  5601  0032F2  1A4C               	xorwf	___flsub@a+3,f,c
  5602  0032F4  C045  F035         	movff	___flsub@b,___fladd@b
  5603  0032F8  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5604  0032FC  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5605  003300  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5606  003304  C049  F039         	movff	___flsub@a,___fladd@a
  5607  003308  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5608  00330C  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5609  003310  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5610  003314  ECAA  F00F         	call	___fladd	;wreg free
  5611  003318  C035  F045         	movff	?___fladd,?___flsub
  5612  00331C  C036  F046         	movff	?___fladd+1,?___flsub+1
  5613  003320  C037  F047         	movff	?___fladd+2,?___flsub+2
  5614  003324  C038  F048         	movff	?___fladd+3,?___flsub+3
  5615  003328  0012               	return		;funcret
  5616  00332A                     __end_of___flsub:
  5617                           	opt callstack 0
  5618                           
  5619 ;; *************** function ___fladd *****************
  5620 ;; Defined at:
  5621 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  b               4   52[COMRAM] long 
  5624 ;;  a               4   56[COMRAM] long 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  grs             1   67[COMRAM] unsigned char 
  5627 ;;  bexp            1   66[COMRAM] unsigned char 
  5628 ;;  aexp            1   65[COMRAM] unsigned char 
  5629 ;;  signs           1   64[COMRAM] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  4   52[COMRAM] unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5639 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:       16 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_sprintf
  5649 ;;		___flsub
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text26
  5654  001F54                     __ptext26:
  5655                           	opt callstack 0
  5656  001F54                     ___fladd:
  5657                           	opt callstack 24
  5658                           
  5659                           ;incstack = 0
  5660  001F54  5038               	movf	___fladd@b+3,w,c
  5661  001F56  0B80               	andlw	128
  5662  001F58  6E41               	movwf	___fladd@signs,c
  5663  001F5A  5038               	movf	___fladd@b+3,w,c
  5664  001F5C  2438               	addwf	___fladd@b+3,w,c
  5665  001F5E  6E43               	movwf	___fladd@bexp,c
  5666  001F60  BE37               	btfsc	___fladd@b+2,7,c
  5667  001F62  8043               	bsf	___fladd@bexp,0,c
  5668  001F64  5043               	movf	___fladd@bexp,w,c
  5669  001F66  B4D8               	btfsc	status,2,c
  5670  001F68  D00D               	goto	i2l3340
  5671  001F6A  2843               	incf	___fladd@bexp,w,c
  5672  001F6C  A4D8               	btfss	status,2,c
  5673  001F6E  D008               	goto	i2l3336
  5674  001F70  0E00               	movlw	0
  5675  001F72  6E35               	movwf	___fladd@b,c
  5676  001F74  0E00               	movlw	0
  5677  001F76  6E36               	movwf	___fladd@b+1,c
  5678  001F78  0E00               	movlw	0
  5679  001F7A  6E37               	movwf	___fladd@b+2,c
  5680  001F7C  0E00               	movlw	0
  5681  001F7E  6E38               	movwf	___fladd@b+3,c
  5682  001F80                     i2l3336:
  5683  001F80  8E37               	bsf	___fladd@b+2,7,c
  5684  001F82  D006               	goto	L10
  5685  001F84                     i2l3340:
  5686  001F84  0E00               	movlw	0
  5687  001F86  6E35               	movwf	___fladd@b,c
  5688  001F88  0E00               	movlw	0
  5689  001F8A  6E36               	movwf	___fladd@b+1,c
  5690  001F8C  0E00               	movlw	0
  5691  001F8E  6E37               	movwf	___fladd@b+2,c
  5692  001F90                     L10:
  5693  001F90  0E00               	movlw	0
  5694  001F92  6E38               	movwf	___fladd@b+3,c
  5695  001F94  503C               	movf	___fladd@a+3,w,c
  5696  001F96  0B80               	andlw	128
  5697  001F98  6E42               	movwf	___fladd@aexp,c
  5698  001F9A  5041               	movf	___fladd@signs,w,c
  5699  001F9C  1842               	xorwf	___fladd@aexp,w,c
  5700  001F9E  A4D8               	btfss	status,2,c
  5701  001FA0  8C41               	bsf	___fladd@signs,6,c
  5702  001FA2  503C               	movf	___fladd@a+3,w,c
  5703  001FA4  243C               	addwf	___fladd@a+3,w,c
  5704  001FA6  6E42               	movwf	___fladd@aexp,c
  5705  001FA8  BE3B               	btfsc	___fladd@a+2,7,c
  5706  001FAA  8042               	bsf	___fladd@aexp,0,c
  5707  001FAC  5042               	movf	___fladd@aexp,w,c
  5708  001FAE  B4D8               	btfsc	status,2,c
  5709  001FB0  D00D               	goto	i2l3364
  5710  001FB2  2842               	incf	___fladd@aexp,w,c
  5711  001FB4  A4D8               	btfss	status,2,c
  5712  001FB6  D008               	goto	i2l3360
  5713  001FB8  0E00               	movlw	0
  5714  001FBA  6E39               	movwf	___fladd@a,c
  5715  001FBC  0E00               	movlw	0
  5716  001FBE  6E3A               	movwf	___fladd@a+1,c
  5717  001FC0  0E00               	movlw	0
  5718  001FC2  6E3B               	movwf	___fladd@a+2,c
  5719  001FC4  0E00               	movlw	0
  5720  001FC6  6E3C               	movwf	___fladd@a+3,c
  5721  001FC8                     i2l3360:
  5722  001FC8  8E3B               	bsf	___fladd@a+2,7,c
  5723  001FCA  D006               	goto	L11
  5724  001FCC                     i2l3364:
  5725  001FCC  0E00               	movlw	0
  5726  001FCE  6E39               	movwf	___fladd@a,c
  5727  001FD0  0E00               	movlw	0
  5728  001FD2  6E3A               	movwf	___fladd@a+1,c
  5729  001FD4  0E00               	movlw	0
  5730  001FD6  6E3B               	movwf	___fladd@a+2,c
  5731  001FD8                     L11:
  5732  001FD8  0E00               	movlw	0
  5733  001FDA  6E3C               	movwf	___fladd@a+3,c
  5734  001FDC  5043               	movf	___fladd@bexp,w,c
  5735  001FDE  5C42               	subwf	___fladd@aexp,w,c
  5736  001FE0  B0D8               	btfsc	status,0,c
  5737  001FE2  D022               	goto	i2l3402
  5738  001FE4  AC41               	btfss	___fladd@signs,6,c
  5739  001FE6  D002               	goto	i2l3372
  5740  001FE8  0E80               	movlw	128
  5741  001FEA  1A41               	xorwf	___fladd@signs,f,c
  5742  001FEC                     i2l3372:
  5743  001FEC  C043  F044         	movff	___fladd@bexp,___fladd@grs
  5744  001FF0  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5745  001FF4  C044  F042         	movff	___fladd@grs,___fladd@aexp
  5746  001FF8  C035  F044         	movff	___fladd@b,___fladd@grs
  5747  001FFC  C039  F035         	movff	___fladd@a,___fladd@b
  5748  002000  C044  F039         	movff	___fladd@grs,___fladd@a
  5749  002004  C036  F044         	movff	___fladd@b+1,___fladd@grs
  5750  002008  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  5751  00200C  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  5752  002010  C037  F044         	movff	___fladd@b+2,___fladd@grs
  5753  002014  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  5754  002018  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  5755  00201C  C038  F044         	movff	___fladd@b+3,___fladd@grs
  5756  002020  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  5757  002024  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  5758  002028                     i2l3402:
  5759  002028  0E00               	movlw	0
  5760  00202A  6E44               	movwf	___fladd@grs,c
  5761  00202C  5043               	movf	___fladd@bexp,w,c
  5762  00202E  C042  F03D         	movff	___fladd@aexp,??___fladd
  5763  002032  6A3E               	clrf	(??___fladd+1)& (0+255),c
  5764  002034  5E3D               	subwf	??___fladd,f,c
  5765  002036  0E00               	movlw	0
  5766  002038  5A3E               	subwfb	??___fladd+1,f,c
  5767  00203A  BE3E               	btfsc	??___fladd+1,7,c
  5768  00203C  D02C               	goto	i2l1079
  5769  00203E  503E               	movf	??___fladd+1,w,c
  5770  002040  E104               	bnz	i2u243_40
  5771  002042  0E1A               	movlw	26
  5772  002044  5C3D               	subwf	??___fladd,w,c
  5773  002046  A0D8               	btfss	status,0,c
  5774  002048  D026               	goto	i2l1079
  5775  00204A                     i2u243_40:
  5776  00204A  5035               	movf	___fladd@b,w,c
  5777  00204C  1036               	iorwf	___fladd@b+1,w,c
  5778  00204E  1037               	iorwf	___fladd@b+2,w,c
  5779  002050  1038               	iorwf	___fladd@b+3,w,c
  5780  002052  B4D8               	btfsc	status,2,c
  5781  002054  D002               	goto	i2u244_40
  5782  002056  0E01               	movlw	1
  5783  002058  D001               	goto	i2u245_40
  5784  00205A                     i2u244_40:
  5785  00205A  0E00               	movlw	0
  5786  00205C                     i2u245_40:
  5787  00205C  6E44               	movwf	___fladd@grs,c
  5788  00205E  0E00               	movlw	0
  5789  002060  6E35               	movwf	___fladd@b,c
  5790  002062  0E00               	movlw	0
  5791  002064  6E36               	movwf	___fladd@b+1,c
  5792  002066  0E00               	movlw	0
  5793  002068  6E37               	movwf	___fladd@b+2,c
  5794  00206A  0E00               	movlw	0
  5795  00206C  6E38               	movwf	___fladd@b+3,c
  5796  00206E  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5797  002072  D015               	goto	i2u248_40
  5798  002074                     i2l1080:
  5799  002074  A044               	btfss	___fladd@grs,0,c
  5800  002076  D005               	goto	i2l3414
  5801  002078  90D8               	bcf	status,0,c
  5802  00207A  3044               	rrcf	___fladd@grs,w,c
  5803  00207C  0901               	iorlw	1
  5804  00207E  6E44               	movwf	___fladd@grs,c
  5805  002080  D002               	goto	i2l3416
  5806  002082                     i2l3414:
  5807  002082  90D8               	bcf	status,0,c
  5808  002084  3244               	rrcf	___fladd@grs,f,c
  5809  002086                     i2l3416:
  5810  002086  B035               	btfsc	___fladd@b,0,c
  5811  002088  8E44               	bsf	___fladd@grs,7,c
  5812  00208A  3438               	rlcf	___fladd@b+3,w,c
  5813  00208C  3238               	rrcf	___fladd@b+3,f,c
  5814  00208E  3237               	rrcf	___fladd@b+2,f,c
  5815  002090  3236               	rrcf	___fladd@b+1,f,c
  5816  002092  3235               	rrcf	___fladd@b,f,c
  5817  002094  2A43               	incf	___fladd@bexp,f,c
  5818  002096                     i2l1079:
  5819  002096  5042               	movf	___fladd@aexp,w,c
  5820  002098  5C43               	subwf	___fladd@bexp,w,c
  5821  00209A  A0D8               	btfss	status,0,c
  5822  00209C  D7EB               	goto	i2l1080
  5823  00209E                     i2u248_40:
  5824  00209E  BC41               	btfsc	___fladd@signs,6,c
  5825  0020A0  D028               	goto	i2l3448
  5826  0020A2  5043               	movf	___fladd@bexp,w,c
  5827  0020A4  A4D8               	btfss	status,2,c
  5828  0020A6  D009               	goto	i2l3430
  5829  0020A8  0E00               	movlw	0
  5830  0020AA  6E35               	movwf	?___fladd,c
  5831  0020AC  0E00               	movlw	0
  5832  0020AE  6E36               	movwf	?___fladd+1,c
  5833  0020B0  0E00               	movlw	0
  5834  0020B2  6E37               	movwf	?___fladd+2,c
  5835  0020B4  0E00               	movlw	0
  5836  0020B6  6E38               	movwf	?___fladd+3,c
  5837  0020B8  0012               	return	
  5838  0020BA                     i2l3430:
  5839  0020BA  5039               	movf	___fladd@a,w,c
  5840  0020BC  2635               	addwf	___fladd@b,f,c
  5841  0020BE  503A               	movf	___fladd@a+1,w,c
  5842  0020C0  2236               	addwfc	___fladd@b+1,f,c
  5843  0020C2  503B               	movf	___fladd@a+2,w,c
  5844  0020C4  2237               	addwfc	___fladd@b+2,f,c
  5845  0020C6  503C               	movf	___fladd@a+3,w,c
  5846  0020C8  2238               	addwfc	___fladd@b+3,f,c
  5847  0020CA  A038               	btfss	___fladd@b+3,0,c
  5848  0020CC  D071               	goto	i2u261_40
  5849  0020CE  A044               	btfss	___fladd@grs,0,c
  5850  0020D0  D005               	goto	i2l3438
  5851  0020D2  90D8               	bcf	status,0,c
  5852  0020D4  3044               	rrcf	___fladd@grs,w,c
  5853  0020D6  0901               	iorlw	1
  5854  0020D8  6E44               	movwf	___fladd@grs,c
  5855  0020DA  D002               	goto	i2l3440
  5856  0020DC                     i2l3438:
  5857  0020DC  90D8               	bcf	status,0,c
  5858  0020DE  3244               	rrcf	___fladd@grs,f,c
  5859  0020E0                     i2l3440:
  5860  0020E0  B035               	btfsc	___fladd@b,0,c
  5861  0020E2  8E44               	bsf	___fladd@grs,7,c
  5862  0020E4  3438               	rlcf	___fladd@b+3,w,c
  5863  0020E6  3238               	rrcf	___fladd@b+3,f,c
  5864  0020E8  3237               	rrcf	___fladd@b+2,f,c
  5865  0020EA  3236               	rrcf	___fladd@b+1,f,c
  5866  0020EC  3235               	rrcf	___fladd@b,f,c
  5867  0020EE  2A43               	incf	___fladd@bexp,f,c
  5868  0020F0  D05F               	goto	i2u261_40
  5869  0020F2                     i2l3448:
  5870  0020F2  5039               	movf	___fladd@a,w,c
  5871  0020F4  5C35               	subwf	___fladd@b,w,c
  5872  0020F6  503A               	movf	___fladd@a+1,w,c
  5873  0020F8  5836               	subwfb	___fladd@b+1,w,c
  5874  0020FA  503B               	movf	___fladd@a+2,w,c
  5875  0020FC  5837               	subwfb	___fladd@b+2,w,c
  5876  0020FE  5038               	movf	___fladd@b+3,w,c
  5877  002100  0A80               	xorlw	128
  5878  002102  6E3D               	movwf	??___fladd& (0+255),c
  5879  002104  503C               	movf	___fladd@a+3,w,c
  5880  002106  0A80               	xorlw	128
  5881  002108  583D               	subwfb	??___fladd& (0+255),w,c
  5882  00210A  B0D8               	btfsc	status,0,c
  5883  00210C  D025               	goto	i2l3458
  5884  00210E  5035               	movf	___fladd@b,w,c
  5885  002110  5C39               	subwf	___fladd@a,w,c
  5886  002112  6E3D               	movwf	??___fladd& (0+255),c
  5887  002114  5036               	movf	___fladd@b+1,w,c
  5888  002116  583A               	subwfb	___fladd@a+1,w,c
  5889  002118  6E3E               	movwf	(??___fladd+1)& (0+255),c
  5890  00211A  5037               	movf	___fladd@b+2,w,c
  5891  00211C  583B               	subwfb	___fladd@a+2,w,c
  5892  00211E  6E3F               	movwf	(??___fladd+2)& (0+255),c
  5893  002120  5038               	movf	___fladd@b+3,w,c
  5894  002122  583C               	subwfb	___fladd@a+3,w,c
  5895  002124  6E40               	movwf	(??___fladd+3)& (0+255),c
  5896  002126  0EFF               	movlw	255
  5897  002128  243D               	addwf	??___fladd,w,c
  5898  00212A  6E35               	movwf	___fladd@b,c
  5899  00212C  0EFF               	movlw	255
  5900  00212E  203E               	addwfc	??___fladd+1,w,c
  5901  002130  6E36               	movwf	___fladd@b+1,c
  5902  002132  0EFF               	movlw	255
  5903  002134  203F               	addwfc	??___fladd+2,w,c
  5904  002136  6E37               	movwf	___fladd@b+2,c
  5905  002138  0EFF               	movlw	255
  5906  00213A  2040               	addwfc	??___fladd+3,w,c
  5907  00213C  6E38               	movwf	___fladd@b+3,c
  5908  00213E  0E80               	movlw	128
  5909  002140  1A41               	xorwf	___fladd@signs,f,c
  5910  002142  6C44               	negf	___fladd@grs,c
  5911  002144  5044               	movf	___fladd@grs,w,c
  5912  002146  A4D8               	btfss	status,2,c
  5913  002148  D00F               	goto	i2l1095
  5914  00214A  0E01               	movlw	1
  5915  00214C  2635               	addwf	___fladd@b,f,c
  5916  00214E  0E00               	movlw	0
  5917  002150  2236               	addwfc	___fladd@b+1,f,c
  5918  002152  2237               	addwfc	___fladd@b+2,f,c
  5919  002154  2238               	addwfc	___fladd@b+3,f,c
  5920  002156  D008               	goto	i2l1095
  5921  002158                     i2l3458:
  5922  002158  5039               	movf	___fladd@a,w,c
  5923  00215A  5E35               	subwf	___fladd@b,f,c
  5924  00215C  503A               	movf	___fladd@a+1,w,c
  5925  00215E  5A36               	subwfb	___fladd@b+1,f,c
  5926  002160  503B               	movf	___fladd@a+2,w,c
  5927  002162  5A37               	subwfb	___fladd@b+2,f,c
  5928  002164  503C               	movf	___fladd@a+3,w,c
  5929  002166  5A38               	subwfb	___fladd@b+3,f,c
  5930  002168                     i2l1095:
  5931  002168  5035               	movf	___fladd@b,w,c
  5932  00216A  1036               	iorwf	___fladd@b+1,w,c
  5933  00216C  1037               	iorwf	___fladd@b+2,w,c
  5934  00216E  1038               	iorwf	___fladd@b+3,w,c
  5935  002170  A4D8               	btfss	status,2,c
  5936  002172  D01C               	goto	i2l3482
  5937  002174  5044               	movf	___fladd@grs,w,c
  5938  002176  A4D8               	btfss	status,2,c
  5939  002178  D019               	goto	i2l3482
  5940  00217A  0E00               	movlw	0
  5941  00217C  6E35               	movwf	?___fladd,c
  5942  00217E  0E00               	movlw	0
  5943  002180  6E36               	movwf	?___fladd+1,c
  5944  002182  0E00               	movlw	0
  5945  002184  6E37               	movwf	?___fladd+2,c
  5946  002186  0E00               	movlw	0
  5947  002188  6E38               	movwf	?___fladd+3,c
  5948  00218A  0012               	return	
  5949  00218C                     i2l3466:
  5950  00218C  90D8               	bcf	status,0,c
  5951  00218E  3635               	rlcf	___fladd@b,f,c
  5952  002190  3636               	rlcf	___fladd@b+1,f,c
  5953  002192  3637               	rlcf	___fladd@b+2,f,c
  5954  002194  3638               	rlcf	___fladd@b+3,f,c
  5955  002196  BE44               	btfsc	___fladd@grs,7,c
  5956  002198  8035               	bsf	___fladd@b,0,c
  5957  00219A  A044               	btfss	___fladd@grs,0,c
  5958  00219C  D002               	goto	i2l3476
  5959  00219E  80D8               	bsf	status,0,c
  5960  0021A0  D001               	goto	L12
  5961  0021A2                     i2l3476:
  5962  0021A2  90D8               	bcf	status,0,c
  5963  0021A4                     L12:
  5964  0021A4  3644               	rlcf	___fladd@grs,f,c
  5965  0021A6  5043               	movf	___fladd@bexp,w,c
  5966  0021A8  A4D8               	btfss	status,2,c
  5967  0021AA  0643               	decf	___fladd@bexp,f,c
  5968  0021AC                     i2l3482:
  5969  0021AC  AE37               	btfss	___fladd@b+2,7,c
  5970  0021AE  D7EE               	goto	i2l3466
  5971  0021B0                     i2u261_40:
  5972  0021B0  0E00               	movlw	0
  5973  0021B2  6E42               	movwf	___fladd@aexp,c
  5974  0021B4  AE44               	btfss	___fladd@grs,7,c
  5975  0021B6  D00B               	goto	i2l1104
  5976  0021B8  C044  F03D         	movff	___fladd@grs,??___fladd
  5977  0021BC  0E7F               	movlw	127
  5978  0021BE  163D               	andwf	??___fladd,f,c
  5979  0021C0  B4D8               	btfsc	status,2,c
  5980  0021C2  D003               	goto	i2l1105
  5981  0021C4                     i2u263_40:
  5982  0021C4  0E01               	movlw	1
  5983  0021C6  6E42               	movwf	___fladd@aexp,c
  5984  0021C8  D002               	goto	i2l1104
  5985  0021CA                     i2l1105:
  5986  0021CA  B035               	btfsc	___fladd@b,0,c
  5987  0021CC  D7FB               	goto	i2u263_40
  5988  0021CE                     i2l1104:
  5989  0021CE  5042               	movf	___fladd@aexp,w,c
  5990  0021D0  B4D8               	btfsc	status,2,c
  5991  0021D2  D020               	goto	i2l3502
  5992  0021D4  0E01               	movlw	1
  5993  0021D6  2635               	addwf	___fladd@b,f,c
  5994  0021D8  0E00               	movlw	0
  5995  0021DA  2236               	addwfc	___fladd@b+1,f,c
  5996  0021DC  2237               	addwfc	___fladd@b+2,f,c
  5997  0021DE  2238               	addwfc	___fladd@b+3,f,c
  5998  0021E0  A038               	btfss	___fladd@b+3,0,c
  5999  0021E2  D018               	goto	i2l3502
  6000  0021E4  C035  F03D         	movff	___fladd@b,??___fladd
  6001  0021E8  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  6002  0021EC  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  6003  0021F0  C038  F040         	movff	___fladd@b+3,??___fladd+3
  6004  0021F4  3440               	rlcf	??___fladd+3,w,c
  6005  0021F6  3240               	rrcf	??___fladd+3,f,c
  6006  0021F8  323F               	rrcf	??___fladd+2,f,c
  6007  0021FA  323E               	rrcf	??___fladd+1,f,c
  6008  0021FC  323D               	rrcf	??___fladd,f,c
  6009  0021FE  C03D  F035         	movff	??___fladd,___fladd@b
  6010  002202  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  6011  002206  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  6012  00220A  C040  F038         	movff	??___fladd+3,___fladd@b+3
  6013  00220E  2843               	incf	___fladd@bexp,w,c
  6014  002210  A4D8               	btfss	status,2,c
  6015  002212  2A43               	incf	___fladd@bexp,f,c
  6016  002214                     i2l3502:
  6017  002214  2843               	incf	___fladd@bexp,w,c
  6018  002216  B4D8               	btfsc	status,2,c
  6019  002218  D003               	goto	i2u269_40
  6020  00221A  5043               	movf	___fladd@bexp,w,c
  6021  00221C  A4D8               	btfss	status,2,c
  6022  00221E  D00D               	goto	i2l3510
  6023  002220                     i2u269_40:
  6024  002220  0E00               	movlw	0
  6025  002222  6E35               	movwf	___fladd@b,c
  6026  002224  0E00               	movlw	0
  6027  002226  6E36               	movwf	___fladd@b+1,c
  6028  002228  0E00               	movlw	0
  6029  00222A  6E37               	movwf	___fladd@b+2,c
  6030  00222C  0E00               	movlw	0
  6031  00222E  6E38               	movwf	___fladd@b+3,c
  6032  002230  5043               	movf	___fladd@bexp,w,c
  6033  002232  A4D8               	btfss	status,2,c
  6034  002234  D002               	goto	i2l3510
  6035  002236  0E00               	movlw	0
  6036  002238  6E41               	movwf	___fladd@signs,c
  6037  00223A                     i2l3510:
  6038  00223A  A043               	btfss	___fladd@bexp,0,c
  6039  00223C  D002               	goto	i2l3514
  6040  00223E  8E37               	bsf	___fladd@b+2,7,c
  6041  002240  D001               	goto	i2l3516
  6042  002242                     i2l3514:
  6043  002242  9E37               	bcf	___fladd@b+2,7,c
  6044  002244                     i2l3516:
  6045  002244  90D8               	bcf	status,0,c
  6046  002246  3043               	rrcf	___fladd@bexp,w,c
  6047  002248  6E38               	movwf	___fladd@b+3,c
  6048  00224A  BE41               	btfsc	___fladd@signs,7,c
  6049  00224C  8E38               	bsf	___fladd@b+3,7,c
  6050  00224E  C035  F035         	movff	___fladd@b,?___fladd
  6051  002252  C036  F036         	movff	___fladd@b+1,?___fladd+1
  6052  002256  C037  F037         	movff	___fladd@b+2,?___fladd+2
  6053  00225A  C038  F038         	movff	___fladd@b+3,?___fladd+3
  6054  00225E  0012               	return		;funcret
  6055  002260                     __end_of___fladd:
  6056                           	opt callstack 0
  6057                           
  6058 ;; *************** function ___flneg *****************
  6059 ;; Defined at:
  6060 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  f1              4    0[COMRAM] unsigned char 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  4    0[COMRAM] unsigned char 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;Total ram usage:        4 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_sprintf
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text27
  6088  003406                     __ptext27:
  6089                           	opt callstack 0
  6090  003406                     ___flneg:
  6091                           	opt callstack 25
  6092                           
  6093                           ;incstack = 0
  6094  003406  5001               	movf	___flneg@f1,w,c
  6095  003408  1002               	iorwf	___flneg@f1+1,w,c
  6096  00340A  1003               	iorwf	___flneg@f1+2,w,c
  6097  00340C  1004               	iorwf	___flneg@f1+3,w,c
  6098  00340E  B4D8               	btfsc	status,2,c
  6099  003410  D008               	goto	i2l4262
  6100  003412  0E00               	movlw	0
  6101  003414  1A01               	xorwf	___flneg@f1,f,c
  6102  003416  0E00               	movlw	0
  6103  003418  1A02               	xorwf	___flneg@f1+1,f,c
  6104  00341A  0E00               	movlw	0
  6105  00341C  1A03               	xorwf	___flneg@f1+2,f,c
  6106  00341E  0E80               	movlw	128
  6107  003420  1A04               	xorwf	___flneg@f1+3,f,c
  6108  003422                     i2l4262:
  6109  003422  C001  F001         	movff	___flneg@f1,?___flneg
  6110  003426  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6111  00342A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6112  00342E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6113  003432  0012               	return		;funcret
  6114  003434                     __end_of___flneg:
  6115                           	opt callstack 0
  6116                           
  6117 ;; *************** function ___fleq *****************
  6118 ;; Defined at:
  6119 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  ff1             4    0[COMRAM] unsigned char 
  6122 ;;  ff2             4    4[COMRAM] unsigned char 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;		None
  6125 ;; Return value:  Size  Location     Type
  6126 ;;		None               void
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, status,0
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6134 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;Total ram usage:       12 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_sprintf
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text28
  6148  002E5A                     __ptext28:
  6149                           	opt callstack 0
  6150  002E5A                     ___fleq:
  6151                           	opt callstack 25
  6152                           
  6153                           ;incstack = 0
  6154  002E5A  0E00               	movlw	0
  6155  002E5C  1401               	andwf	___fleq@ff1,w,c
  6156  002E5E  6E09               	movwf	??___fleq& (0+255),c
  6157  002E60  0E00               	movlw	0
  6158  002E62  1402               	andwf	___fleq@ff1+1,w,c
  6159  002E64  6E0A               	movwf	(??___fleq+1)& (0+255),c
  6160  002E66  0E80               	movlw	128
  6161  002E68  1403               	andwf	___fleq@ff1+2,w,c
  6162  002E6A  6E0B               	movwf	(??___fleq+2)& (0+255),c
  6163  002E6C  0E7F               	movlw	127
  6164  002E6E  1404               	andwf	___fleq@ff1+3,w,c
  6165  002E70  6E0C               	movwf	(??___fleq+3)& (0+255),c
  6166  002E72  5009               	movf	??___fleq,w,c
  6167  002E74  100A               	iorwf	??___fleq+1,w,c
  6168  002E76  100B               	iorwf	??___fleq+2,w,c
  6169  002E78  100C               	iorwf	??___fleq+3,w,c
  6170  002E7A  A4D8               	btfss	status,2,c
  6171  002E7C  D008               	goto	i2l4224
  6172  002E7E  0E00               	movlw	0
  6173  002E80  6E01               	movwf	___fleq@ff1,c
  6174  002E82  0E00               	movlw	0
  6175  002E84  6E02               	movwf	___fleq@ff1+1,c
  6176  002E86  0E00               	movlw	0
  6177  002E88  6E03               	movwf	___fleq@ff1+2,c
  6178  002E8A  0E00               	movlw	0
  6179  002E8C  6E04               	movwf	___fleq@ff1+3,c
  6180  002E8E                     i2l4224:
  6181  002E8E  0E00               	movlw	0
  6182  002E90  1405               	andwf	___fleq@ff2,w,c
  6183  002E92  6E09               	movwf	??___fleq& (0+255),c
  6184  002E94  0E00               	movlw	0
  6185  002E96  1406               	andwf	___fleq@ff2+1,w,c
  6186  002E98  6E0A               	movwf	(??___fleq+1)& (0+255),c
  6187  002E9A  0E80               	movlw	128
  6188  002E9C  1407               	andwf	___fleq@ff2+2,w,c
  6189  002E9E  6E0B               	movwf	(??___fleq+2)& (0+255),c
  6190  002EA0  0E7F               	movlw	127
  6191  002EA2  1408               	andwf	___fleq@ff2+3,w,c
  6192  002EA4  6E0C               	movwf	(??___fleq+3)& (0+255),c
  6193  002EA6  5009               	movf	??___fleq,w,c
  6194  002EA8  100A               	iorwf	??___fleq+1,w,c
  6195  002EAA  100B               	iorwf	??___fleq+2,w,c
  6196  002EAC  100C               	iorwf	??___fleq+3,w,c
  6197  002EAE  A4D8               	btfss	status,2,c
  6198  002EB0  D008               	goto	i2l4228
  6199  002EB2  0E00               	movlw	0
  6200  002EB4  6E05               	movwf	___fleq@ff2,c
  6201  002EB6  0E00               	movlw	0
  6202  002EB8  6E06               	movwf	___fleq@ff2+1,c
  6203  002EBA  0E00               	movlw	0
  6204  002EBC  6E07               	movwf	___fleq@ff2+2,c
  6205  002EBE  0E00               	movlw	0
  6206  002EC0  6E08               	movwf	___fleq@ff2+3,c
  6207  002EC2                     i2l4228:
  6208  002EC2  5005               	movf	___fleq@ff2,w,c
  6209  002EC4  1801               	xorwf	___fleq@ff1,w,c
  6210  002EC6  E10A               	bnz	i2u365_40
  6211  002EC8  5006               	movf	___fleq@ff2+1,w,c
  6212  002ECA  1802               	xorwf	___fleq@ff1+1,w,c
  6213  002ECC  E107               	bnz	i2u365_40
  6214  002ECE  5007               	movf	___fleq@ff2+2,w,c
  6215  002ED0  1803               	xorwf	___fleq@ff1+2,w,c
  6216  002ED2  E104               	bnz	i2u365_40
  6217  002ED4  5008               	movf	___fleq@ff2+3,w,c
  6218  002ED6  1804               	xorwf	___fleq@ff1+3,w,c
  6219  002ED8  B4D8               	btfsc	status,2,c
  6220  002EDA  D002               	goto	i2l4232
  6221  002EDC                     i2u365_40:
  6222  002EDC  90D8               	bcf	status,0,c
  6223  002EDE  0012               	return	
  6224  002EE0                     i2l4232:
  6225  002EE0  80D8               	bsf	status,0,c
  6226  002EE2  0012               	return		;funcret
  6227  002EE4                     __end_of___fleq:
  6228                           	opt callstack 0
  6229                           
  6230 ;; *************** function _read_Ubat *****************
  6231 ;; Defined at:
  6232 ;;		line 63 in file "pwm_config.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;		None
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  4   39[COMRAM] float 
  6239 ;; Registers used:
  6240 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;Total ram usage:        5 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; Hardware stack levels required when called:    1
  6253 ;; This function calls:
  6254 ;;		___fldiv
  6255 ;;		___flge
  6256 ;;		___flmul
  6257 ;;		___xxtofl
  6258 ;; This function is called by:
  6259 ;;		_serial
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text29
  6264  0028B2                     __ptext29:
  6265                           	opt callstack 0
  6266  0028B2                     _read_Ubat:
  6267                           	opt callstack 25
  6268                           
  6269                           ;pwm_config.c: 65: ADCON0=0b00000111;
  6270                           
  6271                           ;incstack = 0
  6272  0028B2  0E07               	movlw	7
  6273  0028B4  6EC2               	movwf	4034,c	;volatile
  6274                           
  6275                           ;pwm_config.c: 66: _delay((unsigned long)((10)*(64000000/4000.0)));
  6276  0028B6  0ED0               	movlw	208
  6277  0028B8  6E2C               	movwf	??_read_Ubat& (0+255),c
  6278  0028BA  0ECA               	movlw	202
  6279  0028BC                     i2u481_47:
  6280  0028BC  2EE8               	decfsz	wreg,f,c
  6281  0028BE  D7FE               	bra	i2u481_47
  6282  0028C0  2E2C               	decfsz	??_read_Ubat& (0+255),f,c
  6283  0028C2  D7FC               	bra	i2u481_47
  6284                           
  6285                           ;pwm_config.c: 67: ADCON0bits.GO=1;
  6286  0028C4  82C2               	bsf	4034,1,c	;volatile
  6287                           
  6288                           ;pwm_config.c: 68: _delay((unsigned long)((10)*(64000000/4000.0)));
  6289  0028C6  0ED0               	movlw	208
  6290  0028C8  6E2C               	movwf	??_read_Ubat& (0+255),c
  6291  0028CA  0ECA               	movlw	202
  6292  0028CC                     i2u482_47:
  6293  0028CC  2EE8               	decfsz	wreg,f,c
  6294  0028CE  D7FE               	bra	i2u482_47
  6295  0028D0  2E2C               	decfsz	??_read_Ubat& (0+255),f,c
  6296  0028D2  D7FC               	bra	i2u482_47
  6297                           
  6298                           ;pwm_config.c: 69: rez_adc_U=ADRESH;
  6299  0028D4  50C4               	movf	4036,w,c	;volatile
  6300  0028D6  6E01               	movwf	___xxtofl@val,c
  6301  0028D8  6A02               	clrf	___xxtofl@val+1,c
  6302  0028DA  6A03               	clrf	___xxtofl@val+2,c
  6303  0028DC  6A04               	clrf	___xxtofl@val+3,c
  6304  0028DE  0E00               	movlw	0
  6305  0028E0  ECB9  F013         	call	___xxtofl
  6306  0028E4  C001  F0C3         	movff	?___xxtofl,_rez_adc_U
  6307  0028E8  C002  F0C4         	movff	?___xxtofl+1,_rez_adc_U+1
  6308  0028EC  C003  F0C5         	movff	?___xxtofl+2,_rez_adc_U+2
  6309  0028F0  C004  F0C6         	movff	?___xxtofl+3,_rez_adc_U+3
  6310                           
  6311                           ;pwm_config.c: 70: tens=rez_adc_U*0.012890625;
  6312  0028F4  C0C3  F00F         	movff	_rez_adc_U,___flmul@b
  6313  0028F8  C0C4  F010         	movff	_rez_adc_U+1,___flmul@b+1
  6314  0028FC  C0C5  F011         	movff	_rez_adc_U+2,___flmul@b+2
  6315  002900  C0C6  F012         	movff	_rez_adc_U+3,___flmul@b+3
  6316  002904  0E33               	movlw	51
  6317  002906  6E13               	movwf	___flmul@a,c
  6318  002908  0E33               	movlw	51
  6319  00290A  6E14               	movwf	___flmul@a+1,c
  6320  00290C  0E53               	movlw	83
  6321  00290E  6E15               	movwf	___flmul@a+2,c
  6322  002910  0E3C               	movlw	60
  6323  002912  6E16               	movwf	___flmul@a+3,c
  6324  002914  EC01  F00E         	call	___flmul	;wreg free
  6325  002918  C00F  F0BB         	movff	?___flmul,_tens
  6326  00291C  C010  F0BC         	movff	?___flmul+1,_tens+1
  6327  002920  C011  F0BD         	movff	?___flmul+2,_tens+2
  6328  002924  C012  F0BE         	movff	?___flmul+3,_tens+3
  6329                           
  6330                           ;pwm_config.c: 71: Ubat=tens/0.2;
  6331  002928  C0BB  F001         	movff	_tens,___fldiv@b
  6332  00292C  C0BC  F002         	movff	_tens+1,___fldiv@b+1
  6333  002930  C0BD  F003         	movff	_tens+2,___fldiv@b+2
  6334  002934  C0BE  F004         	movff	_tens+3,___fldiv@b+3
  6335  002938  0ECD               	movlw	205
  6336  00293A  6E05               	movwf	___fldiv@a,c
  6337  00293C  0ECC               	movlw	204
  6338  00293E  6E06               	movwf	___fldiv@a+1,c
  6339  002940  0E4C               	movlw	76
  6340  002942  6E07               	movwf	___fldiv@a+2,c
  6341  002944  0E3E               	movlw	62
  6342  002946  6E08               	movwf	___fldiv@a+3,c
  6343  002948  EC75  F012         	call	___fldiv	;wreg free
  6344  00294C  C001  F0BF         	movff	?___fldiv,_Ubat
  6345  002950  C002  F0C0         	movff	?___fldiv+1,_Ubat+1
  6346  002954  C003  F0C1         	movff	?___fldiv+2,_Ubat+2
  6347  002958  C004  F0C2         	movff	?___fldiv+3,_Ubat+3
  6348                           
  6349                           ;pwm_config.c: 72: if(Ubat>16)
  6350  00295C  0E00               	movlw	0
  6351  00295E  6E01               	movwf	___flge@ff1,c
  6352  002960  0E00               	movlw	0
  6353  002962  6E02               	movwf	___flge@ff1+1,c
  6354  002964  0E80               	movlw	128
  6355  002966  6E03               	movwf	___flge@ff1+2,c
  6356  002968  0E41               	movlw	65
  6357  00296A  6E04               	movwf	___flge@ff1+3,c
  6358  00296C  C0BF  F005         	movff	_Ubat,___flge@ff2
  6359  002970  C0C0  F006         	movff	_Ubat+1,___flge@ff2+1
  6360  002974  C0C1  F007         	movff	_Ubat+2,___flge@ff2+2
  6361  002978  C0C2  F008         	movff	_Ubat+3,___flge@ff2+3
  6362  00297C  EC68  F016         	call	___flge	;wreg free
  6363  002980  B0D8               	btfsc	status,0,c
  6364  002982  D00C               	goto	i2l4630
  6365                           
  6366                           ;pwm_config.c: 73: {;pwm_config.c: 74: _delay((unsigned long)((10)*(64000000/4000.0)));
  6367  002984  0ED0               	movlw	208
  6368  002986  6E2C               	movwf	??_read_Ubat& (0+255),c
  6369  002988  0ECA               	movlw	202
  6370  00298A                     i2u483_47:
  6371  00298A  2EE8               	decfsz	wreg,f,c
  6372  00298C  D7FE               	bra	i2u483_47
  6373  00298E  2E2C               	decfsz	??_read_Ubat& (0+255),f,c
  6374  002990  D7FC               	bra	i2u483_47
  6375                           
  6376                           ;pwm_config.c: 75: CCPR1L=0;
  6377  002992  0E00               	movlw	0
  6378  002994  6EBE               	movwf	4030,c	;volatile
  6379                           
  6380                           ;pwm_config.c: 76: CCPR2L=0;
  6381  002996  0E00               	movlw	0
  6382  002998  6E67               	movwf	3943,c	;volatile
  6383  00299A                     i2l257:
  6384                           
  6385                           ;pwm_config.c: 78: {
  6386  00299A  D7FF               	goto	i2l257
  6387  00299C                     i2l4630:
  6388                           
  6389                           ;pwm_config.c: 80: };pwm_config.c: 81: };pwm_config.c: 82: if(Ubat<10)
  6390  00299C  C0BF  F001         	movff	_Ubat,___flge@ff1
  6391  0029A0  C0C0  F002         	movff	_Ubat+1,___flge@ff1+1
  6392  0029A4  C0C1  F003         	movff	_Ubat+2,___flge@ff1+2
  6393  0029A8  C0C2  F004         	movff	_Ubat+3,___flge@ff1+3
  6394  0029AC  0E00               	movlw	0
  6395  0029AE  6E05               	movwf	___flge@ff2,c
  6396  0029B0  0E00               	movlw	0
  6397  0029B2  6E06               	movwf	___flge@ff2+1,c
  6398  0029B4  0E20               	movlw	32
  6399  0029B6  6E07               	movwf	___flge@ff2+2,c
  6400  0029B8  0E41               	movlw	65
  6401  0029BA  6E08               	movwf	___flge@ff2+3,c
  6402  0029BC  EC68  F016         	call	___flge	;wreg free
  6403  0029C0  B0D8               	btfsc	status,0,c
  6404  0029C2  D00C               	goto	i2l260
  6405                           
  6406                           ;pwm_config.c: 83: {;pwm_config.c: 84: _delay((unsigned long)((10)*(64000000/4000.0)));
  6407  0029C4  0ED0               	movlw	208
  6408  0029C6  6E2C               	movwf	??_read_Ubat& (0+255),c
  6409  0029C8  0ECA               	movlw	202
  6410  0029CA                     i2u484_47:
  6411  0029CA  2EE8               	decfsz	wreg,f,c
  6412  0029CC  D7FE               	bra	i2u484_47
  6413  0029CE  2E2C               	decfsz	??_read_Ubat& (0+255),f,c
  6414  0029D0  D7FC               	bra	i2u484_47
  6415                           
  6416                           ;pwm_config.c: 85: CCPR1L=0;
  6417  0029D2  0E00               	movlw	0
  6418  0029D4  6EBE               	movwf	4030,c	;volatile
  6419                           
  6420                           ;pwm_config.c: 86: CCPR2L=0;
  6421  0029D6  0E00               	movlw	0
  6422  0029D8  6E67               	movwf	3943,c	;volatile
  6423  0029DA                     i2l261:
  6424                           
  6425                           ;pwm_config.c: 88: {
  6426  0029DA  D7FF               	goto	i2l261
  6427  0029DC                     i2l260:
  6428                           
  6429                           ;pwm_config.c: 90: };pwm_config.c: 91: };pwm_config.c: 92: return Ubat;
  6430  0029DC  C0BF  F028         	movff	_Ubat,?_read_Ubat
  6431  0029E0  C0C0  F029         	movff	_Ubat+1,?_read_Ubat+1
  6432  0029E4  C0C1  F02A         	movff	_Ubat+2,?_read_Ubat+2
  6433  0029E8  C0C2  F02B         	movff	_Ubat+3,?_read_Ubat+3
  6434  0029EC  0012               	return		;funcret
  6435  0029EE                     __end_of_read_Ubat:
  6436                           	opt callstack 0
  6437                           
  6438 ;; *************** function ___fldiv *****************
  6439 ;; Defined at:
  6440 ;;		line 11 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  b               4    0[COMRAM] float 
  6443 ;;  a               4    4[COMRAM] float 
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;  grs             4   19[COMRAM] unsigned long 
  6446 ;;  rem             4   12[COMRAM] unsigned long 
  6447 ;;  new_exp         2   17[COMRAM] int 
  6448 ;;  aexp            1   24[COMRAM] unsigned char 
  6449 ;;  bexp            1   23[COMRAM] unsigned char 
  6450 ;;  sign            1   16[COMRAM] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  4    0[COMRAM] unsigned char 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6460 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;Total ram usage:       25 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_read_Ubat
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text30
  6474  0024EA                     __ptext30:
  6475                           	opt callstack 0
  6476  0024EA                     ___fldiv:
  6477                           	opt callstack 25
  6478                           
  6479                           ;incstack = 0
  6480  0024EA  5004               	movf	___fldiv@b+3,w,c
  6481  0024EC  0B80               	andlw	128
  6482  0024EE  6E11               	movwf	___fldiv@sign,c
  6483  0024F0  5004               	movf	___fldiv@b+3,w,c
  6484  0024F2  2404               	addwf	___fldiv@b+3,w,c
  6485  0024F4  6E18               	movwf	___fldiv@bexp,c
  6486  0024F6  BE03               	btfsc	___fldiv@b+2,7,c
  6487  0024F8  8018               	bsf	___fldiv@bexp,0,c
  6488  0024FA  5018               	movf	___fldiv@bexp,w,c
  6489  0024FC  B4D8               	btfsc	status,2,c
  6490  0024FE  D00D               	goto	i2l4092
  6491  002500  2818               	incf	___fldiv@bexp,w,c
  6492  002502  A4D8               	btfss	status,2,c
  6493  002504  D008               	goto	i2l4088
  6494  002506  0E00               	movlw	0
  6495  002508  6E01               	movwf	___fldiv@b,c
  6496  00250A  0E00               	movlw	0
  6497  00250C  6E02               	movwf	___fldiv@b+1,c
  6498  00250E  0E00               	movlw	0
  6499  002510  6E03               	movwf	___fldiv@b+2,c
  6500  002512  0E00               	movlw	0
  6501  002514  6E04               	movwf	___fldiv@b+3,c
  6502  002516                     i2l4088:
  6503  002516  8E03               	bsf	___fldiv@b+2,7,c
  6504  002518  D006               	goto	L13
  6505  00251A                     i2l4092:
  6506  00251A  0E00               	movlw	0
  6507  00251C  6E01               	movwf	___fldiv@b,c
  6508  00251E  0E00               	movlw	0
  6509  002520  6E02               	movwf	___fldiv@b+1,c
  6510  002522  0E00               	movlw	0
  6511  002524  6E03               	movwf	___fldiv@b+2,c
  6512  002526                     L13:
  6513  002526  0E00               	movlw	0
  6514  002528  6E04               	movwf	___fldiv@b+3,c
  6515  00252A  5008               	movf	___fldiv@a+3,w,c
  6516  00252C  0B80               	andlw	128
  6517  00252E  1A11               	xorwf	___fldiv@sign,f,c
  6518  002530  5008               	movf	___fldiv@a+3,w,c
  6519  002532  2408               	addwf	___fldiv@a+3,w,c
  6520  002534  6E19               	movwf	___fldiv@aexp,c
  6521  002536  BE07               	btfsc	___fldiv@a+2,7,c
  6522  002538  8019               	bsf	___fldiv@aexp,0,c
  6523  00253A  5019               	movf	___fldiv@aexp,w,c
  6524  00253C  B4D8               	btfsc	status,2,c
  6525  00253E  D00D               	goto	i2l4112
  6526  002540  2819               	incf	___fldiv@aexp,w,c
  6527  002542  A4D8               	btfss	status,2,c
  6528  002544  D008               	goto	i2l4108
  6529  002546  0E00               	movlw	0
  6530  002548  6E05               	movwf	___fldiv@a,c
  6531  00254A  0E00               	movlw	0
  6532  00254C  6E06               	movwf	___fldiv@a+1,c
  6533  00254E  0E00               	movlw	0
  6534  002550  6E07               	movwf	___fldiv@a+2,c
  6535  002552  0E00               	movlw	0
  6536  002554  6E08               	movwf	___fldiv@a+3,c
  6537  002556                     i2l4108:
  6538  002556  8E07               	bsf	___fldiv@a+2,7,c
  6539  002558  D006               	goto	L14
  6540  00255A                     i2l4112:
  6541  00255A  0E00               	movlw	0
  6542  00255C  6E05               	movwf	___fldiv@a,c
  6543  00255E  0E00               	movlw	0
  6544  002560  6E06               	movwf	___fldiv@a+1,c
  6545  002562  0E00               	movlw	0
  6546  002564  6E07               	movwf	___fldiv@a+2,c
  6547  002566                     L14:
  6548  002566  0E00               	movlw	0
  6549  002568  6E08               	movwf	___fldiv@a+3,c
  6550  00256A  5005               	movf	___fldiv@a,w,c
  6551  00256C  1006               	iorwf	___fldiv@a+1,w,c
  6552  00256E  1007               	iorwf	___fldiv@a+2,w,c
  6553  002570  1008               	iorwf	___fldiv@a+3,w,c
  6554  002572  A4D8               	btfss	status,2,c
  6555  002574  D017               	goto	i2l4126
  6556  002576  0E00               	movlw	0
  6557  002578  6E01               	movwf	___fldiv@b,c
  6558  00257A  0E00               	movlw	0
  6559  00257C  6E02               	movwf	___fldiv@b+1,c
  6560  00257E  0E00               	movlw	0
  6561  002580  6E03               	movwf	___fldiv@b+2,c
  6562  002582  0E00               	movlw	0
  6563  002584  6E04               	movwf	___fldiv@b+3,c
  6564  002586  0E80               	movlw	128
  6565  002588  1203               	iorwf	___fldiv@b+2,f,c
  6566  00258A  0E7F               	movlw	127
  6567  00258C  1204               	iorwf	___fldiv@b+3,f,c
  6568  00258E                     i2l4120:
  6569  00258E  5011               	movf	___fldiv@sign,w,c
  6570  002590  1204               	iorwf	___fldiv@b+3,f,c
  6571  002592  C001  F001         	movff	___fldiv@b,?___fldiv
  6572  002596  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6573  00259A  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6574  00259E  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6575  0025A2  0012               	return	
  6576  0025A4                     i2l4126:
  6577  0025A4  5018               	movf	___fldiv@bexp,w,c
  6578  0025A6  A4D8               	btfss	status,2,c
  6579  0025A8  D009               	goto	i2l4134
  6580  0025AA  0E00               	movlw	0
  6581  0025AC  6E01               	movwf	?___fldiv,c
  6582  0025AE  0E00               	movlw	0
  6583  0025B0  6E02               	movwf	?___fldiv+1,c
  6584  0025B2  0E00               	movlw	0
  6585  0025B4  6E03               	movwf	?___fldiv+2,c
  6586  0025B6  0E00               	movlw	0
  6587  0025B8  6E04               	movwf	?___fldiv+3,c
  6588  0025BA  0012               	return	
  6589  0025BC                     i2l4134:
  6590  0025BC  5019               	movf	___fldiv@aexp,w,c
  6591  0025BE  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6592  0025C2  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  6593  0025C4  5E09               	subwf	??___fldiv,f,c
  6594  0025C6  0E00               	movlw	0
  6595  0025C8  5A0A               	subwfb	??___fldiv+1,f,c
  6596  0025CA  0E7F               	movlw	127
  6597  0025CC  2409               	addwf	??___fldiv,w,c
  6598  0025CE  6E12               	movwf	___fldiv@new_exp,c
  6599  0025D0  0E00               	movlw	0
  6600  0025D2  200A               	addwfc	??___fldiv+1,w,c
  6601  0025D4  6E13               	movwf	___fldiv@new_exp+1,c
  6602  0025D6  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6603  0025DA  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6604  0025DE  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6605  0025E2  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6606  0025E6  0E00               	movlw	0
  6607  0025E8  6E01               	movwf	___fldiv@b,c
  6608  0025EA  0E00               	movlw	0
  6609  0025EC  6E02               	movwf	___fldiv@b+1,c
  6610  0025EE  0E00               	movlw	0
  6611  0025F0  6E03               	movwf	___fldiv@b+2,c
  6612  0025F2  0E00               	movlw	0
  6613  0025F4  6E04               	movwf	___fldiv@b+3,c
  6614  0025F6  0E00               	movlw	0
  6615  0025F8  6E14               	movwf	___fldiv@grs,c
  6616  0025FA  0E00               	movlw	0
  6617  0025FC  6E15               	movwf	___fldiv@grs+1,c
  6618  0025FE  0E00               	movlw	0
  6619  002600  6E16               	movwf	___fldiv@grs+2,c
  6620  002602  0E00               	movlw	0
  6621  002604  6E17               	movwf	___fldiv@grs+3,c
  6622  002606  0E00               	movlw	0
  6623  002608  6E19               	movwf	___fldiv@aexp,c
  6624  00260A  D028               	goto	i2l1134
  6625  00260C                     i2l4144:
  6626  00260C  5019               	movf	___fldiv@aexp,w,c
  6627  00260E  B4D8               	btfsc	status,2,c
  6628  002610  D011               	goto	i2l4152
  6629  002612  90D8               	bcf	status,0,c
  6630  002614  360D               	rlcf	___fldiv@rem,f,c
  6631  002616  360E               	rlcf	___fldiv@rem+1,f,c
  6632  002618  360F               	rlcf	___fldiv@rem+2,f,c
  6633  00261A  3610               	rlcf	___fldiv@rem+3,f,c
  6634  00261C  90D8               	bcf	status,0,c
  6635  00261E  3601               	rlcf	___fldiv@b,f,c
  6636  002620  3602               	rlcf	___fldiv@b+1,f,c
  6637  002622  3603               	rlcf	___fldiv@b+2,f,c
  6638  002624  3604               	rlcf	___fldiv@b+3,f,c
  6639  002626  BE17               	btfsc	___fldiv@grs+3,7,c
  6640  002628  8001               	bsf	___fldiv@b,0,c
  6641  00262A  90D8               	bcf	status,0,c
  6642  00262C  3614               	rlcf	___fldiv@grs,f,c
  6643  00262E  3615               	rlcf	___fldiv@grs+1,f,c
  6644  002630  3616               	rlcf	___fldiv@grs+2,f,c
  6645  002632  3617               	rlcf	___fldiv@grs+3,f,c
  6646  002634                     i2l4152:
  6647  002634  5005               	movf	___fldiv@a,w,c
  6648  002636  5C0D               	subwf	___fldiv@rem,w,c
  6649  002638  5006               	movf	___fldiv@a+1,w,c
  6650  00263A  580E               	subwfb	___fldiv@rem+1,w,c
  6651  00263C  5007               	movf	___fldiv@a+2,w,c
  6652  00263E  580F               	subwfb	___fldiv@rem+2,w,c
  6653  002640  5008               	movf	___fldiv@a+3,w,c
  6654  002642  5810               	subwfb	___fldiv@rem+3,w,c
  6655  002644  A0D8               	btfss	status,0,c
  6656  002646  D009               	goto	i2l4158
  6657  002648  8C17               	bsf	___fldiv@grs+3,6,c
  6658  00264A  5005               	movf	___fldiv@a,w,c
  6659  00264C  5E0D               	subwf	___fldiv@rem,f,c
  6660  00264E  5006               	movf	___fldiv@a+1,w,c
  6661  002650  5A0E               	subwfb	___fldiv@rem+1,f,c
  6662  002652  5007               	movf	___fldiv@a+2,w,c
  6663  002654  5A0F               	subwfb	___fldiv@rem+2,f,c
  6664  002656  5008               	movf	___fldiv@a+3,w,c
  6665  002658  5A10               	subwfb	___fldiv@rem+3,f,c
  6666  00265A                     i2l4158:
  6667  00265A  2A19               	incf	___fldiv@aexp,f,c
  6668  00265C                     i2l1134:
  6669  00265C  0E19               	movlw	25
  6670  00265E  6419               	cpfsgt	___fldiv@aexp,c
  6671  002660  D7D5               	goto	i2l4144
  6672  002662  500D               	movf	___fldiv@rem,w,c
  6673  002664  100E               	iorwf	___fldiv@rem+1,w,c
  6674  002666  100F               	iorwf	___fldiv@rem+2,w,c
  6675  002668  1010               	iorwf	___fldiv@rem+3,w,c
  6676  00266A  B4D8               	btfsc	status,2,c
  6677  00266C  D011               	goto	i2l4170
  6678  00266E  8014               	bsf	___fldiv@grs,0,c
  6679  002670  D00F               	goto	i2l4170
  6680  002672                     i2l4164:
  6681  002672  90D8               	bcf	status,0,c
  6682  002674  3601               	rlcf	___fldiv@b,f,c
  6683  002676  3602               	rlcf	___fldiv@b+1,f,c
  6684  002678  3603               	rlcf	___fldiv@b+2,f,c
  6685  00267A  3604               	rlcf	___fldiv@b+3,f,c
  6686  00267C  BE17               	btfsc	___fldiv@grs+3,7,c
  6687  00267E  8001               	bsf	___fldiv@b,0,c
  6688  002680  90D8               	bcf	status,0,c
  6689  002682  3614               	rlcf	___fldiv@grs,f,c
  6690  002684  3615               	rlcf	___fldiv@grs+1,f,c
  6691  002686  3616               	rlcf	___fldiv@grs+2,f,c
  6692  002688  3617               	rlcf	___fldiv@grs+3,f,c
  6693  00268A  0612               	decf	___fldiv@new_exp,f,c
  6694  00268C  A0D8               	btfss	status,0,c
  6695  00268E  0613               	decf	___fldiv@new_exp+1,f,c
  6696  002690                     i2l4170:
  6697  002690  AE03               	btfss	___fldiv@b+2,7,c
  6698  002692  D7EF               	goto	i2l4164
  6699  002694  0E00               	movlw	0
  6700  002696  6E19               	movwf	___fldiv@aexp,c
  6701  002698  AE17               	btfss	___fldiv@grs+3,7,c
  6702  00269A  D017               	goto	i2l1145
  6703  00269C  0EFF               	movlw	255
  6704  00269E  1414               	andwf	___fldiv@grs,w,c
  6705  0026A0  6E09               	movwf	??___fldiv& (0+255),c
  6706  0026A2  0EFF               	movlw	255
  6707  0026A4  1415               	andwf	___fldiv@grs+1,w,c
  6708  0026A6  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  6709  0026A8  0EFF               	movlw	255
  6710  0026AA  1416               	andwf	___fldiv@grs+2,w,c
  6711  0026AC  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  6712  0026AE  0E7F               	movlw	127
  6713  0026B0  1417               	andwf	___fldiv@grs+3,w,c
  6714  0026B2  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  6715  0026B4  5009               	movf	??___fldiv,w,c
  6716  0026B6  100A               	iorwf	??___fldiv+1,w,c
  6717  0026B8  100B               	iorwf	??___fldiv+2,w,c
  6718  0026BA  100C               	iorwf	??___fldiv+3,w,c
  6719  0026BC  B4D8               	btfsc	status,2,c
  6720  0026BE  D003               	goto	i2l1146
  6721  0026C0                     i2u356_40:
  6722  0026C0  0E01               	movlw	1
  6723  0026C2  6E19               	movwf	___fldiv@aexp,c
  6724  0026C4  D002               	goto	i2l1145
  6725  0026C6                     i2l1146:
  6726  0026C6  B001               	btfsc	___fldiv@b,0,c
  6727  0026C8  D7FB               	goto	i2u356_40
  6728  0026CA                     i2l1145:
  6729  0026CA  5019               	movf	___fldiv@aexp,w,c
  6730  0026CC  B4D8               	btfsc	status,2,c
  6731  0026CE  D01F               	goto	i2l4190
  6732  0026D0  0E01               	movlw	1
  6733  0026D2  2601               	addwf	___fldiv@b,f,c
  6734  0026D4  0E00               	movlw	0
  6735  0026D6  2202               	addwfc	___fldiv@b+1,f,c
  6736  0026D8  2203               	addwfc	___fldiv@b+2,f,c
  6737  0026DA  2204               	addwfc	___fldiv@b+3,f,c
  6738  0026DC  A004               	btfss	___fldiv@b+3,0,c
  6739  0026DE  D017               	goto	i2l4190
  6740  0026E0  C001  F009         	movff	___fldiv@b,??___fldiv
  6741  0026E4  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6742  0026E8  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6743  0026EC  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6744  0026F0  340C               	rlcf	??___fldiv+3,w,c
  6745  0026F2  320C               	rrcf	??___fldiv+3,f,c
  6746  0026F4  320B               	rrcf	??___fldiv+2,f,c
  6747  0026F6  320A               	rrcf	??___fldiv+1,f,c
  6748  0026F8  3209               	rrcf	??___fldiv,f,c
  6749  0026FA  C009  F001         	movff	??___fldiv,___fldiv@b
  6750  0026FE  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6751  002702  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6752  002706  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6753  00270A  4A12               	infsnz	___fldiv@new_exp,f,c
  6754  00270C  2A13               	incf	___fldiv@new_exp+1,f,c
  6755  00270E                     i2l4190:
  6756  00270E  BE13               	btfsc	___fldiv@new_exp+1,7,c
  6757  002710  D010               	goto	i2l4194
  6758  002712  5013               	movf	___fldiv@new_exp+1,w,c
  6759  002714  E103               	bnz	i2u360_40
  6760  002716  2812               	incf	___fldiv@new_exp,w,c
  6761  002718  A0D8               	btfss	status,0,c
  6762  00271A  D00B               	goto	i2l4194
  6763  00271C                     i2u360_40:
  6764  00271C  0E00               	movlw	0
  6765  00271E  6E13               	movwf	___fldiv@new_exp+1,c
  6766  002720  6812               	setf	___fldiv@new_exp,c
  6767  002722  0E00               	movlw	0
  6768  002724  6E01               	movwf	___fldiv@b,c
  6769  002726  0E00               	movlw	0
  6770  002728  6E02               	movwf	___fldiv@b+1,c
  6771  00272A  0E00               	movlw	0
  6772  00272C  6E03               	movwf	___fldiv@b+2,c
  6773  00272E  0E00               	movlw	0
  6774  002730  6E04               	movwf	___fldiv@b+3,c
  6775  002732                     i2l4194:
  6776  002732  BE13               	btfsc	___fldiv@new_exp+1,7,c
  6777  002734  D005               	goto	i2u361_40
  6778  002736  5013               	movf	___fldiv@new_exp+1,w,c
  6779  002738  E111               	bnz	i2l4198
  6780  00273A  0412               	decf	___fldiv@new_exp,w,c
  6781  00273C  B0D8               	btfsc	status,0,c
  6782  00273E  D00E               	goto	i2l4198
  6783  002740                     i2u361_40:
  6784  002740  0E00               	movlw	0
  6785  002742  6E13               	movwf	___fldiv@new_exp+1,c
  6786  002744  0E00               	movlw	0
  6787  002746  6E12               	movwf	___fldiv@new_exp,c
  6788  002748  0E00               	movlw	0
  6789  00274A  6E01               	movwf	___fldiv@b,c
  6790  00274C  0E00               	movlw	0
  6791  00274E  6E02               	movwf	___fldiv@b+1,c
  6792  002750  0E00               	movlw	0
  6793  002752  6E03               	movwf	___fldiv@b+2,c
  6794  002754  0E00               	movlw	0
  6795  002756  6E04               	movwf	___fldiv@b+3,c
  6796  002758  0E00               	movlw	0
  6797  00275A  6E11               	movwf	___fldiv@sign,c
  6798  00275C                     i2l4198:
  6799  00275C  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6800  002760  A018               	btfss	___fldiv@bexp,0,c
  6801  002762  D002               	goto	i2l4204
  6802  002764  8E03               	bsf	___fldiv@b+2,7,c
  6803  002766  D001               	goto	i2l4206
  6804  002768                     i2l4204:
  6805  002768  9E03               	bcf	___fldiv@b+2,7,c
  6806  00276A                     i2l4206:
  6807  00276A  90D8               	bcf	status,0,c
  6808  00276C  3018               	rrcf	___fldiv@bexp,w,c
  6809  00276E  6E04               	movwf	___fldiv@b+3,c
  6810  002770  D70E               	goto	i2l4120
  6811  002772                     __end_of___fldiv:
  6812                           	opt callstack 0
  6813                           
  6814 ;; *************** function _read_Ibat *****************
  6815 ;; Defined at:
  6816 ;;		line 41 in file "pwm_config.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;		None
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;		None
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  4   39[COMRAM] float 
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;Total ram usage:        6 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    1
  6837 ;; This function calls:
  6838 ;;		___flge
  6839 ;;		___flmul
  6840 ;;		___xxtofl
  6841 ;; This function is called by:
  6842 ;;		_serial
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text31
  6847  002BE0                     __ptext31:
  6848                           	opt callstack 0
  6849  002BE0                     _read_Ibat:
  6850                           	opt callstack 25
  6851                           
  6852                           ;pwm_config.c: 43: ADCON0=0b00000011;
  6853                           
  6854                           ;incstack = 0
  6855  002BE0  0E03               	movlw	3
  6856  002BE2  6EC2               	movwf	4034,c	;volatile
  6857                           
  6858                           ;pwm_config.c: 44: _delay((unsigned long)((10)*(64000000/4000.0)));
  6859  002BE4  0ED0               	movlw	208
  6860  002BE6  6E2C               	movwf	??_read_Ibat& (0+255),c
  6861  002BE8  0ECA               	movlw	202
  6862  002BEA                     i2u485_47:
  6863  002BEA  2EE8               	decfsz	wreg,f,c
  6864  002BEC  D7FE               	bra	i2u485_47
  6865  002BEE  2E2C               	decfsz	??_read_Ibat& (0+255),f,c
  6866  002BF0  D7FC               	bra	i2u485_47
  6867                           
  6868                           ;pwm_config.c: 45: ADCON0bits.GO=1;
  6869  002BF2  82C2               	bsf	4034,1,c	;volatile
  6870                           
  6871                           ;pwm_config.c: 46: _delay((unsigned long)((10)*(64000000/4000.0)));
  6872  002BF4  0ED0               	movlw	208
  6873  002BF6  6E2C               	movwf	??_read_Ibat& (0+255),c
  6874  002BF8  0ECA               	movlw	202
  6875  002BFA                     i2u486_47:
  6876  002BFA  2EE8               	decfsz	wreg,f,c
  6877  002BFC  D7FE               	bra	i2u486_47
  6878  002BFE  2E2C               	decfsz	??_read_Ibat& (0+255),f,c
  6879  002C00  D7FC               	bra	i2u486_47
  6880                           
  6881                           ;pwm_config.c: 47: rez_adc_A=ADRESH;
  6882  002C02  50C4               	movf	4036,w,c	;volatile
  6883  002C04  6E01               	movwf	___xxtofl@val,c
  6884  002C06  6A02               	clrf	___xxtofl@val+1,c
  6885  002C08  6A03               	clrf	___xxtofl@val+2,c
  6886  002C0A  6A04               	clrf	___xxtofl@val+3,c
  6887  002C0C  0E00               	movlw	0
  6888  002C0E  ECB9  F013         	call	___xxtofl
  6889  002C12  C001  F0CF         	movff	?___xxtofl,_rez_adc_A
  6890  002C16  C002  F0D0         	movff	?___xxtofl+1,_rez_adc_A+1
  6891  002C1A  C003  F0D1         	movff	?___xxtofl+2,_rez_adc_A+2
  6892  002C1E  C004  F0D2         	movff	?___xxtofl+3,_rez_adc_A+3
  6893                           
  6894                           ;pwm_config.c: 48: tens_A=rez_adc_A*0.012890625;
  6895  002C22  C0CF  F00F         	movff	_rez_adc_A,___flmul@b
  6896  002C26  C0D0  F010         	movff	_rez_adc_A+1,___flmul@b+1
  6897  002C2A  C0D1  F011         	movff	_rez_adc_A+2,___flmul@b+2
  6898  002C2E  C0D2  F012         	movff	_rez_adc_A+3,___flmul@b+3
  6899  002C32  0E33               	movlw	51
  6900  002C34  6E13               	movwf	___flmul@a,c
  6901  002C36  0E33               	movlw	51
  6902  002C38  6E14               	movwf	___flmul@a+1,c
  6903  002C3A  0E53               	movlw	83
  6904  002C3C  6E15               	movwf	___flmul@a+2,c
  6905  002C3E  0E3C               	movlw	60
  6906  002C40  6E16               	movwf	___flmul@a+3,c
  6907  002C42  EC01  F00E         	call	___flmul	;wreg free
  6908  002C46  C00F  F0CB         	movff	?___flmul,_tens_A
  6909  002C4A  C010  F0CC         	movff	?___flmul+1,_tens_A+1
  6910  002C4E  C011  F0CD         	movff	?___flmul+2,_tens_A+2
  6911  002C52  C012  F0CE         	movff	?___flmul+3,_tens_A+3
  6912                           
  6913                           ;pwm_config.c: 49: Ibat=tens_A;
  6914  002C56  C0CB  F0C7         	movff	_tens_A,_Ibat
  6915  002C5A  C0CC  F0C8         	movff	_tens_A+1,_Ibat+1
  6916  002C5E  C0CD  F0C9         	movff	_tens_A+2,_Ibat+2
  6917  002C62  C0CE  F0CA         	movff	_tens_A+3,_Ibat+3
  6918                           
  6919                           ;pwm_config.c: 50: if(Ibat>10)
  6920  002C66  0E00               	movlw	0
  6921  002C68  6E01               	movwf	___flge@ff1,c
  6922  002C6A  0E00               	movlw	0
  6923  002C6C  6E02               	movwf	___flge@ff1+1,c
  6924  002C6E  0E20               	movlw	32
  6925  002C70  6E03               	movwf	___flge@ff1+2,c
  6926  002C72  0E41               	movlw	65
  6927  002C74  6E04               	movwf	___flge@ff1+3,c
  6928  002C76  C0C7  F005         	movff	_Ibat,___flge@ff2
  6929  002C7A  C0C8  F006         	movff	_Ibat+1,___flge@ff2+1
  6930  002C7E  C0C9  F007         	movff	_Ibat+2,___flge@ff2+2
  6931  002C82  C0CA  F008         	movff	_Ibat+3,___flge@ff2+3
  6932  002C86  EC68  F016         	call	___flge	;wreg free
  6933  002C8A  B0D8               	btfsc	status,0,c
  6934  002C8C  D018               	goto	i2l249
  6935                           
  6936                           ;pwm_config.c: 51: {;pwm_config.c: 52: _delay((unsigned long)((10)*(64000000/4000.0)));
  6937  002C8E  0ED0               	movlw	208
  6938  002C90  6E2C               	movwf	??_read_Ibat& (0+255),c
  6939  002C92  0ECA               	movlw	202
  6940  002C94                     i2u487_47:
  6941  002C94  2EE8               	decfsz	wreg,f,c
  6942  002C96  D7FE               	bra	i2u487_47
  6943  002C98  2E2C               	decfsz	??_read_Ibat& (0+255),f,c
  6944  002C9A  D7FC               	bra	i2u487_47
  6945                           
  6946                           ;pwm_config.c: 53: CCPR1L=0;
  6947  002C9C  0E00               	movlw	0
  6948  002C9E  6EBE               	movwf	4030,c	;volatile
  6949                           
  6950                           ;pwm_config.c: 54: CCPR2L=0;
  6951  002CA0  0E00               	movlw	0
  6952  002CA2  6E67               	movwf	3943,c	;volatile
  6953  002CA4                     i2l250:
  6954                           
  6955                           ;pwm_config.c: 56: {;pwm_config.c: 57: _delay((unsigned long)((100)*(64000000/4000.0)));
  6956  002CA4  0E09               	movlw	9
  6957  002CA6  6E2D               	movwf	(??_read_Ibat+1)& (0+255),c
  6958  002CA8  0E1E               	movlw	30
  6959  002CAA  6E2C               	movwf	??_read_Ibat& (0+255),c
  6960  002CAC  0EE4               	movlw	228
  6961  002CAE                     i2u488_47:
  6962  002CAE  2EE8               	decfsz	wreg,f,c
  6963  002CB0  D7FE               	bra	i2u488_47
  6964  002CB2  2E2C               	decfsz	??_read_Ibat& (0+255),f,c
  6965  002CB4  D7FC               	bra	i2u488_47
  6966  002CB6  2E2D               	decfsz	(??_read_Ibat+1)& (0+255),f,c
  6967  002CB8  D7FA               	bra	i2u488_47
  6968  002CBA  D000               	nop2	
  6969  002CBC  D7F3               	goto	i2l250
  6970  002CBE                     i2l249:
  6971                           
  6972                           ;pwm_config.c: 58: };pwm_config.c: 59: };pwm_config.c: 60: return Ibat;
  6973  002CBE  C0C7  F028         	movff	_Ibat,?_read_Ibat
  6974  002CC2  C0C8  F029         	movff	_Ibat+1,?_read_Ibat+1
  6975  002CC6  C0C9  F02A         	movff	_Ibat+2,?_read_Ibat+2
  6976  002CCA  C0CA  F02B         	movff	_Ibat+3,?_read_Ibat+3
  6977  002CCE  0012               	return		;funcret
  6978  002CD0                     __end_of_read_Ibat:
  6979                           	opt callstack 0
  6980                           
  6981 ;; *************** function ___xxtofl *****************
  6982 ;; Defined at:
  6983 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;  sign            1    wreg     unsigned char 
  6986 ;;  val             4    0[COMRAM] long 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  sign            1    8[COMRAM] unsigned char 
  6989 ;;  arg             4   10[COMRAM] unsigned long 
  6990 ;;  exp             1    9[COMRAM] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  4    0[COMRAM] unsigned char 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7003 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7004 ;;Total ram usage:       14 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_read_Ibat
  7010 ;;		_read_Ubat
  7011 ;;		_sprintf
  7012 ;;		_left
  7013 ;;		_right
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text32
  7018  002772                     __ptext32:
  7019                           	opt callstack 0
  7020  002772                     ___xxtofl:
  7021                           	opt callstack 25
  7022                           
  7023                           ;incstack = 0
  7024                           ;___xxtofl@sign stored from wreg
  7025  002772  6E09               	movwf	___xxtofl@sign,c
  7026  002774  5009               	movf	___xxtofl@sign,w,c
  7027  002776  A4D8               	btfss	status,2,c
  7028  002778  AE04               	btfss	___xxtofl@val+3,7,c
  7029  00277A  D01A               	goto	i2l1205
  7030  00277C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7031  002780  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7032  002784  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7033  002788  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7034  00278C  1E05               	comf	??___xxtofl,f,c
  7035  00278E  1E06               	comf	??___xxtofl+1,f,c
  7036  002790  1E07               	comf	??___xxtofl+2,f,c
  7037  002792  1E08               	comf	??___xxtofl+3,f,c
  7038  002794  2A05               	incf	??___xxtofl,f,c
  7039  002796  0E00               	movlw	0
  7040  002798  2206               	addwfc	??___xxtofl+1,f,c
  7041  00279A  2207               	addwfc	??___xxtofl+2,f,c
  7042  00279C  2208               	addwfc	??___xxtofl+3,f,c
  7043  00279E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7044  0027A2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7045  0027A6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7046  0027AA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7047  0027AE  D008               	goto	i2l4332
  7048  0027B0                     i2l1205:
  7049  0027B0  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7050  0027B4  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7051  0027B8  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7052  0027BC  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7053  0027C0                     i2l4332:
  7054  0027C0  5001               	movf	___xxtofl@val,w,c
  7055  0027C2  1002               	iorwf	___xxtofl@val+1,w,c
  7056  0027C4  1003               	iorwf	___xxtofl@val+2,w,c
  7057  0027C6  1004               	iorwf	___xxtofl@val+3,w,c
  7058  0027C8  A4D8               	btfss	status,2,c
  7059  0027CA  D009               	goto	i2l4338
  7060  0027CC  0E00               	movlw	0
  7061  0027CE  6E01               	movwf	?___xxtofl,c
  7062  0027D0  0E00               	movlw	0
  7063  0027D2  6E02               	movwf	?___xxtofl+1,c
  7064  0027D4  0E00               	movlw	0
  7065  0027D6  6E03               	movwf	?___xxtofl+2,c
  7066  0027D8  0E00               	movlw	0
  7067  0027DA  6E04               	movwf	?___xxtofl+3,c
  7068  0027DC  0012               	return	
  7069  0027DE                     i2l4338:
  7070  0027DE  0E96               	movlw	150
  7071  0027E0  6E0A               	movwf	___xxtofl@exp,c
  7072  0027E2  D006               	goto	i2l4342
  7073  0027E4                     i2l4340:
  7074  0027E4  2A0A               	incf	___xxtofl@exp,f,c
  7075  0027E6  90D8               	bcf	status,0,c
  7076  0027E8  320E               	rrcf	___xxtofl@arg+3,f,c
  7077  0027EA  320D               	rrcf	___xxtofl@arg+2,f,c
  7078  0027EC  320C               	rrcf	___xxtofl@arg+1,f,c
  7079  0027EE  320B               	rrcf	___xxtofl@arg,f,c
  7080  0027F0                     i2l4342:
  7081  0027F0  0E00               	movlw	0
  7082  0027F2  140B               	andwf	___xxtofl@arg,w,c
  7083  0027F4  6E05               	movwf	??___xxtofl& (0+255),c
  7084  0027F6  0E00               	movlw	0
  7085  0027F8  140C               	andwf	___xxtofl@arg+1,w,c
  7086  0027FA  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7087  0027FC  0E00               	movlw	0
  7088  0027FE  140D               	andwf	___xxtofl@arg+2,w,c
  7089  002800  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7090  002802  0EFE               	movlw	254
  7091  002804  140E               	andwf	___xxtofl@arg+3,w,c
  7092  002806  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7093  002808  5005               	movf	??___xxtofl,w,c
  7094  00280A  1006               	iorwf	??___xxtofl+1,w,c
  7095  00280C  1007               	iorwf	??___xxtofl+2,w,c
  7096  00280E  1008               	iorwf	??___xxtofl+3,w,c
  7097  002810  B4D8               	btfsc	status,2,c
  7098  002812  D00D               	goto	i2l1212
  7099  002814  D7E7               	goto	i2l4340
  7100  002816                     i2l4344:
  7101  002816  2A0A               	incf	___xxtofl@exp,f,c
  7102  002818  0E01               	movlw	1
  7103  00281A  260B               	addwf	___xxtofl@arg,f,c
  7104  00281C  0E00               	movlw	0
  7105  00281E  220C               	addwfc	___xxtofl@arg+1,f,c
  7106  002820  220D               	addwfc	___xxtofl@arg+2,f,c
  7107  002822  220E               	addwfc	___xxtofl@arg+3,f,c
  7108  002824  90D8               	bcf	status,0,c
  7109  002826  320E               	rrcf	___xxtofl@arg+3,f,c
  7110  002828  320D               	rrcf	___xxtofl@arg+2,f,c
  7111  00282A  320C               	rrcf	___xxtofl@arg+1,f,c
  7112  00282C  320B               	rrcf	___xxtofl@arg,f,c
  7113  00282E                     i2l1212:
  7114  00282E  0E00               	movlw	0
  7115  002830  140B               	andwf	___xxtofl@arg,w,c
  7116  002832  6E05               	movwf	??___xxtofl& (0+255),c
  7117  002834  0E00               	movlw	0
  7118  002836  140C               	andwf	___xxtofl@arg+1,w,c
  7119  002838  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7120  00283A  0E00               	movlw	0
  7121  00283C  140D               	andwf	___xxtofl@arg+2,w,c
  7122  00283E  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7123  002840  0EFF               	movlw	255
  7124  002842  140E               	andwf	___xxtofl@arg+3,w,c
  7125  002844  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7126  002846  5005               	movf	??___xxtofl,w,c
  7127  002848  1006               	iorwf	??___xxtofl+1,w,c
  7128  00284A  1007               	iorwf	??___xxtofl+2,w,c
  7129  00284C  1008               	iorwf	??___xxtofl+3,w,c
  7130  00284E  B4D8               	btfsc	status,2,c
  7131  002850  D007               	goto	i2l4352
  7132  002852  D7E1               	goto	i2l4344
  7133  002854                     i2l4350:
  7134  002854  060A               	decf	___xxtofl@exp,f,c
  7135  002856  90D8               	bcf	status,0,c
  7136  002858  360B               	rlcf	___xxtofl@arg,f,c
  7137  00285A  360C               	rlcf	___xxtofl@arg+1,f,c
  7138  00285C  360D               	rlcf	___xxtofl@arg+2,f,c
  7139  00285E  360E               	rlcf	___xxtofl@arg+3,f,c
  7140  002860                     i2l4352:
  7141  002860  BE0D               	btfsc	___xxtofl@arg+2,7,c
  7142  002862  D003               	goto	i2u388_40
  7143  002864  0E02               	movlw	2
  7144  002866  600A               	cpfslt	___xxtofl@exp,c
  7145  002868  D7F5               	goto	i2l4350
  7146  00286A                     i2u388_40:
  7147  00286A  A00A               	btfss	___xxtofl@exp,0,c
  7148  00286C  9E0D               	bcf	___xxtofl@arg+2,7,c
  7149  00286E  90D8               	bcf	status,0,c
  7150  002870  320A               	rrcf	___xxtofl@exp,f,c
  7151  002872  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7152  002876  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  7153  002878  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  7154  00287A  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  7155  00287C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7156  002880  6A07               	clrf	??___xxtofl+2,c
  7157  002882  6A06               	clrf	??___xxtofl+1,c
  7158  002884  6A05               	clrf	??___xxtofl,c
  7159  002886  5005               	movf	??___xxtofl,w,c
  7160  002888  120B               	iorwf	___xxtofl@arg,f,c
  7161  00288A  5006               	movf	??___xxtofl+1,w,c
  7162  00288C  120C               	iorwf	___xxtofl@arg+1,f,c
  7163  00288E  5007               	movf	??___xxtofl+2,w,c
  7164  002890  120D               	iorwf	___xxtofl@arg+2,f,c
  7165  002892  5008               	movf	??___xxtofl+3,w,c
  7166  002894  120E               	iorwf	___xxtofl@arg+3,f,c
  7167  002896  5009               	movf	___xxtofl@sign,w,c
  7168  002898  A4D8               	btfss	status,2,c
  7169  00289A  AE04               	btfss	___xxtofl@val+3,7,c
  7170  00289C  D001               	goto	i2l4368
  7171  00289E  8E0E               	bsf	___xxtofl@arg+3,7,c
  7172  0028A0                     i2l4368:
  7173  0028A0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7174  0028A4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7175  0028A8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7176  0028AC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7177  0028B0  0012               	return		;funcret
  7178  0028B2                     __end_of___xxtofl:
  7179                           	opt callstack 0
  7180                           
  7181 ;; *************** function ___flmul *****************
  7182 ;; Defined at:
  7183 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  b               4   14[COMRAM] unsigned char 
  7186 ;;  a               4   18[COMRAM] unsigned char 
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  prod            4   33[COMRAM] struct .
  7189 ;;  grs             4   27[COMRAM] unsigned long 
  7190 ;;  temp            2   37[COMRAM] struct .
  7191 ;;  bexp            1   32[COMRAM] unsigned char 
  7192 ;;  aexp            1   31[COMRAM] unsigned char 
  7193 ;;  sign            1   26[COMRAM] unsigned char 
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  4   14[COMRAM] unsigned char 
  7196 ;; Registers used:
  7197 ;;		wreg, status,2, status,0, prodl, prodh
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7203 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;Total ram usage:       25 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; This function calls:
  7210 ;;		Nothing
  7211 ;; This function is called by:
  7212 ;;		_read_Ibat
  7213 ;;		_read_Ubat
  7214 ;;		_fround
  7215 ;;		_scale
  7216 ;;		_sprintf
  7217 ;;		_left
  7218 ;;		_right
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text33
  7223  001C02                     __ptext33:
  7224                           	opt callstack 0
  7225  001C02                     ___flmul:
  7226                           	opt callstack 24
  7227                           
  7228                           ;incstack = 0
  7229  001C02  5012               	movf	___flmul@b+3,w,c
  7230  001C04  0B80               	andlw	128
  7231  001C06  6E1B               	movwf	___flmul@sign,c
  7232  001C08  5012               	movf	___flmul@b+3,w,c
  7233  001C0A  2412               	addwf	___flmul@b+3,w,c
  7234  001C0C  6E21               	movwf	___flmul@bexp,c
  7235  001C0E  BE11               	btfsc	___flmul@b+2,7,c
  7236  001C10  8021               	bsf	___flmul@bexp,0,c
  7237  001C12  5021               	movf	___flmul@bexp,w,c
  7238  001C14  B4D8               	btfsc	status,2,c
  7239  001C16  D00D               	goto	i2l3540
  7240  001C18  2821               	incf	___flmul@bexp,w,c
  7241  001C1A  A4D8               	btfss	status,2,c
  7242  001C1C  D008               	goto	i2l3538
  7243  001C1E  0E00               	movlw	0
  7244  001C20  6E0F               	movwf	___flmul@b,c
  7245  001C22  0E00               	movlw	0
  7246  001C24  6E10               	movwf	___flmul@b+1,c
  7247  001C26  0E00               	movlw	0
  7248  001C28  6E11               	movwf	___flmul@b+2,c
  7249  001C2A  0E00               	movlw	0
  7250  001C2C  6E12               	movwf	___flmul@b+3,c
  7251  001C2E                     i2l3538:
  7252  001C2E  8E11               	bsf	___flmul@b+2,7,c
  7253  001C30  D008               	goto	i2l3542
  7254  001C32                     i2l3540:
  7255  001C32  0E00               	movlw	0
  7256  001C34  6E0F               	movwf	___flmul@b,c
  7257  001C36  0E00               	movlw	0
  7258  001C38  6E10               	movwf	___flmul@b+1,c
  7259  001C3A  0E00               	movlw	0
  7260  001C3C  6E11               	movwf	___flmul@b+2,c
  7261  001C3E  0E00               	movlw	0
  7262  001C40  6E12               	movwf	___flmul@b+3,c
  7263  001C42                     i2l3542:
  7264  001C42  5016               	movf	___flmul@a+3,w,c
  7265  001C44  0B80               	andlw	128
  7266  001C46  1A1B               	xorwf	___flmul@sign,f,c
  7267  001C48  5016               	movf	___flmul@a+3,w,c
  7268  001C4A  2416               	addwf	___flmul@a+3,w,c
  7269  001C4C  6E20               	movwf	___flmul@aexp,c
  7270  001C4E  BE15               	btfsc	___flmul@a+2,7,c
  7271  001C50  8020               	bsf	___flmul@aexp,0,c
  7272  001C52  5020               	movf	___flmul@aexp,w,c
  7273  001C54  B4D8               	btfsc	status,2,c
  7274  001C56  D00D               	goto	i2l3558
  7275  001C58  2820               	incf	___flmul@aexp,w,c
  7276  001C5A  A4D8               	btfss	status,2,c
  7277  001C5C  D008               	goto	i2l3556
  7278  001C5E  0E00               	movlw	0
  7279  001C60  6E13               	movwf	___flmul@a,c
  7280  001C62  0E00               	movlw	0
  7281  001C64  6E14               	movwf	___flmul@a+1,c
  7282  001C66  0E00               	movlw	0
  7283  001C68  6E15               	movwf	___flmul@a+2,c
  7284  001C6A  0E00               	movlw	0
  7285  001C6C  6E16               	movwf	___flmul@a+3,c
  7286  001C6E                     i2l3556:
  7287  001C6E  8E15               	bsf	___flmul@a+2,7,c
  7288  001C70  D008               	goto	i2l1164
  7289  001C72                     i2l3558:
  7290  001C72  0E00               	movlw	0
  7291  001C74  6E13               	movwf	___flmul@a,c
  7292  001C76  0E00               	movlw	0
  7293  001C78  6E14               	movwf	___flmul@a+1,c
  7294  001C7A  0E00               	movlw	0
  7295  001C7C  6E15               	movwf	___flmul@a+2,c
  7296  001C7E  0E00               	movlw	0
  7297  001C80  6E16               	movwf	___flmul@a+3,c
  7298  001C82                     i2l1164:
  7299  001C82  5020               	movf	___flmul@aexp,w,c
  7300  001C84  B4D8               	btfsc	status,2,c
  7301  001C86  D003               	goto	i2u280_40
  7302  001C88  5021               	movf	___flmul@bexp,w,c
  7303  001C8A  A4D8               	btfss	status,2,c
  7304  001C8C  D009               	goto	i2l3566
  7305  001C8E                     i2u280_40:
  7306  001C8E  0E00               	movlw	0
  7307  001C90  6E0F               	movwf	?___flmul,c
  7308  001C92  0E00               	movlw	0
  7309  001C94  6E10               	movwf	?___flmul+1,c
  7310  001C96  0E00               	movlw	0
  7311  001C98  6E11               	movwf	?___flmul+2,c
  7312  001C9A  0E00               	movlw	0
  7313  001C9C  6E12               	movwf	?___flmul+3,c
  7314  001C9E  0012               	return	
  7315  001CA0                     i2l3566:
  7316  001CA0  5015               	movf	___flmul@a+2,w,c
  7317  001CA2  020F               	mulwf	___flmul@b,c
  7318  001CA4  CFF3 F026          	movff	prodl,___flmul@temp
  7319  001CA8  CFF4 F027          	movff	prodh,___flmul@temp+1
  7320  001CAC  5026               	movf	___flmul@temp,w,c
  7321  001CAE  6E1C               	movwf	___flmul@grs,c
  7322  001CB0  6A1D               	clrf	___flmul@grs+1,c
  7323  001CB2  6A1E               	clrf	___flmul@grs+2,c
  7324  001CB4  6A1F               	clrf	___flmul@grs+3,c
  7325  001CB6  5027               	movf	___flmul@temp+1,w,c
  7326  001CB8  6E22               	movwf	___flmul@prod,c
  7327  001CBA  6A23               	clrf	___flmul@prod+1,c
  7328  001CBC  6A24               	clrf	___flmul@prod+2,c
  7329  001CBE  6A25               	clrf	___flmul@prod+3,c
  7330  001CC0  5014               	movf	___flmul@a+1,w,c
  7331  001CC2  0210               	mulwf	___flmul@b+1,c
  7332  001CC4  CFF3 F026          	movff	prodl,___flmul@temp
  7333  001CC8  CFF4 F027          	movff	prodh,___flmul@temp+1
  7334  001CCC  5026               	movf	___flmul@temp,w,c
  7335  001CCE  261C               	addwf	___flmul@grs,f,c
  7336  001CD0  0E00               	movlw	0
  7337  001CD2  221D               	addwfc	___flmul@grs+1,f,c
  7338  001CD4  221E               	addwfc	___flmul@grs+2,f,c
  7339  001CD6  221F               	addwfc	___flmul@grs+3,f,c
  7340  001CD8  5027               	movf	___flmul@temp+1,w,c
  7341  001CDA  2622               	addwf	___flmul@prod,f,c
  7342  001CDC  0E00               	movlw	0
  7343  001CDE  2223               	addwfc	___flmul@prod+1,f,c
  7344  001CE0  2224               	addwfc	___flmul@prod+2,f,c
  7345  001CE2  2225               	addwfc	___flmul@prod+3,f,c
  7346  001CE4  5013               	movf	___flmul@a,w,c
  7347  001CE6  0211               	mulwf	___flmul@b+2,c
  7348  001CE8  CFF3 F026          	movff	prodl,___flmul@temp
  7349  001CEC  CFF4 F027          	movff	prodh,___flmul@temp+1
  7350  001CF0  5026               	movf	___flmul@temp,w,c
  7351  001CF2  261C               	addwf	___flmul@grs,f,c
  7352  001CF4  0E00               	movlw	0
  7353  001CF6  221D               	addwfc	___flmul@grs+1,f,c
  7354  001CF8  221E               	addwfc	___flmul@grs+2,f,c
  7355  001CFA  221F               	addwfc	___flmul@grs+3,f,c
  7356  001CFC  5027               	movf	___flmul@temp+1,w,c
  7357  001CFE  2622               	addwf	___flmul@prod,f,c
  7358  001D00  0E00               	movlw	0
  7359  001D02  2223               	addwfc	___flmul@prod+1,f,c
  7360  001D04  2224               	addwfc	___flmul@prod+2,f,c
  7361  001D06  2225               	addwfc	___flmul@prod+3,f,c
  7362  001D08  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7363  001D0C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7364  001D10  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7365  001D14  6A1C               	clrf	___flmul@grs,c
  7366  001D16  5013               	movf	___flmul@a,w,c
  7367  001D18  0210               	mulwf	___flmul@b+1,c
  7368  001D1A  CFF3 F026          	movff	prodl,___flmul@temp
  7369  001D1E  CFF4 F027          	movff	prodh,___flmul@temp+1
  7370  001D22  5026               	movf	___flmul@temp,w,c
  7371  001D24  261C               	addwf	___flmul@grs,f,c
  7372  001D26  5027               	movf	___flmul@temp+1,w,c
  7373  001D28  221D               	addwfc	___flmul@grs+1,f,c
  7374  001D2A  0E00               	movlw	0
  7375  001D2C  221E               	addwfc	___flmul@grs+2,f,c
  7376  001D2E  0E00               	movlw	0
  7377  001D30  221F               	addwfc	___flmul@grs+3,f,c
  7378  001D32  5014               	movf	___flmul@a+1,w,c
  7379  001D34  020F               	mulwf	___flmul@b,c
  7380  001D36  CFF3 F026          	movff	prodl,___flmul@temp
  7381  001D3A  CFF4 F027          	movff	prodh,___flmul@temp+1
  7382  001D3E  5026               	movf	___flmul@temp,w,c
  7383  001D40  261C               	addwf	___flmul@grs,f,c
  7384  001D42  5027               	movf	___flmul@temp+1,w,c
  7385  001D44  221D               	addwfc	___flmul@grs+1,f,c
  7386  001D46  0E00               	movlw	0
  7387  001D48  221E               	addwfc	___flmul@grs+2,f,c
  7388  001D4A  0E00               	movlw	0
  7389  001D4C  221F               	addwfc	___flmul@grs+3,f,c
  7390  001D4E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7391  001D52  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7392  001D56  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7393  001D5A  6A1C               	clrf	___flmul@grs,c
  7394  001D5C  5013               	movf	___flmul@a,w,c
  7395  001D5E  020F               	mulwf	___flmul@b,c
  7396  001D60  CFF3 F026          	movff	prodl,___flmul@temp
  7397  001D64  CFF4 F027          	movff	prodh,___flmul@temp+1
  7398  001D68  5026               	movf	___flmul@temp,w,c
  7399  001D6A  261C               	addwf	___flmul@grs,f,c
  7400  001D6C  5027               	movf	___flmul@temp+1,w,c
  7401  001D6E  221D               	addwfc	___flmul@grs+1,f,c
  7402  001D70  0E00               	movlw	0
  7403  001D72  221E               	addwfc	___flmul@grs+2,f,c
  7404  001D74  0E00               	movlw	0
  7405  001D76  221F               	addwfc	___flmul@grs+3,f,c
  7406  001D78  5015               	movf	___flmul@a+2,w,c
  7407  001D7A  0210               	mulwf	___flmul@b+1,c
  7408  001D7C  CFF3 F026          	movff	prodl,___flmul@temp
  7409  001D80  CFF4 F027          	movff	prodh,___flmul@temp+1
  7410  001D84  5026               	movf	___flmul@temp,w,c
  7411  001D86  2622               	addwf	___flmul@prod,f,c
  7412  001D88  5027               	movf	___flmul@temp+1,w,c
  7413  001D8A  2223               	addwfc	___flmul@prod+1,f,c
  7414  001D8C  0E00               	movlw	0
  7415  001D8E  2224               	addwfc	___flmul@prod+2,f,c
  7416  001D90  0E00               	movlw	0
  7417  001D92  2225               	addwfc	___flmul@prod+3,f,c
  7418  001D94  5014               	movf	___flmul@a+1,w,c
  7419  001D96  0211               	mulwf	___flmul@b+2,c
  7420  001D98  CFF3 F026          	movff	prodl,___flmul@temp
  7421  001D9C  CFF4 F027          	movff	prodh,___flmul@temp+1
  7422  001DA0  5026               	movf	___flmul@temp,w,c
  7423  001DA2  2622               	addwf	___flmul@prod,f,c
  7424  001DA4  5027               	movf	___flmul@temp+1,w,c
  7425  001DA6  2223               	addwfc	___flmul@prod+1,f,c
  7426  001DA8  0E00               	movlw	0
  7427  001DAA  2224               	addwfc	___flmul@prod+2,f,c
  7428  001DAC  0E00               	movlw	0
  7429  001DAE  2225               	addwfc	___flmul@prod+3,f,c
  7430  001DB0  5015               	movf	___flmul@a+2,w,c
  7431  001DB2  0211               	mulwf	___flmul@b+2,c
  7432  001DB4  CFF3 F026          	movff	prodl,___flmul@temp
  7433  001DB8  CFF4 F027          	movff	prodh,___flmul@temp+1
  7434  001DBC  5026               	movf	___flmul@temp,w,c
  7435  001DBE  6E17               	movwf	??___flmul& (0+255),c
  7436  001DC0  5027               	movf	___flmul@temp+1,w,c
  7437  001DC2  6E18               	movwf	(??___flmul+1)& (0+255),c
  7438  001DC4  6A19               	clrf	(??___flmul+2)& (0+255),c
  7439  001DC6  6A1A               	clrf	(??___flmul+3)& (0+255),c
  7440  001DC8  C019  F01A         	movff	??___flmul+2,??___flmul+3
  7441  001DCC  C018  F019         	movff	??___flmul+1,??___flmul+2
  7442  001DD0  C017  F018         	movff	??___flmul,??___flmul+1
  7443  001DD4  6A17               	clrf	??___flmul,c
  7444  001DD6  5017               	movf	??___flmul,w,c
  7445  001DD8  2622               	addwf	___flmul@prod,f,c
  7446  001DDA  5018               	movf	??___flmul+1,w,c
  7447  001DDC  2223               	addwfc	___flmul@prod+1,f,c
  7448  001DDE  5019               	movf	??___flmul+2,w,c
  7449  001DE0  2224               	addwfc	___flmul@prod+2,f,c
  7450  001DE2  501A               	movf	??___flmul+3,w,c
  7451  001DE4  2225               	addwfc	___flmul@prod+3,f,c
  7452  001DE6  C01C  F017         	movff	___flmul@grs,??___flmul
  7453  001DEA  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  7454  001DEE  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  7455  001DF2  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  7456  001DF6  0E19               	movlw	25
  7457  001DF8  D005               	goto	i2u281_40
  7458  001DFA                     i2u281_45:
  7459  001DFA  90D8               	bcf	status,0,c
  7460  001DFC  321A               	rrcf	??___flmul+3,f,c
  7461  001DFE  3219               	rrcf	??___flmul+2,f,c
  7462  001E00  3218               	rrcf	??___flmul+1,f,c
  7463  001E02  3217               	rrcf	??___flmul,f,c
  7464  001E04                     i2u281_40:
  7465  001E04  2EE8               	decfsz	wreg,f,c
  7466  001E06  D7F9               	goto	i2u281_45
  7467  001E08  5017               	movf	??___flmul,w,c
  7468  001E0A  2622               	addwf	___flmul@prod,f,c
  7469  001E0C  5018               	movf	??___flmul+1,w,c
  7470  001E0E  2223               	addwfc	___flmul@prod+1,f,c
  7471  001E10  5019               	movf	??___flmul+2,w,c
  7472  001E12  2224               	addwfc	___flmul@prod+2,f,c
  7473  001E14  501A               	movf	??___flmul+3,w,c
  7474  001E16  2225               	addwfc	___flmul@prod+3,f,c
  7475  001E18  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7476  001E1C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7477  001E20  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7478  001E24  6A1C               	clrf	___flmul@grs,c
  7479  001E26  5020               	movf	___flmul@aexp,w,c
  7480  001E28  C021  F017         	movff	___flmul@bexp,??___flmul
  7481  001E2C  6A18               	clrf	(??___flmul+1)& (0+255),c
  7482  001E2E  2617               	addwf	??___flmul,f,c
  7483  001E30  0E00               	movlw	0
  7484  001E32  2218               	addwfc	??___flmul+1,f,c
  7485  001E34  0E82               	movlw	130
  7486  001E36  2417               	addwf	??___flmul,w,c
  7487  001E38  6E26               	movwf	___flmul@temp,c
  7488  001E3A  0EFF               	movlw	255
  7489  001E3C  2018               	addwfc	??___flmul+1,w,c
  7490  001E3E  6E27               	movwf	___flmul@temp+1,c
  7491  001E40  D00F               	goto	i2l3614
  7492  001E42                     i2l3608:
  7493  001E42  90D8               	bcf	status,0,c
  7494  001E44  3622               	rlcf	___flmul@prod,f,c
  7495  001E46  3623               	rlcf	___flmul@prod+1,f,c
  7496  001E48  3624               	rlcf	___flmul@prod+2,f,c
  7497  001E4A  3625               	rlcf	___flmul@prod+3,f,c
  7498  001E4C  BE1F               	btfsc	___flmul@grs+3,7,c
  7499  001E4E  8022               	bsf	___flmul@prod,0,c
  7500  001E50  90D8               	bcf	status,0,c
  7501  001E52  361C               	rlcf	___flmul@grs,f,c
  7502  001E54  361D               	rlcf	___flmul@grs+1,f,c
  7503  001E56  361E               	rlcf	___flmul@grs+2,f,c
  7504  001E58  361F               	rlcf	___flmul@grs+3,f,c
  7505  001E5A  0626               	decf	___flmul@temp,f,c
  7506  001E5C  A0D8               	btfss	status,0,c
  7507  001E5E  0627               	decf	___flmul@temp+1,f,c
  7508  001E60                     i2l3614:
  7509  001E60  AE24               	btfss	___flmul@prod+2,7,c
  7510  001E62  D7EF               	goto	i2l3608
  7511  001E64  0E00               	movlw	0
  7512  001E66  6E20               	movwf	___flmul@aexp,c
  7513  001E68  AE1F               	btfss	___flmul@grs+3,7,c
  7514  001E6A  D017               	goto	i2l1173
  7515  001E6C  0EFF               	movlw	255
  7516  001E6E  141C               	andwf	___flmul@grs,w,c
  7517  001E70  6E17               	movwf	??___flmul& (0+255),c
  7518  001E72  0EFF               	movlw	255
  7519  001E74  141D               	andwf	___flmul@grs+1,w,c
  7520  001E76  6E18               	movwf	(??___flmul+1)& (0+255),c
  7521  001E78  0EFF               	movlw	255
  7522  001E7A  141E               	andwf	___flmul@grs+2,w,c
  7523  001E7C  6E19               	movwf	(??___flmul+2)& (0+255),c
  7524  001E7E  0E7F               	movlw	127
  7525  001E80  141F               	andwf	___flmul@grs+3,w,c
  7526  001E82  6E1A               	movwf	(??___flmul+3)& (0+255),c
  7527  001E84  5017               	movf	??___flmul,w,c
  7528  001E86  1018               	iorwf	??___flmul+1,w,c
  7529  001E88  1019               	iorwf	??___flmul+2,w,c
  7530  001E8A  101A               	iorwf	??___flmul+3,w,c
  7531  001E8C  B4D8               	btfsc	status,2,c
  7532  001E8E  D003               	goto	i2l1174
  7533  001E90                     i2u285_40:
  7534  001E90  0E01               	movlw	1
  7535  001E92  6E20               	movwf	___flmul@aexp,c
  7536  001E94  D002               	goto	i2l1173
  7537  001E96                     i2l1174:
  7538  001E96  B022               	btfsc	___flmul@prod,0,c
  7539  001E98  D7FB               	goto	i2u285_40
  7540  001E9A                     i2l1173:
  7541  001E9A  5020               	movf	___flmul@aexp,w,c
  7542  001E9C  B4D8               	btfsc	status,2,c
  7543  001E9E  D01F               	goto	i2l3634
  7544  001EA0  0E01               	movlw	1
  7545  001EA2  2622               	addwf	___flmul@prod,f,c
  7546  001EA4  0E00               	movlw	0
  7547  001EA6  2223               	addwfc	___flmul@prod+1,f,c
  7548  001EA8  2224               	addwfc	___flmul@prod+2,f,c
  7549  001EAA  2225               	addwfc	___flmul@prod+3,f,c
  7550  001EAC  A025               	btfss	___flmul@prod+3,0,c
  7551  001EAE  D017               	goto	i2l3634
  7552  001EB0  C022  F017         	movff	___flmul@prod,??___flmul
  7553  001EB4  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  7554  001EB8  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  7555  001EBC  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  7556  001EC0  341A               	rlcf	??___flmul+3,w,c
  7557  001EC2  321A               	rrcf	??___flmul+3,f,c
  7558  001EC4  3219               	rrcf	??___flmul+2,f,c
  7559  001EC6  3218               	rrcf	??___flmul+1,f,c
  7560  001EC8  3217               	rrcf	??___flmul,f,c
  7561  001ECA  C017  F022         	movff	??___flmul,___flmul@prod
  7562  001ECE  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  7563  001ED2  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  7564  001ED6  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  7565  001EDA  4A26               	infsnz	___flmul@temp,f,c
  7566  001EDC  2A27               	incf	___flmul@temp+1,f,c
  7567  001EDE                     i2l3634:
  7568  001EDE  BE27               	btfsc	___flmul@temp+1,7,c
  7569  001EE0  D00D               	goto	i2l3638
  7570  001EE2  5027               	movf	___flmul@temp+1,w,c
  7571  001EE4  E103               	bnz	i2u289_40
  7572  001EE6  2826               	incf	___flmul@temp,w,c
  7573  001EE8  A0D8               	btfss	status,0,c
  7574  001EEA  D008               	goto	i2l3638
  7575  001EEC                     i2u289_40:
  7576  001EEC  0E00               	movlw	0
  7577  001EEE  6E22               	movwf	___flmul@prod,c
  7578  001EF0  0E00               	movlw	0
  7579  001EF2  6E23               	movwf	___flmul@prod+1,c
  7580  001EF4  0E80               	movlw	128
  7581  001EF6  6E24               	movwf	___flmul@prod+2,c
  7582  001EF8  0E7F               	movlw	127
  7583  001EFA  D020               	goto	L15
  7584  001EFC                     i2l3638:
  7585  001EFC  BE27               	btfsc	___flmul@temp+1,7,c
  7586  001EFE  D005               	goto	i2u290_40
  7587  001F00  5027               	movf	___flmul@temp+1,w,c
  7588  001F02  E10E               	bnz	i2l1181
  7589  001F04  0426               	decf	___flmul@temp,w,c
  7590  001F06  B0D8               	btfsc	status,0,c
  7591  001F08  D00B               	goto	i2l1181
  7592  001F0A                     i2u290_40:
  7593  001F0A  0E00               	movlw	0
  7594  001F0C  6E22               	movwf	___flmul@prod,c
  7595  001F0E  0E00               	movlw	0
  7596  001F10  6E23               	movwf	___flmul@prod+1,c
  7597  001F12  0E00               	movlw	0
  7598  001F14  6E24               	movwf	___flmul@prod+2,c
  7599  001F16  0E00               	movlw	0
  7600  001F18  6E25               	movwf	___flmul@prod+3,c
  7601  001F1A  0E00               	movlw	0
  7602  001F1C  6E1B               	movwf	___flmul@sign,c
  7603  001F1E  D00F               	goto	i2l3650
  7604  001F20                     i2l1181:
  7605  001F20  C026  F021         	movff	___flmul@temp,___flmul@bexp
  7606  001F24  0EFF               	movlw	255
  7607  001F26  1622               	andwf	___flmul@prod,f,c
  7608  001F28  0EFF               	movlw	255
  7609  001F2A  1623               	andwf	___flmul@prod+1,f,c
  7610  001F2C  0E7F               	movlw	127
  7611  001F2E  1624               	andwf	___flmul@prod+2,f,c
  7612  001F30  0E00               	movlw	0
  7613  001F32  1625               	andwf	___flmul@prod+3,f,c
  7614  001F34  B021               	btfsc	___flmul@bexp,0,c
  7615  001F36  8E24               	bsf	___flmul@prod+2,7,c
  7616  001F38  90D8               	bcf	status,0,c
  7617  001F3A  3021               	rrcf	___flmul@bexp,w,c
  7618  001F3C                     L15:
  7619  001F3C  6E25               	movwf	___flmul@prod+3,c
  7620  001F3E                     i2l3650:
  7621  001F3E  501B               	movf	___flmul@sign,w,c
  7622  001F40  1225               	iorwf	___flmul@prod+3,f,c
  7623  001F42  C022  F00F         	movff	___flmul@prod,?___flmul
  7624  001F46  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  7625  001F4A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  7626  001F4E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  7627  001F52  0012               	return		;funcret
  7628  001F54                     __end_of___flmul:
  7629                           	opt callstack 0
  7630                           
  7631 ;; *************** function ___flge *****************
  7632 ;; Defined at:
  7633 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;  ff1             4    0[COMRAM] unsigned char 
  7636 ;;  ff2             4    4[COMRAM] unsigned char 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;		None               void
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7648 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7650 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7651 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7652 ;;Total ram usage:       12 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_read_Ibat
  7658 ;;		_read_Ubat
  7659 ;;		_sprintf
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text34
  7664  002CD0                     __ptext34:
  7665                           	opt callstack 0
  7666  002CD0                     ___flge:
  7667                           	opt callstack 25
  7668                           
  7669                           ;incstack = 0
  7670  002CD0  0E00               	movlw	0
  7671  002CD2  1401               	andwf	___flge@ff1,w,c
  7672  002CD4  6E09               	movwf	??___flge& (0+255),c
  7673  002CD6  0E00               	movlw	0
  7674  002CD8  1402               	andwf	___flge@ff1+1,w,c
  7675  002CDA  6E0A               	movwf	(??___flge+1)& (0+255),c
  7676  002CDC  0E80               	movlw	128
  7677  002CDE  1403               	andwf	___flge@ff1+2,w,c
  7678  002CE0  6E0B               	movwf	(??___flge+2)& (0+255),c
  7679  002CE2  0E7F               	movlw	127
  7680  002CE4  1404               	andwf	___flge@ff1+3,w,c
  7681  002CE6  6E0C               	movwf	(??___flge+3)& (0+255),c
  7682  002CE8  5009               	movf	??___flge,w,c
  7683  002CEA  100A               	iorwf	??___flge+1,w,c
  7684  002CEC  100B               	iorwf	??___flge+2,w,c
  7685  002CEE  100C               	iorwf	??___flge+3,w,c
  7686  002CF0  A4D8               	btfss	status,2,c
  7687  002CF2  D008               	goto	i2l4240
  7688  002CF4  0E00               	movlw	0
  7689  002CF6  6E01               	movwf	___flge@ff1,c
  7690  002CF8  0E00               	movlw	0
  7691  002CFA  6E02               	movwf	___flge@ff1+1,c
  7692  002CFC  0E00               	movlw	0
  7693  002CFE  6E03               	movwf	___flge@ff1+2,c
  7694  002D00  0E00               	movlw	0
  7695  002D02  6E04               	movwf	___flge@ff1+3,c
  7696  002D04                     i2l4240:
  7697  002D04  0E00               	movlw	0
  7698  002D06  1405               	andwf	___flge@ff2,w,c
  7699  002D08  6E09               	movwf	??___flge& (0+255),c
  7700  002D0A  0E00               	movlw	0
  7701  002D0C  1406               	andwf	___flge@ff2+1,w,c
  7702  002D0E  6E0A               	movwf	(??___flge+1)& (0+255),c
  7703  002D10  0E80               	movlw	128
  7704  002D12  1407               	andwf	___flge@ff2+2,w,c
  7705  002D14  6E0B               	movwf	(??___flge+2)& (0+255),c
  7706  002D16  0E7F               	movlw	127
  7707  002D18  1408               	andwf	___flge@ff2+3,w,c
  7708  002D1A  6E0C               	movwf	(??___flge+3)& (0+255),c
  7709  002D1C  5009               	movf	??___flge,w,c
  7710  002D1E  100A               	iorwf	??___flge+1,w,c
  7711  002D20  100B               	iorwf	??___flge+2,w,c
  7712  002D22  100C               	iorwf	??___flge+3,w,c
  7713  002D24  A4D8               	btfss	status,2,c
  7714  002D26  D008               	goto	i2l4244
  7715  002D28  0E00               	movlw	0
  7716  002D2A  6E05               	movwf	___flge@ff2,c
  7717  002D2C  0E00               	movlw	0
  7718  002D2E  6E06               	movwf	___flge@ff2+1,c
  7719  002D30  0E00               	movlw	0
  7720  002D32  6E07               	movwf	___flge@ff2+2,c
  7721  002D34  0E00               	movlw	0
  7722  002D36  6E08               	movwf	___flge@ff2+3,c
  7723  002D38                     i2l4244:
  7724  002D38  AE04               	btfss	___flge@ff1+3,7,c
  7725  002D3A  D009               	goto	i2l4248
  7726  002D3C  6C01               	negf	___flge@ff1,c
  7727  002D3E  1E02               	comf	___flge@ff1+1,f,c
  7728  002D40  B0D8               	btfsc	status,0,c
  7729  002D42  2A02               	incf	___flge@ff1+1,f,c
  7730  002D44  1E03               	comf	___flge@ff1+2,f,c
  7731  002D46  B0D8               	btfsc	status,0,c
  7732  002D48  2A03               	incf	___flge@ff1+2,f,c
  7733  002D4A  0E80               	movlw	128
  7734  002D4C  5604               	subfwb	___flge@ff1+3,f,c
  7735  002D4E                     i2l4248:
  7736  002D4E  AE08               	btfss	___flge@ff2+3,7,c
  7737  002D50  D009               	goto	i2l806
  7738  002D52  6C05               	negf	___flge@ff2,c
  7739  002D54  1E06               	comf	___flge@ff2+1,f,c
  7740  002D56  B0D8               	btfsc	status,0,c
  7741  002D58  2A06               	incf	___flge@ff2+1,f,c
  7742  002D5A  1E07               	comf	___flge@ff2+2,f,c
  7743  002D5C  B0D8               	btfsc	status,0,c
  7744  002D5E  2A07               	incf	___flge@ff2+2,f,c
  7745  002D60  0E80               	movlw	128
  7746  002D62  5608               	subfwb	___flge@ff2+3,f,c
  7747  002D64                     i2l806:
  7748  002D64  0E00               	movlw	0
  7749  002D66  1A01               	xorwf	___flge@ff1,f,c
  7750  002D68  0E00               	movlw	0
  7751  002D6A  1A02               	xorwf	___flge@ff1+1,f,c
  7752  002D6C  0E00               	movlw	0
  7753  002D6E  1A03               	xorwf	___flge@ff1+2,f,c
  7754  002D70  0E80               	movlw	128
  7755  002D72  1A04               	xorwf	___flge@ff1+3,f,c
  7756  002D74  0E00               	movlw	0
  7757  002D76  1A05               	xorwf	___flge@ff2,f,c
  7758  002D78  0E00               	movlw	0
  7759  002D7A  1A06               	xorwf	___flge@ff2+1,f,c
  7760  002D7C  0E00               	movlw	0
  7761  002D7E  1A07               	xorwf	___flge@ff2+2,f,c
  7762  002D80  0E80               	movlw	128
  7763  002D82  1A08               	xorwf	___flge@ff2+3,f,c
  7764  002D84  5005               	movf	___flge@ff2,w,c
  7765  002D86  5C01               	subwf	___flge@ff1,w,c
  7766  002D88  5006               	movf	___flge@ff2+1,w,c
  7767  002D8A  5802               	subwfb	___flge@ff1+1,w,c
  7768  002D8C  5007               	movf	___flge@ff2+2,w,c
  7769  002D8E  5803               	subwfb	___flge@ff1+2,w,c
  7770  002D90  5008               	movf	___flge@ff2+3,w,c
  7771  002D92  5804               	subwfb	___flge@ff1+3,w,c
  7772  002D94  B0D8               	btfsc	status,0,c
  7773  002D96  D002               	goto	i2l4254
  7774  002D98  90D8               	bcf	status,0,c
  7775  002D9A  0012               	return	
  7776  002D9C                     i2l4254:
  7777  002D9C  80D8               	bsf	status,0,c
  7778  002D9E  0012               	return		;funcret
  7779  002DA0                     __end_of___flge:
  7780                           	opt callstack 0
  7781                           
  7782 ;; *************** function _USARTWriteString *****************
  7783 ;; Defined at:
  7784 ;;		line 85 in file "usart_pic16.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  str             2    1[COMRAM] PTR const unsigned char 
  7787 ;;		 -> serial@str_V(8), serial@str_A(8), 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;		None
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  1    wreg      void 
  7792 ;; Registers used:
  7793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;Total ram usage:        2 bytes
  7804 ;; Hardware stack levels used:    1
  7805 ;; Hardware stack levels required when called:    1
  7806 ;; This function calls:
  7807 ;;		_USARTWriteChar
  7808 ;; This function is called by:
  7809 ;;		_serial
  7810 ;;		_USARTWriteLine
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text35
  7815  003486                     __ptext35:
  7816                           	opt callstack 0
  7817  003486                     _USARTWriteString:
  7818                           	opt callstack 25
  7819                           
  7820                           ;usart_pic16.c: 87: while(*str!='\0')
  7821                           
  7822                           ;incstack = 0
  7823  003486  D009               	goto	i2l4606
  7824  003488                     i2l4602:
  7825                           
  7826                           ;usart_pic16.c: 88: {;usart_pic16.c: 89: USARTWriteChar(*str);
  7827  003488  C002  FFD9         	movff	USARTWriteString@str,fsr2l
  7828  00348C  C003  FFDA         	movff	USARTWriteString@str+1,fsr2h
  7829  003490  50DF               	movf	indf2,w,c
  7830  003492  EC7F  F01A         	call	_USARTWriteChar
  7831                           
  7832                           ;usart_pic16.c: 90: str++;
  7833  003496  4A02               	infsnz	USARTWriteString@str,f,c
  7834  003498  2A03               	incf	USARTWriteString@str+1,f,c
  7835  00349A                     i2l4606:
  7836  00349A  C002  FFD9         	movff	USARTWriteString@str,fsr2l
  7837  00349E  C003  FFDA         	movff	USARTWriteString@str+1,fsr2h
  7838  0034A2  50DF               	movf	indf2,w,c
  7839  0034A4  B4D8               	btfsc	status,2,c
  7840  0034A6  0012               	return	
  7841  0034A8  D7EF               	goto	i2l4602
  7842  0034AA                     __end_of_USARTWriteString:
  7843                           	opt callstack 0
  7844                           
  7845 ;; *************** function _USARTWriteChar *****************
  7846 ;; Defined at:
  7847 ;;		line 78 in file "usart_pic16.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  ch              1    wreg     unsigned char 
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;  ch              1    0[COMRAM] unsigned char 
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		wreg
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;Total ram usage:        1 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; This function calls:
  7868 ;;		Nothing
  7869 ;; This function is called by:
  7870 ;;		_USARTWriteString
  7871 ;;		_USARTWriteLine
  7872 ;;		_USARTWriteInt
  7873 ;;		_USARTGotoNewLine
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text36
  7878  0034FE                     __ptext36:
  7879                           	opt callstack 0
  7880  0034FE                     _USARTWriteChar:
  7881                           	opt callstack 25
  7882                           
  7883                           ;incstack = 0
  7884                           ;USARTWriteChar@ch stored from wreg
  7885  0034FE  6E01               	movwf	USARTWriteChar@ch,c
  7886  003500                     
  7887                           ;usart_pic16.c: 80: while(!PIR1bits.TXIF);
  7888  003500  A89E               	btfss	3998,4,c	;volatile
  7889  003502  D7FE               	goto	i2l3860
  7890                           
  7891                           ;usart_pic16.c: 82: TXREG=ch;
  7892  003504  C001  FFAD         	movff	USARTWriteChar@ch,4013	;volatile
  7893  003508  0012               	return		;funcret
  7894  00350A                     __end_of_USARTWriteChar:
  7895                           	opt callstack 0
  7896                           
  7897                           	psect	rparam
  7898  0000                     
  7899                           	psect	temp
  7900  00005E                     btemp:
  7901                           	opt callstack 0
  7902  00005E                     	ds	1
  7903  0000                     int$flags	set	btemp
  7904  0000                     wtemp8	set	btemp+1
  7905  0000                     ttemp5	set	btemp+1
  7906  0000                     ttemp6	set	btemp+4
  7907  0000                     ttemp7	set	btemp+8
  7908                           tosu	equ	0xFFF
  7909                           tosh	equ	0xFFE
  7910                           tosl	equ	0xFFD
  7911                           stkptr	equ	0xFFC
  7912                           pclatu	equ	0xFFB
  7913                           pclath	equ	0xFFA
  7914                           pcl	equ	0xFF9
  7915                           tblptru	equ	0xFF8
  7916                           tblptrh	equ	0xFF7
  7917                           tblptrl	equ	0xFF6
  7918                           tablat	equ	0xFF5
  7919                           prodh	equ	0xFF4
  7920                           prodl	equ	0xFF3
  7921                           indf0	equ	0xFEF
  7922                           postinc0	equ	0xFEE
  7923                           postdec0	equ	0xFED
  7924                           preinc0	equ	0xFEC
  7925                           plusw0	equ	0xFEB
  7926                           fsr0h	equ	0xFEA
  7927                           fsr0l	equ	0xFE9
  7928                           wreg	equ	0xFE8
  7929                           indf1	equ	0xFE7
  7930                           postinc1	equ	0xFE6
  7931                           postdec1	equ	0xFE5
  7932                           preinc1	equ	0xFE4
  7933                           plusw1	equ	0xFE3
  7934                           fsr1h	equ	0xFE2
  7935                           fsr1l	equ	0xFE1
  7936                           bsr	equ	0xFE0
  7937                           indf2	equ	0xFDF
  7938                           postinc2	equ	0xFDE
  7939                           postdec2	equ	0xFDD
  7940                           preinc2	equ	0xFDC
  7941                           plusw2	equ	0xFDB
  7942                           fsr2h	equ	0xFDA
  7943                           fsr2l	equ	0xFD9
  7944                           status	equ	0xFD8


Data Sizes:
    Strings     29
    Constant    144
    Data        0
    BSS         128
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      93
    BANK0           160     61     121
    BANK1           256      6      70
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> serial@str_V(BANK0[8]), serial@str_A(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    USART2WriteString@str	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_3(CODE[19]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 8
		 -> serial@str_V(BANK0[8]), serial@str_A(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _serial in COMRAM

    _serial->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->_fround
    _read_Ubat->___flmul
    _read_Ibat->___flmul
    ___flmul->___awdiv
    _USARTWriteString->_USARTWriteChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _serial in BANK0

    _serial->_sprintf

Critical Paths under _main in BANK1

    _eusart_config->_USART2Init
    _eusart_config->_USARTInit
    _USART2WriteString->_USART2WriteChar
    _USART2GotoNewLine->_USART2WriteChar

Critical Paths under _serial in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _serial in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _serial in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _serial in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _serial in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _serial in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _serial in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _serial in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _serial in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _serial in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _serial in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _serial in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _serial in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _serial in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _serial in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     459
                                              4 BANK1      2     2      0
                         _adc_config
                             _config
                      _eusart_config
                         _pwm_config
 ---------------------------------------------------------------------------------
 (1) _pwm_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eusart_config                                        0     0      0     459
                  _USART2GotoNewLine
                         _USART2Init
                  _USART2WriteString
                          _USARTInit
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            4     2      2     121
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _USART2WriteString                                    2     0      2     186
                                              1 BANK1      2     0      2
                    _USART2WriteChar
 ---------------------------------------------------------------------------------
 (2) _USART2Init                                           4     2      2     121
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _USART2GotoNewLine                                    0     0      0      31
                    _USART2WriteChar
 ---------------------------------------------------------------------------------
 (3) _USART2WriteChar                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _serial                                              36    36      0   46930
                                             25 BANK0     36    36      0
                   _USARTWriteString
                          _read_Ibat
                          _read_Ubat
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             44    36      8   32790
                                             76 COMRAM    11     3      8
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                                9     5      4    7951
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1512
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1668
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _fround                                              13     9      4    5806
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     609
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2737
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _read_Ubat                                            5     1      4    7523
                                             39 COMRAM     5     1      4
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    1399
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) _read_Ibat                                            6     2      4    6124
                                             39 COMRAM     6     2      4
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     702
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    4328
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1094
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _USARTWriteString                                     2     0      2     295
                                              1 COMRAM     2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (6) _USARTWriteChar                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_config
   _config
   _eusart_config
     _USART2GotoNewLine
       _USART2WriteChar
     _USART2Init
     _USART2WriteString
       _USART2WriteChar
     _USARTInit
   _pwm_config

 _serial (ROOT)
   _USARTWriteString
     _USARTWriteChar
   _read_Ibat
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___xxtofl
   _read_Ubat
     ___fldiv
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      46       7       27.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5D       1       98.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11C      12        0.0%
DATA                 0      0     11C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Feb 21 16:28:25 2020

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                           _c 0058  
              ___fldiv@sign 0011                ___awdiv@sign 000C         ___wmul@multiplicand 0003  
        USARTInit@baud_rate 0140                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                         l309 314C  
                       l395 2F52                __CFG_CPB$OFF 000000                         _PR2 000FBB  
              __CFG_CPD$OFF 000000                         _TMR 00D7                         _cor 005A  
              ___awmod@sign 0006                         wreg 000FE8                  _TXSTA1bits 000FAC  
                _TXSTA2bits 000F72                ___flmul@aexp 0020                ___flmul@bexp 0021  
         _USART2GotoNewLine 34E2                ___flmul@sign 001B                ___flmul@temp 0026  
              ___flmul@prod 0022                __CFG_LVP$OFF 000000          ?_USART2GotoNewLine 0001  
              ___fltol@exp1 0031                        l5310 2EF0                        l5312 2EF8  
                      l5320 2F06                        l5314 2EFC                        l5316 2F00  
                      l5404 30BE                        l5352 344C                        l5272 30EE  
                      l5266 34F4                        l5274 30F2                        l5282 3100  
                      l5348 3436                        l5276 30F6                        l5278 30FA  
                      l5740 3144                        l5742 2F2C                        l5734 3126  
                      l5744 2F36                        l5736 3130                        l5746 2F40  
                      l5738 313A                        l5748 2F4A                        STR_1 10A9  
                      STR_2 10A4                        STR_3 1091                        _LATA 000F89  
                      _LATB 000F8A                        _LATC 000F8B                        _LATD 000F8C  
                      _LATE 000F8D                        u4645 308A                        u4647 308C  
                      u4757 30B0                        i2l71 025A                        u4767 30CA  
                      i2l92 01DA                        i2l84 0134                        _TMR1 000FCE  
                      _TMR3 000FB2                        _Ibat 00C7                        _Ubat 00BF  
    __end_of_USARTWriteChar 350A                        _main 306E                        _tens 00BB  
                      fsr2h 000FDA                        indf2 000FDF                        fsr2l 000FD9  
                      btemp 005E               __CFG_BORV$190 000000         ??_USART2GotoNewLine 0141  
                      prodh 000FF4                        prodl 000FF3                        start 0280  
             __CFG_IESO$OFF 000000             ___fldiv@new_exp 0012                _sprintf$2198 0060  
              ___param_bank 000000                _BAUDCON2bits 000F70               ___fltol@sign1 0030  
           __end_of___fladd 2260                       ?_main 0001             __end_of___fldiv 2772  
           __end_of___awdiv 2FEC             __end_of___flneg 3434             __end_of___awmod 31D0  
           __end_of___flmul 1F54             __end_of___flsub 332A             __end_of___fltol 2E5A  
           __end_of___lldiv 306E            USARTWriteChar@ch 0001             ___awdiv@divisor 0009  
           __end_of___llmod 3236                       _T2CON 000FBA                       _RC1IF 007CF5  
           __end_of___lwdiv 32E4             __end_of___lwmod 336C                       i2l250 2CA4  
                     i2l260 29DC                       i2l261 29DA                       i2l510 1614  
                     i2l249 2CBE                       i2l257 299A                       i2l555 305C  
                     i2l806 2D64                       i2l970 3224             ___awdiv@counter 000B  
                     i2l893 2A6E                       i2l894 2A96                       _RCREG 000FAE  
 __end_of_USART2GotoNewLine 34F0                       _PORTA 000F80                       _PORTB 000F81  
                     _PORTC 000F82                       _PORTD 000F83                       _PORTE 000F84  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95                       _TRISE 000F96                       _TXREG 000FAD  
                     _UQEnd 005C               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000             __end_of_dpowers 1091  
                     _scale 1832             __end_of_isdigit 34C8          __CFG_MCLRE$EXTMCLR 000000  
                     _str_A 009D                       _str_V 00A5              __CFG_BOREN$OFF 000000  
                     tablat 000FF5          __size_of_USARTInit 0078             ?_USARTWriteChar 0001  
               ?_USART2Init 0140                       ttemp5 005F                       ttemp6 0062  
                     ttemp7 0066                       status 000FD8                       wtemp8 005F  
           __end_of_sprintf 1832              __CFG_HFOFST$ON 000000             __initialization 33D8  
              __end_of_main 30E8                      ??_main 0144               __activetblptr 000002  
      __size_of__tdiv_to_l_ 00FE                      _ADCON0 000FC2                      _ADCON1 000FC1  
                    _ADCON2 000FC0            ___llmod@dividend 0001                      ?_scale 0028  
                    _ADRESH 000FC4                      _CCPR1L 000FBE                      _CCPR2L 000F67  
                    _CCPR3L 000F5E            ___awdiv@dividend 0007                      _ANSELA 000F38  
                    _ANSELB 000F39                      _ANSELC 000F3A                      _ANSELD 000F3B  
                    _ANSELE 000F3C                      i2l1104 21CE                      i2l1105 21CA  
                    i2l1041 32DA    __size_of_USART2WriteChar 000E                      i2l1051 3362  
                    i2l1212 282E                      i2l1205 27B0                      i2l1134 265C  
                    i2l1080 2074                      i2l1145 26CA                      i2l1146 26C6  
                    i2l1164 1C82                      i2l1181 1F20                      i2l1173 1E9A  
                    i2l1174 1E96                      i2l1095 2168                      i2l1079 2096  
                    i2l4022 2B88                      i2l4014 2B58                      i2l4120 258E  
                    i2l4112 255A                      i2l3402 2028                      i2l4034 2BA4  
                    i2l4204 2768                      i2l4108 2556                      i2l3340 1F84  
                    i2l4300 2E2C                      i2l4060 300E                      i2l4044 2BBC  
                    i2l4206 276A                      i2l4134 25BC                      i2l4126 25A4  
                    i2l3510 223A                      i2l3502 2214                      i2l3430 20BA  
                    i2l3414 2082                      i2l4062 301A                      i2l4046 2BC8  
                    i2l4038 2BB4              __CFG_WDTEN$OFF 000000                      i2l4240 2D04  
                    i2l4152 2634                      i2l4144 260C                      i2l4232 2EE0  
                    i2l4224 2E8E                      i2l3440 20E0                      i2l3416 2086  
                    i2l3360 1FC8                      i2l3336 1F80                      i2l4072 304E  
                    i2l4400 10D0                      i2l4170 2690                      i2l3514 2242  
                    i2l4306 2E48                      i2l4322 3216                      i2l4314 31E2  
                    i2l4410 1100                      i2l4402 10D6                      i2l4244 2D38  
                    i2l3540 1C32                      i2l4340 27E4                      i2l4332 27C0  
                    i2l4164 2672                      i2l4092 251A                      i2l4228 2EC2  
                    i2l3516 2244                      i2l3372 1FEC                      i2l3364 1FCC  
                    i2l4316 31EE                      i2l4500 14E0                      i2l4420 115A  
                    i2l4254 2D9C                      i2l3614 1E60                      i2l3542 1C42  
                    i2l4350 2854                      i2l4342 27F0                      i2l4190 270E  
                    i2l4158 265A                      i2l4262 3422                      i2l3438 20DC  
                    i2l4414 1138                      i2l4248 2D4E                      i2l3608 1E42  
                    i2l4352 2860                      i2l4344 2816                      i2l4088 2516  
                    i2l3448 20F2                      i2l4272 2DBE                      i2l3712 3180  
                    i2l4520 1540                      i2l4432 1196                      i2l4424 115E  
                    i2l4416 114E                      i2l4602 3488                      i2l3650 1F3E  
                    i2l3634 1EDE                      i2l3538 1C2E                      i2l4338 27DE  
                    i2l4194 2732                      i2l3466 218C                      i2l3482 21AC  
                    i2l3458 2158                      i2l4530 15DA                      i2l4506 14E4  
                    i2l4442 11E4                      i2l4426 1182                      i2l3556 1C6E  
                    i2l3476 21A2                      i2l4292 2E18                      i2l3732 31C6  
                    i2l3724 31AE                      i2l3716 318E                      i2l3708 3174  
                    i2l4606 349A                      i2l3638 1EFC                      i2l3566 1CA0  
                    i2l3558 1C72                      i2l4198 275C                      i2l4630 299C  
                    i2l3742 32A8                      i2l3670 2F8C                      i2l3718 3196  
                    i2l3910 1B38                      i2l3902 1A1E                      i2l4550 1636  
                    i2l4542 1618                      i2l4470 131A                      i2l4710 005C  
                    i2l4702 0046                      i2l4368 28A0                      i2l4288 2E08  
                    i2l3744 32B0                      i2l3664 2F7C                      i2l3728 31B8  
                    i2l4536 15F0                      i2l4528 15D0                      i2l4720 0074  
                    i2l4298 2E20                      i2l3754 32D0                      i2l3770 3358  
                    i2l3762 3338                      i2l4554 1696                      i2l4482 13D2  
                    i2l4474 1366                      i2l4466 12EC                      i2l4458 126E  
                    i2l4714 0066                      i2l4706 0052                      i2l3860 3500  
                    i2l3764 3340                      i2l3676 2FA2                      i2l3692 2FD4  
                    i2l3916 1BD8                      i2l4580 17BA                      i2l4572 1798  
                    i2l4564 1776                      i2l4396 10BC                      i2l3678 2FAA  
                    i2l4566 1782                      i2l4486 1400                      i2l4574 17A2  
                    i2l3872 23C0                      i2l3928 34C0                      i2l3696 2FE2  
                    i2l3688 2FCA                      i2l4496 1468                      i2l4760 0138  
                    i2l4728 0084                      i2l3938 2A1A                      i2l4594 180C  
                    i2l4754 00EE                      i2l4738 0096                      i2l3892 1954  
                    i2l4748 00A8                      u321_41 29FE                      i2l3974 2AB0  
                    i2l3878 249C                      i2l4782 019A                      i2l4766 015C  
                    i2l3984 2AC8                      i2l4776 018C                      i2l4768 0160  
                    i2l4696 0038                      i2l3994 2B0A                      i2l3986 2AD4  
                    i2l3978 2AC0                      i2l3898 19F4                      i2l4786 01B6  
                    i2l4778 0190                      i2l4798 01E8                      u323_41 2A2A  
                    _RCREG1 000FAE                      _OSCCON 000FD3                      _SPBRG1 000FAF  
                    _SPBRG2 000F75                      _TXREG2 000F73            __end_of___xxtofl 28B2  
                    _URBuff 0100              __CFG_XINST$OFF 000000            __end_of__powers_ 1035  
                    ___flge 2CD0                      ___fleq 2E5A                   ??___fladd 003D  
                    ___wmul 3460                   ??___fldiv 0009                   ??___awdiv 000B  
                 ??___flneg 0005                   ??___awmod 0005                   ??___flmul 0017  
                 ??___flsub 004D                   ??___fltol 002C                   ??___lldiv 0009  
                 ??___llmod 0009                   ??___lwdiv 000A                   ??___lwmod 0005  
                    _config 3236    __end_of_USARTWriteString 34AA                      _fround 2260  
                    clear_0 33DE                      clear_1 33EA            ___awdiv@quotient 000D  
           ___awmod@divisor 0003                      _tens_A 00CB                      _serial 0008  
           ___awmod@counter 0005           __end_of_USARTInit 3160         __size_of_USART2Init 0084  
__size_of_USART2GotoNewLine 000E                   ??_isdigit 0001                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                 ??_sprintf 0055                  ___flge@ff1 0001                  ___flge@ff2 0005  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                ___fleq@ff1 0001                  ___fleq@ff2 0005                  __accesstop 0060  
   __end_of__initialization 33F8             __CFG_PBADEN$OFF 000000                  ___flneg@f1 0001  
             ___rparam_used 000001                  ___fltol@f1 0028              __pcstackCOMRAM 0001  
    __size_of_eusart_config 0038                  _adc_config 34C8               __end_of_scale 1C02  
                __div_to_l_ 2AEC             __div_to_l_@exp1 000E             __div_to_l_@cntr 000D  
                   ??_scale 002C             __div_to_l_@quot 0009                  __pbssBANK0 009D  
                __pbssBANK1 0100           _USART2WriteString 3434             __CFG_PLLCFG$OFF 000000  
        ?_USART2WriteString 0141                  __pnvCOMRAM 005C          __size_of_read_Ibat 00F0  
        __size_of_read_Ubat 013C               __div_to_l_@f1 0001               __div_to_l_@f2 0005  
       USART2Init@baud_rate 0140           ??_USART2WriteChar 0140          __CFG_CCP2MX$PORTC1 000000  
       ??_USART2WriteString 0143                     ?___flge 0001                     ?___fleq 0001  
                   ?___wmul 0001          __CFG_CCP3MX$PORTB5 000000                     ?_config 0001  
                   _CCP1CON 000FBD                     _CCP2CON 000F66                     _CCP3CON 000F5D  
                   ?_fround 0028                     ?_serial 0001                   ?___xxtofl 0001  
                   _SPBRGH2 000F76            ??_USARTWriteChar 0001               _eusart_config 336C  
 __end_of_USART2WriteString 3460          USARTWriteInt@F5902 00B2                     _UQFront 005D  
              ??_USART2Init 0142             __CFG_PWRTEN$OFF 000000           __end_of__npowers_ 1069  
                   __Hparam 0000                  _scale$2197 002C                     __Lparam 0000  
               ?_adc_config 0001             __size_of___flge 00D0             __size_of___fleq 008A  
                   ___fladd 1F54                     ___fldiv 24EA                     ___awdiv 2F68  
                   ___flneg 3406                     ___awmod 3160                     ___flmul 1C02  
                   ___flsub 32E4                     ___fltol 2DA0                     ___lldiv 2FEC  
           __size_of___wmul 0026                     ___llmod 31D0                     ___lwdiv 3292  
                   ___lwmod 332A                __psmallconst 1000             __size_of_config 005C  
           __CFG_STVREN$OFF 000000                     __pcinit 33D8             __size_of_fround 028A  
                   __ramtop 1000                     __ptext0 306E                     __ptext1 33A4  
                   __ptext2 336C             __size_of_serial 0278                     __ptext3 30E8  
                   __ptext4 3434                     __ptext5 2EE4                     __ptext6 34E2  
                   __ptext7 34F0                     __ptext8 3236                     __ptext9 34C8  
               ?__div_to_l_ 0001           __end_of_read_Ibat 2CD0                 serial@str_A 008B  
               serial@str_V 0083                     _dpowers 1069          __end_of_USART2Init 2F68  
         __end_of_read_Ubat 29EE                     _dty_car 00D3                     _isdigit 34AA  
                ??___xxtofl 0005            ___awmod@dividend 0001              ?_eusart_config 0001  
                   _timp_us 00B7                     _sprintf 10B0        end_of_initialization 33F8  
             __Lmediumconst 0000             ___lldiv@divisor 0005             ___lldiv@counter 000D  
                   serial@i 0093                     serial@j 0097                     postinc0 000FEE  
                   postinc2 000FDE              __tdiv_to_l_@f1 0001              __tdiv_to_l_@f2 0005  
             ??__tdiv_to_l_ 0009           ?_USARTWriteString 0002                   _PORTAbits 000F80  
                 _PORTBbits 000F81          ??_USARTWriteString 0004                 ___fladd@grs 0044  
             ___xxtofl@sign 0009                   _USARTInit 30E8                   _TRISAbits 000F92  
                 _TRISDbits 000F95                  _pwm_config 33A4                 ___fldiv@grs 0014  
               ___fldiv@rem 000D  __size_of_USART2WriteString 002C         __size_of_adc_config 001A  
               ___flmul@grs 001C         __size_of__div_to_l_ 00F4              __end_of___flge 2DA0  
            __end_of___fleq 2EE4              __end_of___wmul 3486              __end_of_config 3292  
            __end_of_fround 24EA              __end_of_serial 0280             ??_eusart_config 0144  
       start_initialization 33D8                  ?_USARTInit 0140        USART2WriteString@str 0141  
       __end_of__tdiv_to_l_ 2AEC             _USART2WriteChar 34F0             ___llmod@divisor 0005  
           ___llmod@counter 0009                    ??___flge 0009                    ??___fleq 0009  
                  ??___wmul 0005                    ??_config 0140                    ??_fround 002C  
                  ??_serial 0079               sprintf@tmpval 006E                   ___fladd@a 0039  
                 ___fladd@b 0035                  fround@prec 0034                   ___fldiv@a 0005  
                 ___fldiv@b 0001                   ___flmul@a 0013                   ___flmul@b 000F  
               __pbssCOMRAM 0058                   ___flsub@a 0049                   ___flsub@b 0045  
             __pcstackBANK0 0060               __pcstackBANK1 0140                 ?_pwm_config 0001  
         __size_of___xxtofl 0140                _isdigit$1981 0002                 sprintf@flag 0066  
               sprintf@eexp 006C                 sprintf@fval 0074                 sprintf@prec 0072  
          ___lwdiv@dividend 0006                   __pintcode 0008                ??_adc_config 0140  
                  ?___fladd 0035                    ?___fldiv 0001                    ?___awdiv 0007  
                  ?___flneg 0001                    ?___awmod 0001                    ?___flmul 000F  
                  ?___flsub 0045                    ?___fltol 0028                    ?___lldiv 0001  
                  ?___llmod 0001                   __npowers_ 1035                    ?___lwdiv 0006  
                  ?___lwmod 0001            __CFG_PRICLKEN$ON 000000                 __tdiv_to_l_ 29EE  
       USART2WriteInt@F5914 00AD                ??__div_to_l_ 0009                 __smallconst 1000  
   __end_of_USART2WriteChar 34FE                    ?_isdigit 0001                 ??_USARTInit 0142  
                  _CCPTMRS0 000F49                   _read_Ibat 2BE0            ___lwdiv@quotient 000A  
                 _read_Ubat 28B2                    ?_sprintf 004D              __size_of_scale 03D0  
                serial@flag 009B          __end_of_adc_config 34E2              ___wmul@product 0005  
                  _LATDbits 000F8C                    _LATEbits 000F8D                    _PIE1bits 000F9D  
                  _PIE3bits 000FA3                    i2u301_40 319A                   _rez_adc_A 00CF  
                  i2u305_40 32B4                   _rez_adc_U 00C3                    i2u330_40 2AF8  
                  i2u322_40 2A08                    i2u410_40 151A                    i2u243_40 204A  
                  i2u403_40 132C                    i2u244_40 205A                    i2u308_40 3344  
                  i2u404_40 1378                    i2u261_40 21B0                    i2u245_40 205C  
                  i2u413_40 15FE                    i2u421_41 17EA                    i2u414_40 160E  
                  i2u263_40 21C4                    i2u423_40 1824                    i2u407_40 13D2  
                  i2u280_40 1C8E                    i2u360_40 271C                    i2u248_40 209E  
                  i2u336_40 2BCE                    i2u281_40 1E04                    i2u361_40 2740  
                  i2u329_40 2ADA                    _PIR1bits 000F9E                    i2u281_45 1DFA  
        __end_of__div_to_l_ 2BE0                    i2u290_40 1F0A                    i2u338_40 301E  
                  i2u356_40 26C0                    i2u372_40 2DAC                    i2u380_40 31F2  
                  i2u285_40 1E90                    i2u365_40 2EDC                    i2u269_40 2220  
                  i2u373_40 2DDC                    _PIR3bits 000FA4                    i2u373_45 2DD2  
                  i2u295_40 2FAE                    i2u480_47 01CC                    i2u289_40 1EEC  
                  i2u377_40 2E32                    i2u481_47 28BC                    i2u482_47 28CC  
                  i2u483_47 298A                    i2u388_40 286A                    i2u484_47 29CA  
                  i2u485_47 2BEA                    i2u477_47 014E                    i2u486_47 2BFA  
                  i2u478_47 0176                    i2u487_47 2C94                    i2u479_47 01A6  
                  i2u488_47 2CAE            __CFG_WDTPS$32768 000000         __size_of_pwm_config 0034  
                _ADCON0bits 000FC2                  _ADCON2bits 000FC0           ___wmul@multiplier 0001  
                ?_read_Ibat 0028                  ?_read_Ubat 0028   __size_of_USARTWriteString 0024  
   __size_of_USARTWriteChar 000C                    __Hrparam 0000                    __Lrparam 0000  
         __CFG_P2BMX$PORTD2 000000            __size_of___fladd 030C            __size_of___fldiv 0288  
          __size_of___awdiv 0084            __size_of___flneg 002E            __size_of___awmod 0070  
          __size_of___flmul 0352            __size_of___flsub 0046            __size_of___fltol 00BA  
          __size_of___lldiv 0082            __size_of___llmod 0066            __size_of___lwdiv 0052  
          __size_of___lwmod 0042                 _fround$2195 0030                 _fround$2196 002C  
                _ANSELAbits 000F38            ?_USART2WriteChar 0001                  sprintf@val 0068  
                  ___xxtofl 2772            __size_of_isdigit 001E             ___lwdiv@divisor 0008  
           ___lwdiv@counter 000C                    __ptext11 10B0                    __ptext20 2AEC  
                  __ptext12 1832                    __ptext21 3460                    __ptext13 3160  
                  __ptext30 24EA                    __ptext22 31D0                    __ptext14 2F68  
                  __ptext31 2BE0                    __ptext23 2FEC                    __ptext15 34AA  
                  __ptext32 2772                    __ptext24 2DA0                    __ptext16 2260  
                  __ptext33 1C02                    __ptext25 32E4                    __ptext17 332A  
                  __ptext34 2CD0                    __ptext26 1F54                    __ptext18 3292  
                  __ptext35 3486                    __ptext27 3406                    __ptext19 29EE  
                  __ptext36 34FE                    __ptext28 2E5A                    __ptext29 28B2  
                  __powers_ 1001                    _distanta 00D5            __size_of_sprintf 0782  
             __size_of_main 007A                    int$flags 005E                 _OSCTUNEbits 000F9B  
                _INTCONbits 000FF2                ??_pwm_config 0140       __end_of_eusart_config 33A4  
               ??_read_Ibat 002C                    isdigit@c 0003                 ??_read_Ubat 002C  
                  scale@scl 0030                    intlevel2 0000                   sprintf@ap 0064  
          __tdiv_to_l_@exp1 0011                   sprintf@sp 004D            __tdiv_to_l_@cntr 0010  
          __tdiv_to_l_@quot 000C           USART2WriteChar@ch 0140            ___lwmod@dividend 0001  
          ___lldiv@dividend 0001                  _RCSTA1bits 000FAB                  _RCSTA2bits 000F71  
        __end_of_pwm_config 33D8         USARTWriteString@str 0002                ?__tdiv_to_l_ 0001  
                  sprintf@c 0078                    sprintf@f 004F            ___lldiv@quotient 0009  
           ___lwmod@divisor 0003             ___lwmod@counter 0005           __CFG_T3CMX$PORTC0 000000  
             ___fladd@signs 0041            _USARTWriteString 3486                  _USART2Init 2EE4  
              ___fladd@aexp 0042                ___fladd@bexp 0043           __CFG_FOSC$INTIO67 000000  
            _USARTWriteChar 34FE  
